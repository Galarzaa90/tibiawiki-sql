{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#tibiawikisql","title":"TibiaWikiSQL","text":"<p>TibiaWikiSQL is a script that generates a SQLite database from TibiaWiki articles by using its API.</p> <p>This allows you to have all the data available at once, as well as take advantage of the features of a relational database.</p> <p>All information is gathered from TibiaWiki, visit and contribute to the project!</p> <p>If you use this into your project or use the generate data, make sure to credit them and their contributors.</p> <p></p> <p> </p>"},{"location":"intro/","title":"Introduction","text":"<p>TibiaWikiSQL works as a command-line interface, allowing passing parameters to customize the behaviour of the script.</p>"},{"location":"intro/#prerequisites","title":"Prerequisites","text":"<p>TibiaWikiSQL requires Python 3.10 or higher.</p>"},{"location":"intro/#installation","title":"Installation","text":"<p>This module can be installed from PyPi using:</p> <pre><code>python -m pip install -U tibiawikisql\n</code></pre>"},{"location":"intro/#usage","title":"Usage","text":""},{"location":"intro/#as-a-script","title":"As a script","text":"<p>Once the module has been installed, it can be run by using:</p> <pre><code>tibiawikisql\n</code></pre> <p>Or</p> <pre><code>python -m tibiawikisql\n</code></pre> <p>The generate script can be run using:</p> <pre><code>tibiawikisql generate\n</code></pre> <p>This fetches all the relevant articles from TibiaWiki and stores them in the datatabase.</p> <p>It accepts the following parameters:</p> <ul> <li><code>-s</code>/<code>--skip-images</code> Option to skip fetching and saving images.</li> <li><code>-db</code>/ <code>--db-name</code> The name of the generated database file. <code>tibiawiki.db</code> by default.</li> <li><code>-sd</code>/ <code>--skip-deprecated</code> Option to skip deprecated articles when parsing.</li> </ul> <p>The generated database is saved in the current directory, as well as a folder called <code>images</code> with all the fetched images.</p> <p>Subsequent calls will use the images in the directory instead of fetching them again, serving as an image cache.</p>"},{"location":"intro/#as-a-module","title":"As a module","text":"<p>TibiaWikiSQL can now be imported to be used as an API, whether to fetch live articles from TibiaWiki or to easily manage entities from the generated database.</p> <p>Note</p> <p>Due to the structure of TibiaWiki articles, with some content being rendered dynamically, some information is not available when live fetching, compared to fetching from the generated database.</p> <p>The following is an example of an article being obtained from TibiaWiki.</p> <pre><code>import tibiawikisql\narticle = tibiawikisql.WikiClient.get_article(\"Demon\")\n# creature now contains all the parsed information\ncreature = Creature.from_article(article)\n# This would result in None, since the article doesn't contain an item.\nitem = Item.from_article(article)\n</code></pre> <p>The following is an example of an article being obtained from the database.</p> <pre><code>import tibiawikisql\nimport sqlite3\n\n# Path to the previously generated database\nconn = sqlite3.connect(\"tibiawiki.db\")\n# creature now contains all the parsed information, including loot statistics.\ncreature = Creature.get_one_by_field(conn, \"title\", \"Demon\")\n# This would return a list of Item objects.\n# Note that when multiple objects are obtained, their child rows are not fetched.\nswords = Item.search(conn, \"type\", \"Sword Weapons\")\n</code></pre>"},{"location":"schema/","title":"Database","text":"<p>The SQLite database contains a series of tables dedicated to each of the model types. Following SQL best practices where possible.</p> <p>The database can be accessed through the API provided by this module, or directly any SQLite API using queries.</p> <p>The generated database has the following tables.</p>"},{"location":"schema/#tables","title":"Tables","text":"Table Description <code>achievement</code> Contains information for all achievements. <code>book</code> Contains information about books. <code>charm</code> Contains information for all charms. <code>creature</code> Contains information for all creatures. <code>creatureability</code> Contains all the abilities done by creatures. <code>creaturedrop</code> Contains all the items dropped by creatures. <code>creaturemaxdamage</code> Contains the breakdown of max damage done by creatures. <code>creaturesound</code> Contains all the sounds made by creatures. <code>databaseinfo</code> Contains information about the database itself. <code>gameupdate</code> Contains information about game updates. <code>house</code> Contains all houses and guildhalls. <code>imbuement</code> Contains information for all imbuements. <code>imbuementmaterial</code> Contains the item materials for imbuements. <code>item</code> Contains information for all items. <code>itemattribute</code> Contains extra attributes and properties of items that only apply to certain types. <code>itemkey</code> Contains the different key variations. <code>itemsound</code> Contains all the sounds made by items. <code>itemstoreoffer</code> Contains all offers for items in the Tibia store. <code>map</code> Contains the world map\u2019s images. <code>mount</code> Contains information for all mounts. <code>npc</code> Contains information for all NPCs. <code>npcdestination</code> Contains all the NPCs\u2019 travel destinations. <code>npcjob</code> Contains all the NPCs\u2019 jobs. <code>npcofferbuy</code> Contains all the NPCs\u2019 buy offers. <code>npcoffersell</code> Contains all the NPCs\u2019 sell offers. <code>npcrace</code> Contains all the NPCs\u2019 races. <code>npcspell</code> Contains all the spells NPCs teach. <code>outfit</code> Contains information for all outfits. <code>outfitimage</code> Contains images for all outfits. <code>outfitquest</code> Contains outfit and addon rewards for quests. <code>quest</code> Contains information for all quests. <code>questdanger</code> Contains creatures that can be found in a quest. <code>questreward</code> Contains item rewards for quests. <code>rashidposition</code> Contains the positions for the NPC Rashid every day of the week. <code>spell</code> Contains information for all spells. <code>world</code> Contains information for all worlds."},{"location":"schema/#table-schemas","title":"Table schemas","text":"<p>Note</p> <p>SQLite does not have an actual Boolean storage class. Instead, Boolean values are stored as integers 0 (false) and 1 (true).</p> <p>This is not much of an issue in Python, but it might be an issue on more strict typed languages.</p> <p>Note</p> <ul> <li>All columns are NULLABLE unless specified otherwise.</li> <li><code>PRIMARY</code> keys are always <code>NOT NULL</code>.</li> </ul>"},{"location":"schema/#achievement","title":"achievement","text":"Column Type Description article_id <code>INTEGER</code> / <code>PRIMARY</code> The ID of the article containing this achievement. title <code>TEXT</code> The title of the article containing the achievement. name <code>TEXT</code> The name of the achievement. grade <code>INTEGER</code> The grade of the achievement. Goes from 1 to 3. points <code>INTEGER</code> The number of points this achievement gives. description <code>TEXT</code> The official description shown for this achievement. spoiler <code>TEXT</code> Brief instructions on how to complete the quest. is_secret <code>BOOLEAN</code> Whether this is a secret achievement or not. is_premium <code>BOOLEAN</code> Whether this achievement requires premium. achievement_id <code>INTEGER</code> The internal ID of the achievement. version <code>TEXT</code> Client version this achievement was implemented in. status <code>TEXT</code> The status of the achievement in game. timestamp <code>TEXT</code> ISO8601 timestamp of the article's last edit."},{"location":"schema/#book","title":"book","text":"Column Type Description article_id <code>INTEGER</code> / <code>PRIMARY</code> The id of the article containing this book. title <code>TEXT</code> The title of the article containing this book. book_type <code>TEXT</code> The type of item this book can be found in. item_id <code>INTEGER</code> The item id of the book. name <code>TEXT</code> The name of the book. location <code>TEXT</code> Where the book can be found. blurb <code>TEXT</code> A short introduction text of the book. author <code>TEXT</code> The person that wrote the book, if known. prev_book <code>TEXT</code> If the book is part of a series, the book that precedes this one. next_book <code>TEXT</code> If the book is part of a series, the book that follows this one. text <code>TEXT</code> The content of the book. version <code>TEXT</code> The client version this key was introduced to the game. status <code>TEXT</code> The status of the key in game. timestamp <code>INTEGER</code> Unix timestamp of the article's last edit. <p>charm <pre><code>+------------+-------------+---------------------------------------------------------------------+\n|   Column   |    Type     |                             Description                             |\n+============+=============+=====================================================================+\n| article_id | ``INTEGER`` | The id of the article containing this charm.                        |\n|            | ``PRIMARY`` |                                                                     |\n+------------+-------------+---------------------------------------------------------------------+\n| title      | ``TEXT``    | The title of the article containing this charn.                     |\n+------------+-------------+---------------------------------------------------------------------+\n| name       | ``TEXT``    | The name of the charm.                                              |\n+------------+-------------+---------------------------------------------------------------------+\n| type       | ``TEXT``    | The type of the charm: ``Offensive``, ``Defensive`` or ``Passive``. |\n+------------+-------------+---------------------------------------------------------------------+\n| cost       | ``INTEGER`` | The number of charm points needed to unlock.                        |\n+------------+-------------+---------------------------------------------------------------------+\n| effect     | ``TEXT``    | The effect of this charm.                                           |\n+------------+-------------+---------------------------------------------------------------------+\n| version    | ``TEXT``    | Client version this charm  was implemented in.                      |\n+------------+-------------+---------------------------------------------------------------------+\n| image      | ``BLOB``    | The charm's image bytes.                                            |\n+------------+-------------+---------------------------------------------------------------------+\n| status     | ``TEXT``    | The status of the charm in game.                                    |\n+------------+-------------+---------------------------------------------------------------------+\n| timestamp  | ``INTEGER`` | Unix timestamp of the article's last edit.                          |\n+------------+-------------+---------------------------------------------------------------------+\n\n\ncreature\n~~~~~~~~~\n+---------------------+-------------+---------------------------------------------------------------+\n|       Column        |    Type     |                          Description                          |\n+=====================+=============+===============================================================+\n| article_id          | ``INTEGER`` | The id of the article containing this creature.               |\n|                     | ``PRIMARY`` |                                                               |\n+---------------------+-------------+---------------------------------------------------------------+\n| title               | ``TEXT``    | The title of the article containing this creature.            |\n+---------------------+-------------+---------------------------------------------------------------+\n| name                | ``TEXT``    | The name of the creature in-game.                             |\n+---------------------+-------------+---------------------------------------------------------------+\n| plural              | ``TEXT``    | The plural of the name.                                       |\n+---------------------+-------------+---------------------------------------------------------------+\n| library_race        | ``TEXT``    | The race name of the creature in Tibia.com's library.         |\n+---------------------+-------------+---------------------------------------------------------------+\n| article             | ``TEXT``    | The grammatical article before the creature\u2019s name.           |\n|                     |             | This is shown when looking at creatures.                      |\n|                     |             | Bosses have no article.                                       |\n+---------------------+-------------+---------------------------------------------------------------+\n| hitpoints           | ``INTEGER`` | The number of hitpoints the creature has.                     |\n|                     |             | May be ``NULL`` if unknown.                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| experience          | ``INTEGER`` | The number of experience the creature yields .                |\n|                     |             | May be ``NULL`` if unknown.                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| armor               | ``INTEGER`` | The armor value of the creature.                              |\n|                     |             | May be ``NULL`` if unknown.                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| speed               | ``INTEGER`` | The speed value of the creature.                              |\n|                     |             | May be ``NULL`` if unknown.                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| creature_class      | ``TEXT``    | The class this creature belongs to                            |\n|                     |             | (e.g. ``Demons``, ``Humanoids``,                              |\n|                     |             | ``Mammals``).                                                 |\n+---------------------+-------------+---------------------------------------------------------------+\n| creature_type       | ``TEXT``    | The type this creature belongs to                             |\n|                     |             | (e.g. ``Archdemons``, ``Dwarves``,                            |\n|                     |             | ``Apes``).                                                    |\n+---------------------+-------------+---------------------------------------------------------------+\n| type_secondary      | ``TEXT``    | A secondary type this creature belongs to, if any.            |\n+---------------------+-------------+---------------------------------------------------------------+\n| bestiary_class      | ``TEXT``    | The bestiary category of this                                 |\n|                     |             | creature. ``NULL`` for creatures                              |\n|                     |             | not in the bestiary.                                          |\n+---------------------+-------------+---------------------------------------------------------------+\n| bestiary_level      | ``TEXT``    | The bestiary level of this                                    |\n|                     |             | creature. ``NULL`` for creatures                              |\n|                     |             | not in the bestiary.                                          |\n+---------------------+-------------+---------------------------------------------------------------+\n| bestiary_occurrence | ``TEXT``    | The bestiary\u2019s rarity value of                                |\n|                     |             | this creature. ``NULL`` for                                   |\n|                     |             | creatures not in the bestiary.                                |\n+---------------------+-------------+---------------------------------------------------------------+\n| bosstiary_class     | ``TEXT``    | The bosstiary category of this                                |\n|                     |             | creature. ``NULL`` for creatures                              |\n|                     |             | not in the bestiary.                                          |\n+---------------------+-------------+---------------------------------------------------------------+\n| max_damage          | ``INTEGER`` | The maximum damage a creature may                             |\n|                     |             | deal if it were to use all it\u2019s                               |\n|                     |             | abilities at once. May be ``NULL`` if unknown.                |\n+---------------------+-------------+---------------------------------------------------------------+\n| runs_at             | ``INTEGER`` | The amount of hitpoints when the creature starts to run away. |\n|                     |             | 0 means it won't run away.                                    |\n+---------------------+-------------+---------------------------------------------------------------+\n| summon_cost         | ``INTEGER`` | The mana cost to summon this                                  |\n|                     |             | creature. ``0`` means it is not summonable.                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| convince_cost       | ``INTEGER`` | The mana cost to convince this                                |\n|                     |             | creature. ``0`` means it is not convincible.                  |\n+---------------------+-------------+---------------------------------------------------------------+\n| illusionable        | ``BOOLEAN`` | Whether the player can turn into                              |\n|                     |             | this creature with Creature Illusion.                         |\n+---------------------+-------------+---------------------------------------------------------------+\n| pushable            | ``BOOLEAN`` | Whether this creature can be pushed or not.                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| push_objects        | ``BOOLEAN`` | Whether this creature can push objects or not.                |\n+---------------------+-------------+---------------------------------------------------------------+\n| paralysable         | ``BOOLEAN`` | Whether this creature can be paralyzed or not.                |\n+---------------------+-------------+---------------------------------------------------------------+\n| sees_invisible      | ``BOOLEAN`` | Whether this creature can see                                 |\n|                     |             | invisible players or not.                                     |\n+---------------------+-------------+---------------------------------------------------------------+\n| boss                | ``BOOLEAN`` | Whether this creature is a boss or                            |\n|                     |             | not.                                                          |\n+---------------------+-------------+---------------------------------------------------------------+\n| modifier_physical   | ``INTEGER`` | Percentage of damage the creature                             |\n|                     |             | receives from this damage type.                               |\n|                     |             | ``0`` being completely immune,                                |\n|                     |             | ``100`` neutral. May be ``NULL``                              |\n|                     |             | if unknown.                                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| modifier_earth      | ``INTEGER`` | Percentage of damage the creature                             |\n|                     |             | receives from this damage type.                               |\n|                     |             | ``0`` being completely immune,                                |\n|                     |             | ``100`` neutral. May be ``NULL``                              |\n|                     |             | if unknown.                                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| modifier_fire       | ``INTEGER`` | Percentage of damage the creature                             |\n|                     |             | receives from this damage type.                               |\n|                     |             | ``0`` being completely immune,                                |\n|                     |             | ``100`` neutral. May be ``NULL``                              |\n|                     |             | if unknown.                                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| modifier_ice        | ``INTEGER`` | Percentage of damage the creature                             |\n|                     |             | receives from this damage type.                               |\n|                     |             | ``0`` being completely immune,                                |\n|                     |             | ``100`` neutral. May be ``NULL``                              |\n|                     |             | if unknown.                                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| modifier_energy     | ``INTEGER`` | Percentage of damage the creature                             |\n|                     |             | receives from this damage type.                               |\n|                     |             | ``0`` being completely immune,                                |\n|                     |             | ``100`` neutral. May be ``NULL``                              |\n|                     |             | if unknown.                                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| modifier_death      | ``INTEGER`` | Percentage of damage the creature                             |\n|                     |             | receives from this damage type.                               |\n|                     |             | ``0`` being completely immune,                                |\n|                     |             | ``100`` neutral. May be ``NULL``                              |\n|                     |             | if unknown.                                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| modifier_holy       | ``INTEGER`` | Percentage of damage the creature                             |\n|                     |             | receives from this damage type.                               |\n|                     |             | ``0`` being completely immune,                                |\n|                     |             | ``100`` neutral. May be ``NULL``                              |\n|                     |             | if unknown.                                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| modifier_drown      | ``INTEGER`` | Percentage of damage the creature                             |\n|                     |             | receives from this damage type.                               |\n|                     |             | ``0`` being completely immune,                                |\n|                     |             | ``100`` neutral. May be ``NULL``                              |\n|                     |             | if unknown.                                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| modifier_hpdrain    | ``INTEGER`` | Percentage of damage the creature                             |\n|                     |             | receives from this damage type.                               |\n|                     |             | ``0`` being completely immune,                                |\n|                     |             | ``100`` neutral. May be ``NULL``                              |\n|                     |             | if unknown.                                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| modifier_hpdrain    | ``INTEGER`` | The healing modifier. ``NULL`` if unknown.                    |\n+---------------------+-------------+---------------------------------------------------------------+\n| abilities           | ``TEXT``    | A summary of a creature\u2019s                                     |\n|                     |             | abilities (attacks, spells,                                   |\n|                     |             | healing).                                                     |\n+---------------------+-------------+---------------------------------------------------------------+\n| walks_through       | ``TEXT``    | The type of fields the creature                               |\n|                     |             | will walk through.                                            |\n+---------------------+-------------+---------------------------------------------------------------+\n| walks_around        | ``TEXT``    | The type of fields the creature                               |\n|                     |             | will walk around to avoid when                                |\n|                     |             | possible.                                                     |\n+---------------------+-------------+---------------------------------------------------------------+\n| location            | ``TEXT``    | The locations where the creature can be found.                |\n+---------------------+-------------+---------------------------------------------------------------+\n| version             | ``TEXT``    | The client version this creature                              |\n|                     |             | was introduced to the game.                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| image               | ``BLOB``    | The creature\u2019s image bytes.                                   |\n+---------------------+-------------+---------------------------------------------------------------+\n| status              | ``TEXT``    | The status of the creature in game.                           |\n+---------------------+-------------+---------------------------------------------------------------+\n| timestamp           | ``INTEGER`` | Unix timestamp of the article's last edit.                    |\n+---------------------+-------------+---------------------------------------------------------------+\n\n\ncreature_ability\n~~~~~~~~~~~~~~~~\n+-------------+-------------+-------------------------------------------------------------------------------------------+\n|   Column    |    Type     |                                        Description                                        |\n+=============+=============+===========================================================================================+\n| creature_id | ``INTEGER`` | The id of the creature that does this ability.                                            |\n+-------------+-------------+-------------------------------------------------------------------------------------------+\n| name        | ``TEXT``    | The name of th ability                                                                    |\n+-------------+-------------+-------------------------------------------------------------------------------------------+\n| effect      | ``TEXT``    | The effect of the ability, or the damage range.                                           |\n+-------------+-------------+-------------------------------------------------------------------------------------------+\n| element     | ``TEXT``    | The element of damage type of the ability. This could also be a status condition instead. |\n+-------------+-------------+-------------------------------------------------------------------------------------------+\n\ncreature_drop\n~~~~~~~~~~~~~\n+-------------+-------------+----------------------------------------------------------+\n|   Column    |    Type     |                       Description                        |\n+=============+=============+==========================================================+\n| creature_id | ``INTEGER`` | The id of the creature that yields this drop.            |\n+-------------+-------------+----------------------------------------------------------+\n| item_id     | ``INTEGER`` | The id of the dropped item.                              |\n+-------------+-------------+----------------------------------------------------------+\n| chance      | ``REAL``    | The chance percentage of this drop. ``NULL`` if unknown. |\n+-------------+-------------+----------------------------------------------------------+\n| min         | ``INTEGER`` | The minimum count of the dropped item.                   |\n+-------------+-------------+----------------------------------------------------------+\n| max         | ``INTEGER`` | The maximum count of the dropped item.                   |\n+-------------+-------------+----------------------------------------------------------+\n\n\ncreature_max_damage\n~~~~~~~~~~~~~~~~~~~\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n|   Column    |    Type     |                                                 Description                                                 |\n+=============+=============+=============================================================================================================+\n| creature_id | ``INTEGER`` | The id of the creature this max damage belongs to.                                                          |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| physical    | ``INTEGER`` | The maximum physical damage dealt by the creature.                                                          |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| physical    | ``INTEGER`` | The maximum physical damage dealt by the creature.                                                          |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| fire        | ``INTEGER`` | The maximum fire damage dealt by the creature.                                                              |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| ice         | ``INTEGER`` | The maximum ice damage dealt by the creature.                                                               |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| energy      | ``INTEGER`` | The maximum energy damage dealt by the creature.                                                            |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| earth       | ``INTEGER`` | The maximum earth damage dealt by the creature.                                                             |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| holy        | ``INTEGER`` | The maximum holy damage dealt by the creature.                                                              |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| death       | ``INTEGER`` | The maximum death damage dealt by the creature.                                                             |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| lifedrain   | ``INTEGER`` | The maximum life drain damage dealt by the creature.                                                        |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| manadrain   | ``INTEGER`` | The maximum mana drain damage dealt by the creature.                                                        |\n|             |             | The maximum manadrain damage dealt by the creature. This is not counted as part of the total.               |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| summons     | ``INTEGER`` | The maximum summons damage dealt by the creature. This is not coounted as part of the total.                |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n| total       | ``INTEGER`` | The maximum damage the creature can deal in a single turn.                                                  |\n|             |             | In most cases, this is simply the sum of the other damages, but in some cases, the amount may be different. |\n|             |             | If it is unknown, but the creature does deal damage, it will be -1.                                         |\n+-------------+-------------+-------------------------------------------------------------------------------------------------------------+\n\ncreature_sound\n~~~~~~~~~~~~~~\n+-------------+-------------+----------------------------------------------+\n|   Column    |    Type     |                 Description                  |\n+=============+=============+==============================================+\n| creature_id | ``INTEGER`` | The id of the creature that does this sound. |\n+-------------+-------------+----------------------------------------------+\n| content     | ``TEXT``    | The content of the sound.                    |\n+-------------+-------------+----------------------------------------------+\n\ndatabase_info\n~~~~~~~~~~~~~\n+--------+-------------+----------------------------------+\n| Column |    Type     |           Description            |\n+========+=============+==================================+\n| key    | ``INTEGER`` | The name of the value contained. |\n+--------+-------------+----------------------------------+\n| value  | ``INTEGER`` | The value of the property.       |\n+--------+-------------+----------------------------------+\n\ngame_update\n~~~~~~~~~~~\n+----------------+-------------+-------------------------------------------------------------+\n|     Column     |    Type     |                         Description                         |\n+================+=============+=============================================================+\n| article_id     | ``INTEGER`` | The id of the article containing this update.               |\n|                | ``PRIMARY`` |                                                             |\n+----------------+-------------+-------------------------------------------------------------+\n| title          | ``TEXT``    | The title of the article containing the update.             |\n+----------------+-------------+-------------------------------------------------------------+\n| name           | ``TEXT``    | The name of the update, if any.                             |\n+----------------+-------------+-------------------------------------------------------------+\n| date           | ``TEXT``    | The date when this update was released, in ISO 8601 format. |\n+----------------+-------------+-------------------------------------------------------------+\n| news_id        | ``INTEGER`` | The world's PvP type.                                       |\n+----------------+-------------+-------------------------------------------------------------+\n| type_primary   | ``TEXT``    | The primary type of the update.                             |\n+----------------+-------------+-------------------------------------------------------------+\n| type_secondary | ``TEXT``    | The secondary type of the update.                           |\n+----------------+-------------+-------------------------------------------------------------+\n| previous       | ``TEXT``    | The version before this update                              |\n+----------------+-------------+-------------------------------------------------------------+\n| next           | ``TEXT``    | The version after this update                               |\n+----------------+-------------+-------------------------------------------------------------+\n| version        | ``TEXT``    | The client version this update set.                         |\n+----------------+-------------+-------------------------------------------------------------+\n| summary        | ``TEXT``    | A brief summary of the update.                              |\n+----------------+-------------+-------------------------------------------------------------+\n| changelist     | ``TEXT``    | A brief list of the changes introduced.                     |\n+----------------+-------------+-------------------------------------------------------------+\n\nhouse\n</code></pre> +------------+-------------+-------------------------------------------------+ |   Column   |    Type     |                   Description                   | +============+=============+=================================================+ | article_id | <code>INTEGER</code> | The id of the article containing this house.    | |            | <code>PRIMARY</code> |                                                 | +------------+-------------+-------------------------------------------------+ | house_id   | <code>INTEGER</code> | The id of the house according to tibia.com.     | +------------+-------------+-------------------------------------------------+ | title      | <code>TEXT</code>    | The title of the article containing this house. | +------------+-------------+-------------------------------------------------+ | name       | <code>TEXT</code>    | The name of the house.                          | +------------+-------------+-------------------------------------------------+ | city       | <code>TEXT</code>    | The city the house belongs to.                  | +------------+-------------+-------------------------------------------------+ | street     | <code>TEXT</code>    | The street this house is located in.            | +------------+-------------+-------------------------------------------------+ | location   | <code>TEXT</code>    | A brief description of the house's location.    | +------------+-------------+-------------------------------------------------+ | beds       | <code>INTEGER</code> | The maximum amount of beds the house can have.  | +------------+-------------+-------------------------------------------------+ | rent       | <code>INTEGER</code> | The monthly rent of this house.                 | +------------+-------------+-------------------------------------------------+ | size       | <code>INTEGER</code> | The number of tiles this house has.             | +------------+-------------+-------------------------------------------------+ | rooms      | <code>INTEGER</code> | The number of rooms or divisions has.           | +------------+-------------+-------------------------------------------------+ | floors     | <code>INTEGER</code> | The number of floors this house has.            | +------------+-------------+-------------------------------------------------+ | x          | <code>INTEGER</code> | The x position of the house.                    | +------------+-------------+-------------------------------------------------+ | y          | <code>INTEGER</code> | The y position of the house.                    | +------------+-------------+-------------------------------------------------+ | z          | <code>INTEGER</code> | The z position of the house.                    | +------------+-------------+-------------------------------------------------+ | guildhall  | <code>BOOLEAN</code> | Whether this house is a guildhall or not.       | +------------+-------------+-------------------------------------------------+ | version    | <code>TEXT</code>    | The client version this was implemented in.     | +------------+-------------+-------------------------------------------------+ | status     | <code>TEXT</code>    | The status of the house in game.                | +------------+-------------+-------------------------------------------------+ | timestamp  | <code>INTEGER</code> | Unix timestamp of the article's last edit.      | +------------+-------------+-------------------------------------------------+</p> <p>imbuement <pre><code>+------------+-------------+----------------------------------------------------------------+\n|   Column   |    Type     |                          Description                           |\n+============+=============+================================================================+\n| article_id | ``INTEGER`` | The id of the article containing this imbuement.               |\n|            | ``PRIMARY`` |                                                                |\n+------------+-------------+----------------------------------------------------------------+\n| title      | ``TEXT``    | The title of the article containing this imbuement.            |\n+------------+-------------+----------------------------------------------------------------+\n| name       | ``TEXT``    | The name of the imbuement.                                     |\n+------------+-------------+----------------------------------------------------------------+\n| tier       | ``TEXT``    | The imbuement\u2019s tier: ``Basic``,  ``Intricate``, ``Powerful``. |\n+------------+-------------+----------------------------------------------------------------+\n| type       | ``TEXT``    | The imbuement\u2019s type, e.g.  ``Void``, ``Frost``, etc.          |\n+------------+-------------+----------------------------------------------------------------+\n| effect     | ``TEXT``    | The effect given by this imbuement.                            |\n+------------+-------------+----------------------------------------------------------------+\n| slots      | ``TEXT``    | The item types this imbuement can be applied to.               |\n+------------+-------------+----------------------------------------------------------------+\n| version    | ``TEXT``    | The client version this imbuement                              |\n|            |             | was introduced to the game.                                    |\n+------------+-------------+----------------------------------------------------------------+\n| image      | ``BLOB``    | The imbuement\u2019s image bytes.                                   |\n+------------+-------------+----------------------------------------------------------------+\n| status     | ``TEXT``    | The status of the imbuement in game.                           |\n+------------+-------------+----------------------------------------------------------------+\n| timestamp  | ``INTEGER`` | Unix timestamp of the article's last edit.                     |\n+------------+-------------+----------------------------------------------------------------+\n\nimbuement_material\n~~~~~~~~~~~~~~~~~~\n+--------------+-------------+--------------------------------------------------+\n|    Column    |    Type     |                   Description                    |\n+==============+=============+==================================================+\n| imbuement_id | ``INTEGER`` | The id of the imbuement this material belongs to |\n+--------------+-------------+--------------------------------------------------+\n| item_id      | ``INTEGER`` | The id of the item material.                     |\n+--------------+-------------+--------------------------------------------------+\n| amount       | ``INTEGER`` | The amount of items needed.                      |\n+--------------+-------------+--------------------------------------------------+\n\nitem\n~~~~\n+----------------+-------------+-------------------------------------------------------+\n|     Column     |    Type     |                      Description                      |\n+================+=============+=======================================================+\n| article_id     | ``INTEGER`` | The id of the article containing this item.           |\n|                | ``PRIMARY`` |                                                       |\n+----------------+-------------+-------------------------------------------------------+\n| title          | ``TEXT``    | The title of the article containing this item.        |\n+----------------+-------------+-------------------------------------------------------+\n| name           | ``TEXT``    | The actual name of the item in-game.                  |\n+----------------+-------------+-------------------------------------------------------+\n| plural         | ``TEXT``    | The plural of the item's name.                        |\n+----------------+-------------+-------------------------------------------------------+\n| marketable     | ``BOOLEAN`` | Whether this item can be traded in the market or not. |\n+----------------+-------------+-------------------------------------------------------+\n| stackable      | ``BOOLEAN`` | Whether this item is stackable or not.                |\n+----------------+-------------+-------------------------------------------------------+\n| pickupable     | ``BOOLEAN`` | Whether this item can be picked up or not.            |\n+----------------+-------------+-------------------------------------------------------+\n| value          | ``INTEGER`` | The maximum value of this item                        |\n|                |             | when sold to NPCs                                     |\n+----------------+-------------+-------------------------------------------------------+\n| price          | ``INTEGER`` | The maximum price of this item                        |\n|                |             | when bought from NPCs.                                |\n+----------------+-------------+-------------------------------------------------------+\n| weight         | ``REAL``    | The weight of this item in ounces.                    |\n+----------------+-------------+-------------------------------------------------------+\n| item_class     | ``TEXT``    | The class this item belongs to                        |\n|                |             | (e.g. ``Body Equipment`` , ``Weapons``).              |\n+----------------+-------------+-------------------------------------------------------+\n| item_type      | ``TEXT``    | The category this item belongs to                     |\n|                |             | (e.g. ``Helmets``, ``Club Weapons``).                 |\n+----------------+-------------+-------------------------------------------------------+\n| type_secondary | ``TEXT``    | A secondary type this item belongs to, if any.        |\n+----------------+-------------+-------------------------------------------------------+\n| flavor_text    | ``TEXT``    | The extra text that is displayed                      |\n|                |             | when some items are looked at.                        |\n+----------------+-------------+-------------------------------------------------------+\n| client_id      | ``INTEGER`` | The client id of the item.                            |\n+----------------+-------------+-------------------------------------------------------+\n| light_color    | ``INTEGER`` | The color of the light emitted by this item, if any.  |\n+----------------+-------------+-------------------------------------------------------+\n| light_radius   | ``INTEGER`` | The radius of the light emitted by this item, if any. |\n+----------------+-------------+-------------------------------------------------------+\n| version        | ``TEXT``    | The client version this item was                      |\n|                |             | introduced to the game.                               |\n+----------------+-------------+-------------------------------------------------------+\n| image          | ``BLOB``    | The item\u2019s image bytes.                               |\n+----------------+-------------+-------------------------------------------------------+\n| status         | ``TEXT``    | The status of the item in game.                       |\n+----------------+-------------+-------------------------------------------------------+\n| timestamp      | ``INTEGER`` | Unix timestamp of the article's last edit.            |\n+----------------+-------------+-------------------------------------------------------+\n\nitem_attribute\n~~~~~~~~~~~~~~\n+---------+-------------+-----------------------------------------------+\n| Column  |    Type     |                  Description                  |\n+=========+=============+===============================================+\n| item_id | ``INTEGER`` | The id of the item this attribute belongs to. |\n+---------+-------------+-----------------------------------------------+\n| name    | ``TEXT``    | The name of the attribute.                    |\n+---------+-------------+-----------------------------------------------+\n| value   | ``TEXT``    | The value of the attribute.                   |\n+---------+-------------+-----------------------------------------------+\n\nitem_key\n~~~~~~~~\n+------------+-------------+-----------------------------------------------+\n|   Column   |    Type     |                  Description                  |\n+============+=============+===============================================+\n| article_id | ``INTEGER`` | The id of the article containing this key.    |\n|            | ``PRIMARY`` |                                               |\n+------------+-------------+-----------------------------------------------+\n| title      | ``TEXT``    | The title of the article containing this key. |\n+------------+-------------+-----------------------------------------------+\n| number     | ``INTEGER`` | The number of this key, without padding       |\n|            |             | (e.g.\u00a0Key 0555\u2019s                              |\n|            |             | ``number`` would be ``555``).                 |\n+------------+-------------+-----------------------------------------------+\n| item_id    | ``INTEGER`` | The item id of the key.                       |\n+------------+-------------+-----------------------------------------------+\n| name       | ``TEXT``    | Name(s) this key usually receives by players. |\n+------------+-------------+-----------------------------------------------+\n| material   | ``TEXT``    | The material this key is made of.             |\n+------------+-------------+-----------------------------------------------+\n| location   | ``TEXT``    | General location of this key.                 |\n+------------+-------------+-----------------------------------------------+\n| origin     | ``TEXT``    | How this key is obtained.                     |\n+------------+-------------+-----------------------------------------------+\n| notes      | ``TEXT``    | Where this key is used or other notes.        |\n+------------+-------------+-----------------------------------------------+\n| version    | ``TEXT``    | The client version this key was               |\n|            |             | introduced to the game.                       |\n+------------+-------------+-----------------------------------------------+\n| status     | ``TEXT``    | The status of the key in game.                |\n+------------+-------------+-----------------------------------------------+\n| timestamp  | ``INTEGER`` | Unix timestamp of the article's last edit.    |\n+------------+-------------+-----------------------------------------------+\n\nitem_sound\n~~~~~~~~~~~\n+---------+-------------+------------------------------------------+\n| Column  |    Type     |               Description                |\n+=========+=============+==========================================+\n| item_id | ``INTEGER`` | The id of the item that does this sound. |\n+---------+-------------+------------------------------------------+\n| content | ``TEXT``    | The content of the sound.                |\n+---------+-------------+------------------------------------------+\n\nitem_store_offer\n~~~~~~~~~~~~~~~~\n+----------+-------------+--------------------------------------------------+\n|  Column  |    Type     |                   Description                    |\n+==========+=============+==================================================+\n| item_id  | ``INTEGER`` | The id of the item the offer is for              |\n+----------+-------------+--------------------------------------------------+\n| price    | ``INTEGER`` | The price of the item.                           |\n+----------+-------------+--------------------------------------------------+\n| amount   | ``INTEGER`` | The amount of the item offered.                  |\n+----------+-------------+--------------------------------------------------+\n| currency | ``TEXT``    | The currency used. Most of the time Tibia Coins. |\n+----------+-------------+--------------------------------------------------+\n\nmap\n~~~\n+--------+-------------+-----------------------------------------------------+\n| Column |    Type     |                     Description                     |\n+========+=============+=====================================================+\n| z      | ``INTEGER`` | The floor\u2019s level, where 7 is the ground floor.     |\n|        | ``PRIMARY`` |                                                     |\n+--------+-------------+-----------------------------------------------------+\n| image  | ``BLOB``    | The map\u2019s image for that that floor, in PNG format. |\n+--------+-------------+-----------------------------------------------------+\n\n\nmount\n~~~~~\n+---------------+-------------+-----------------------------------------------------------------+\n|    Column     |    Type     |                           Description                           |\n+===============+=============+=================================================================+\n| article_id    | ``INTEGER`` | The id of the article containing this mount.                    |\n|               | ``PRIMARY`` |                                                                 |\n+---------------+-------------+-----------------------------------------------------------------+\n| title         | ``TEXT``    | The title of the article containing the mount.                  |\n+---------------+-------------+-----------------------------------------------------------------+\n| name          | ``TEXT``    | The name of the mount.                                          |\n+---------------+-------------+-----------------------------------------------------------------+\n| speed         | ``INTEGER`` | The speed given by the mount.                                   |\n+---------------+-------------+-----------------------------------------------------------------+\n| taming_method | ``TEXT``    | A brief description on how the mount is obtained.               |\n+---------------+-------------+-----------------------------------------------------------------+\n| buyable       | ``BOOLEAN`` | Whether the mount can be bought from the store or not.          |\n+---------------+-------------+-----------------------------------------------------------------+\n| price         | ``INTEGER`` | The price in Tibia coins to buy the mount.                      |\n+---------------+-------------+-----------------------------------------------------------------+\n| achievement   | ``TEXT``    | The achievement obtained for obtaining this mount.              |\n+---------------+-------------+-----------------------------------------------------------------+\n| light_color   | ``INTEGER`` | The color of the light emitted by this mount, if any.           |\n+---------------+-------------+-----------------------------------------------------------------+\n| light_radius  | ``INTEGER`` | The radius of the light emitted by this mount, if any.          |\n+---------------+-------------+-----------------------------------------------------------------+\n| version       | ``TEXT``    | The client version where this mount was introduced to the game. |\n+---------------+-------------+-----------------------------------------------------------------+\n| image         | ``BLOB``    | The mount's image bytes.                                        |\n+---------------+-------------+-----------------------------------------------------------------+\n| status        | ``TEXT``    | The status of the mount in game.                                |\n+---------------+-------------+-----------------------------------------------------------------+\n| timestamp     | ``INTEGER`` | Unix timestamp of the article's last edit.                      |\n+---------------+-------------+-----------------------------------------------------------------+\n\nnpc\n~~~\n+-----------------+-------------+------------------------------------------------------+\n|     Column      |    Type     |                     Description                      |\n+=================+=============+======================================================+\n| article_id      | ``INTEGER`` | The id of the article containing this NPC.           |\n|                 | ``PRIMARY`` |                                                      |\n+-----------------+-------------+------------------------------------------------------+\n| title           | ``TEXT``    | The title of the article containing the NPC.         |\n+-----------------+-------------+------------------------------------------------------+\n| name            | ``TEXT``    | The actual name of the NPC in-game.                  |\n+-----------------+-------------+------------------------------------------------------+\n| gender          | ``TEXT``    | The gender of the NPC in-game.                       |\n+-----------------+-------------+------------------------------------------------------+\n| race            | ``TEXT``    | The race of the NPC in-game.                         |\n+-----------------+-------------+------------------------------------------------------+\n| job             | ``TEXT``    | The NPC job.                                         |\n+-----------------+-------------+------------------------------------------------------+\n| job_additionals | ``TEXT``    | Additional jobs the NPC has. A comma separated list. |\n+-----------------+-------------+------------------------------------------------------+\n| city            | ``TEXT``    | City where the NPC is found.                         |\n+-----------------+-------------+------------------------------------------------------+\n| location        | ``TEXT``    | The location where the NPC is found.                 |\n+-----------------+-------------+------------------------------------------------------+\n| x               | ``INTEGER`` | The x position where the NPC is usually located.     |\n+-----------------+-------------+------------------------------------------------------+\n| y               | ``INTEGER`` | The y position where the NPC is usually located.     |\n+-----------------+-------------+------------------------------------------------------+\n| z               | ``INTEGER`` | The z position where the NPC is usually located.     |\n+-----------------+-------------+------------------------------------------------------+\n| version         | ``TEXT``    | The client version this NPC was introduced to        |\n|                 |             | to the game.                                         |\n+-----------------+-------------+------------------------------------------------------+\n| image           | ``BLOB``    | The NPC's image bytes.                               |\n+-----------------+-------------+------------------------------------------------------+\n| status          | ``TEXT``    | The status of the NPC in game.                       |\n+-----------------+-------------+------------------------------------------------------+\n| timestamp       | ``INTEGER`` | Unix timestamp of the article's last edit.           |\n+-----------------+-------------+------------------------------------------------------+\n\nnpc_destination\n~~~~~~~~~~~~~~~\n+--------+-------------+------------------------------------+\n| Column |    Type     |            Description             |\n+========+=============+====================================+\n| npc_id | ``INTEGER`` | The id of the NPC this destination |\n|        |             | belongs to.                        |\n+--------+-------------+------------------------------------+\n| name   | ``TEXT``    | The name of the place this NPC can |\n|        |             | take you to.                       |\n+--------+-------------+------------------------------------+\n| price  | ``TEXT``    | The price to travel to the         |\n|        |             | destination with this NPC.         |\n+--------+-------------+------------------------------------+\n| notes  | ``INTEGER`` | Extra notes for this destination,  |\n|        |             | like extra requirements or         |\n|        |             | exceptions.                        |\n+--------+-------------+------------------------------------+\n\nnpc_job\n~~~~~~~\n+--------+-------------+------------------------------------+\n| Column |    Type     |            Description             |\n+========+=============+====================================+\n| npc_id | ``INTEGER`` | The id of the NPC this job is for. |\n+--------+-------------+------------------------------------+\n| name   | ``TEXT``    | The name of the job.               |\n+--------+-------------+------------------------------------+\n\nnpc_offer_buy\n~~~~~~~~~~~~~\n+----------+-------------+---------------------------------+\n|  Column  |    Type     |           Description           |\n+==========+=============+=================================+\n| npc_id   | ``INTEGER`` | The id of the NPC this offer    |\n|          |             | belongs to                      |\n+----------+-------------+---------------------------------+\n| item_id  | ``INTEGER`` | The id of the item this offer   |\n|          |             | refers to                       |\n+----------+-------------+---------------------------------+\n| value    | ``TEXT``    | The value of the offer          |\n+----------+-------------+---------------------------------+\n| currency | ``INTEGER`` | The id of the item used as      |\n|          |             | currency in this offer. In most |\n|          |             | cases this is the id of gold    |\n|          |             | coins.                          |\n+----------+-------------+---------------------------------+\n\nnpc_offer_sell\n~~~~~~~~~~~~~~\n+----------+-------------+---------------------------------+\n|  Column  |    Type     |           Description           |\n+==========+=============+=================================+\n| npc_id   | ``INTEGER`` | The id of the NPC this offer    |\n|          |             | belongs to                      |\n+----------+-------------+---------------------------------+\n| item_id  | ``INTEGER`` | The id of the item this offer   |\n|          |             | refers to                       |\n+----------+-------------+---------------------------------+\n| value    | ``TEXT``    | The value of the offer          |\n+----------+-------------+---------------------------------+\n| currency | ``INTEGER`` | The id of the item used as      |\n|          |             | currency in this offer. In most |\n|          |             | cases this is the id of gold    |\n|          |             | coins.                          |\n+----------+-------------+---------------------------------+\n\n\nnpc_race\n~~~~~~~~\n+--------+-------------+-------------------------------------+\n| Column |    Type     |             Description             |\n+========+=============+=====================================+\n| npc_id | ``INTEGER`` | The id of the NPC this race is for. |\n+--------+-------------+-------------------------------------+\n| name   | ``TEXT``    | The name of the race.               |\n+--------+-------------+-------------------------------------+\n\nnpc_spell\n</code></pre> +----------+-------------+--------------------------------------------+ |  Column  |    Type     |                Description                 | +==========+=============+============================================+ | npc_id   | <code>INTEGER</code> | The id of the NPC that teaches this spell. | +----------+-------------+--------------------------------------------+ | spell_id | <code>INTEGER</code> | The id of the spell this NPC teaches.      | +----------+-------------+--------------------------------------------+ | knight   | <code>BOOLEAN</code> | Whether this NPC teaches this spell to     | |          |             | knights.                                   | +----------+-------------+--------------------------------------------+ | sorcerer | <code>BOOLEAN</code> | Whether this NPC teaches this spell to     | |          |             | sorcerers.                                 | +----------+-------------+--------------------------------------------+ | druid    | <code>BOOLEAN</code> | Whether this NPC teaches this spell to     | |          |             | druids.                                    | +----------+-------------+--------------------------------------------+ | paladin  | <code>BOOLEAN</code> | Whether this NPC teaches this spell to     | |          |             | paladins.                                  | +----------+-------------+--------------------------------------------+</p> <p>outfit ~~~~~~ +-------------+-------------+------------------------------------------------------------+ |   Column    |    Type     |                        Description                         | +=============+=============+============================================================+ | article_id  | <code>INTEGER</code> | The id of the article containing this outfit.              | |             | <code>PRIMARY</code> |                                                            | +-------------+-------------+------------------------------------------------------------+ | title       | <code>TEXT</code>    | The title of the article containing the outfit.            | +-------------+-------------+------------------------------------------------------------+ | name        | <code>TEXT</code>    | The name of the outfit.                                    | +-------------+-------------+------------------------------------------------------------+ | type        | <code>TEXT</code>    | The type of outfit. Basic, Quest, Special, Premium.        | +-------------+-------------+------------------------------------------------------------+ | premium     | <code>BOOLEAN</code> | Whether this outfit is requires a premium account or not.  | +-------------+-------------+------------------------------------------------------------+ | bought      | <code>BOOLEAN</code> | Whether this outfit can be bought from the store.          | +-------------+-------------+------------------------------------------------------------+ | tournament  | <code>BOOLEAN</code> | Whether this outfit can be obtained with Tournament coins. | +-------------+-------------+------------------------------------------------------------+ | full_price  | <code>INTEGER</code> | The price of the full outfit in Tibia Coins.               | +-------------+-------------+------------------------------------------------------------+ | achievement | <code>INTEGER</code> | The achievement obtained by getting this full outfit.      | +-------------+-------------+------------------------------------------------------------+ | version     | <code>TEXT</code>    | Client version where this outfit was implemented.          | +-------------+-------------+------------------------------------------------------------+ | status      | <code>TEXT</code>    | The status of the iytfut in game.                          | +-------------+-------------+------------------------------------------------------------+ | timestamp   | <code>INTEGER</code> | Unix timestamp of the UTC time of                          | |             |             | the last edit made to this                                 | |             |             | article.                                                   | +-------------+-------------+------------------------------------------------------------+</p> <p>outfit_image ~~~~~~~~~~~~ +-----------+-------------+----------------------------------------+ |  Column   |    Type     |              Description               | +===========+=============+========================================+ | outfit_id | <code>INTEGER</code> | Id of the outfit this image belongs to | +-----------+-------------+----------------------------------------+ | sex       | <code>TEXT</code>    | The sex this outfit image is for.      | +-----------+-------------+----------------------------------------+ | addon     | <code>TEXT</code>    | The addon used in the image.           | +-----------+-------------+----------------------------------------+ | image     | <code>BLOB</code>    | The outfit's image's bytes.            | +-----------+-------------+----------------------------------------+</p> <p>outfit_quest ~~~~~~~~~~~~ +-----------+-------------+----------------------------------------------------+ |  Column   |    Type     |                    Description                     | +===========+=============+====================================================+ | outfit_id | <code>INTEGER</code> | Id of the outfit this image belongs to             | +-----------+-------------+----------------------------------------------------+ | quest_id  | <code>INTEGER</code> | Id of the quest this image belongs to              | +-----------+-------------+----------------------------------------------------+ | type      | <code>TEXT</code>    | Whether the quest is for the outfit or its addons. | +-----------+-------------+----------------------------------------------------+</p> <p>quest ~~~~~ +-------------------+-------------+-----------------------------------------------------------+ |      Column       |    Type     |                        Description                        | +===================+=============+===========================================================+ | article_id        | <code>INTEGER</code> | The id of the article containing this quest.              | |                   | <code>PRIMARY</code> |                                                           | +-------------------+-------------+-----------------------------------------------------------+ | title             | <code>TEXT</code>    | The title of the article containing the                   | |                   |             | quest.                                                    | +-------------------+-------------+-----------------------------------------------------------+ | name              | <code>TEXT</code>    | The name of the quest.                                    | +-------------------+-------------+-----------------------------------------------------------+ | location          | <code>TEXT</code>    | Location where the quest starts or                        | |                   |             | takes place.                                              | +-------------------+-------------+-----------------------------------------------------------+ | rookgaard         | <code>BOOLEAN</code> | Whether this quest is in Rookgaard or not.                | +-------------------+-------------+-----------------------------------------------------------+ | type              | <code>TEXT</code>    | The type of quest.                                        | +-------------------+-------------+-----------------------------------------------------------+ | quest_log         | <code>BOOLEAN</code> | Whether this quest is registered in the quest log or not. | +-------------------+-------------+-----------------------------------------------------------+ | legend            | <code>TEXT</code>    | Short description of the quest.                           | +-------------------+-------------+-----------------------------------------------------------+ | level_required    | <code>INTEGER</code> | The level required to finish the                          | |                   |             | quest.                                                    | +-------------------+-------------+-----------------------------------------------------------+ | level_recommended | <code>INTEGER</code> | The level recommended to finish                           | |                   |             | the quest.                                                | +-------------------+-------------+-----------------------------------------------------------+ | active_time       | <code>TEXT</code>    | Times of the year when this quest is active.              | +-------------------+-------------+-----------------------------------------------------------+ | estimated_time    | <code>TEXT</code>    | Estimated time to finish this quest.                      | +-------------------+-------------+-----------------------------------------------------------+ | premium           | <code>BOOLEAN</code> | Whether premium account is                                | |                   |             | required to finish the quest.                             | +-------------------+-------------+-----------------------------------------------------------+ | version           | <code>TEXT</code>    | Client version where this quest                           | |                   |             | was implemented.                                          | +-------------------+-------------+-----------------------------------------------------------+ | status            | <code>TEXT</code>    | The status of the quest in game.                          | +-------------------+-------------+-----------------------------------------------------------+ | timestamp         | <code>INTEGER</code> | Unix timestamp of the UTC time of                         | |                   |             | the last edit made to this                                | |                   |             | article.                                                  | +-------------------+-------------+-----------------------------------------------------------+</p> <p>quest_danger ~~~~~~~~~~~~ +-------------+-------------+-----------------------------------------+ |   Column    |    Type     |               Description               | +=============+=============+=========================================+ | quest_id    | <code>INTEGER</code> | Id of the quest this danger belongs to. | +-------------+-------------+-----------------------------------------+ | creature_id | <code>INTEGER</code> | Id of the creature found in this quest. | +-------------+-------------+-----------------------------------------+</p> <p>quest_reward ~~~~~~~~~~~~ +----------+-------------+-----------------------------------------+ |  Column  |    Type     |               Description               | +==========+=============+=========================================+ | quest_id | <code>INTEGER</code> | Id of the quest this reward belongs to. | +----------+-------------+-----------------------------------------+ | item_id  | <code>INTEGER</code> | Id of the item obtained in this quest.  | +----------+-------------+-----------------------------------------+</p> <p>rashid_position ~~~~~~~~~~~~~~~ +----------+-------------+------------------------------------------+ |  Column  |    Type     |               Description                | +==========+=============+==========================================+ | day      | <code>INTEGER</code> | Day of the week, where Monday is <code>0</code>.  | |          | <code>PRIMARY</code> |                                          | +----------+-------------+------------------------------------------+ | city     | <code>TEXT</code>    | Name of the city Rashid is located.      | +----------+-------------+------------------------------------------+ | location | <code>TEXT</code>    | Location where Rashid is that day.       | +----------+-------------+------------------------------------------+ | x        | <code>INTEGER</code> | The x position where Rashid is that day. | +----------+-------------+------------------------------------------+ | y        | <code>INTEGER</code> | The y position where Rashid is that day. | +----------+-------------+------------------------------------------+ | z        | <code>INTEGER</code> | The z position where Rashid is that day. | +----------+-------------+------------------------------------------+</p> <p>spell ~~~~~ +--------------------------+-------------+-------------------------------------------------------+ |          Column          |    Type     |                      Description                      | +==========================+=============+=======================================================+ | article_id               | <code>INTEGER</code> | The id of the article containing this achievement.    | |                          | <code>PRIMARY</code> |                                                       | +--------------------------+-------------+-------------------------------------------------------+ | title                    | <code>TEXT</code>    | The title of the article containing the achievement.  | +--------------------------+-------------+-------------------------------------------------------+ | name                     | <code>TEXT</code>    | The name of the spell.                                | +--------------------------+-------------+-------------------------------------------------------+ | words                    | <code>TEXT</code>    | The words used to cast the spell.                     | +--------------------------+-------------+-------------------------------------------------------+ | effect                   | <code>TEXT</code>    | The effect of this spell.                             | +--------------------------+-------------+-------------------------------------------------------+ | type                     | <code>TEXT</code>    | Whether the spell is <code>Instant</code> or a <code>Rune</code> spell. | +--------------------------+-------------+-------------------------------------------------------+ | group_spell              | <code>TEXT</code>    | The cooldown group of this spell.                     | +--------------------------+-------------+-------------------------------------------------------+ | group_rune               | <code>TEXT</code>    | The cooldown group of the rune created by this spell. | +--------------------------+-------------+-------------------------------------------------------+ | group_secondary          | <code>TEXT</code>    | The secondary cooldown group of this spell.           | +--------------------------+-------------+-------------------------------------------------------+ | element                  | <code>TEXT</code>    | The type of damage this spell deals, if applicable.   | +--------------------------+-------------+-------------------------------------------------------+ | level                    | <code>INTEGER</code> | Level required to cast this spell                     | |                          |             |                                                       | +--------------------------+-------------+-------------------------------------------------------+ | mana                     | <code>INTEGER</code> | Mana required to cast this spell.                     | |                          |             | <code>0</code> means special conditions apply.                 | +--------------------------+-------------+-------------------------------------------------------+ | soul                     | <code>INTEGER</code> | Soul points required to cast this spell.              | +--------------------------+-------------+-------------------------------------------------------+ | premium                  | <code>BOOLEAN</code> | Whether this spell requires                           | |                          |             | premium account or not. <code>0</code> or                      | |                          |             | <code>1</code>.                                                | +--------------------------+-------------+-------------------------------------------------------+ | promotion                | <code>BOOLEAN</code> | Whether this spell requires                           | |                          |             | a promotion or not. <code>0</code> or                          | |                          |             | <code>1</code>.                                                | +--------------------------+-------------+-------------------------------------------------------+ | price                    | <code>INTEGER</code> | Price in gold coins of this spell                     | |                          |             |                                                       | +--------------------------+-------------+-------------------------------------------------------+ | cooldown                 | <code>INTEGER</code> | The individual cooldown in seconds of this spell      | |                          |             |                                                       | +--------------------------+-------------+-------------------------------------------------------+ | cooldown_group           | <code>INTEGER</code> | The group cooldown of this spell.                     | |                          |             |                                                       | +--------------------------+-------------+-------------------------------------------------------+ | cooldown_group_secondary | <code>INTEGER</code> | The secondary group cooldown of this spell.           | |                          |             |                                                       | +--------------------------+-------------+-------------------------------------------------------+ | knight                   | <code>BOOLEAN</code> | Whether this spell can be used by                     | |                          |             | knights or not.                                       | +--------------------------+-------------+-------------------------------------------------------+ | sorcerer                 | <code>BOOLEAN</code> | Whether this spell can be used by                     | |                          |             | sorcerers or not.                                     | +--------------------------+-------------+-------------------------------------------------------+ | druid                    | <code>BOOLEAN</code> | Whether this spell can be used by                     | |                          |             | druids or not.                                        | +--------------------------+-------------+-------------------------------------------------------+ | paladin                  | <code>BOOLEAN</code> | Whether this spell can be used by                     | |                          |             | paladins or not.                                      | +--------------------------+-------------+-------------------------------------------------------+ | image                    | <code>BLOB</code>    | The spell\u2019s image bytes.                              | +--------------------------+-------------+-------------------------------------------------------+ | status                   | <code>TEXT</code>    | The status of the spell in game.                      | +--------------------------+-------------+-------------------------------------------------------+ | version                  | <code>TEXT</code>    | Client version where this quest was implemented.      | +--------------------------+-------------+-------------------------------------------------------+ | timestamp                | <code>INTEGER</code> | Unix timestamp of the article's last edit.            | +--------------------------+-------------+-------------------------------------------------------+</p> <p>world ~~~~~ +-----------------+-------------+------------------------------------------------------------------------------+ |     Column      |    Type     |                                 Description                                  | +=================+=============+==============================================================================+ | article_id      | <code>INTEGER</code> | The id of the article containing this world.                                 | |                 | <code>PRIMARY</code> |                                                                              | +-----------------+-------------+------------------------------------------------------------------------------+ | title           | <code>TEXT</code>    | The title of the article containing the world.                               | +-----------------+-------------+------------------------------------------------------------------------------+ | name            | <code>TEXT</code>    | The name of the world.                                                       | +-----------------+-------------+------------------------------------------------------------------------------+ | location        | <code>TEXT</code>    | The world's server's physical location.                                      | +-----------------+-------------+------------------------------------------------------------------------------+ | pvp_type        | <code>TEXT</code>    | The world's PvP type.                                                        | +-----------------+-------------+------------------------------------------------------------------------------+ | preview         | <code>BOOLEAN</code> | Whether the world is a preview world or not.                                 | +-----------------+-------------+------------------------------------------------------------------------------+ | experimental    | <code>BOOLEAN</code> | Whether the world is a experimental world or not.                            | +-----------------+-------------+------------------------------------------------------------------------------+ | online_since    | <code>TEXT</code>    | Date when the world became online for the first time, in ISO 8601 format.    | +-----------------+-------------+------------------------------------------------------------------------------+ | offline_since   | <code>TEXT</code>    | Date when the world went offline, in ISO 8601 format.                        | +-----------------+-------------+------------------------------------------------------------------------------+ | merged_into     | <code>TEXT</code>    | The name of the world this world got merged into, if applicable.             | +-----------------+-------------+------------------------------------------------------------------------------+ | battleye        | <code>BOOLEAN</code> | Whether the world is BattlEye protected or not.                              | +-----------------+-------------+------------------------------------------------------------------------------+ | battleye_type   | <code>TEXT</code>    | The type of battleye protection the world has (yellow or green).             | +-----------------+-------------+------------------------------------------------------------------------------+ | protected_since | <code>TEXT</code>    | Date when the world started being protected by BattlEye, in ISO 8601 format. | +-----------------+-------------+------------------------------------------------------------------------------+ | world_board     | <code>INTEGER</code> | The board ID for the world's board.                                          | +-----------------+-------------+------------------------------------------------------------------------------+ | trade_board     | <code>INTEGER</code> | The board ID for the world's trade board.                                    | +-----------------+-------------+------------------------------------------------------------------------------+ | timestamp       | <code>INTEGER</code> | Unix timestamp of the article's last edit.                                   | +-----------------+-------------+------------------------------------------------------------------------------+</p>"},{"location":"api/api/","title":"TibiaWiki API","text":""},{"location":"api/api/#tibiawikisql.api","title":"tibiawikisql.api","text":"<p>API to fetch information from TibiaWiki through MediaWiki's API.</p> <p>Classes:</p> Name Description <code>WikiEntry</code> <p>Represents a Wiki entry, such as an article or file.</p> <code>Article</code> <p>Represents a Wiki article.</p> <code>Image</code> <p>Represents an image info.</p> <code>WikiClient</code> <p>Contains methods to communicate with TibiaWiki's API.</p>"},{"location":"api/api/#tibiawikisql.api.WikiEntry","title":"WikiEntry  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a Wiki entry, such as an article or file.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a Wiki entry, such as an article or file.\",\n  \"properties\": {\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"article_id\",\n    \"title\",\n    \"timestamp\"\n  ],\n  \"title\": \"WikiEntry\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> </ul>"},{"location":"api/api/#tibiawikisql.api.WikiEntry.article_id","title":"article_id  <code>pydantic-field</code>","text":"<pre><code>article_id: int\n</code></pre> <p>The entry's ID.</p>"},{"location":"api/api/#tibiawikisql.api.WikiEntry.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str\n</code></pre> <p>The entry's title.</p>"},{"location":"api/api/#tibiawikisql.api.WikiEntry.timestamp","title":"timestamp  <code>pydantic-field</code>","text":"<pre><code>timestamp: datetime\n</code></pre> <p>The date of the entry's last edit.</p>"},{"location":"api/api/#tibiawikisql.api.WikiEntry.url","title":"url  <code>property</code>","text":"<pre><code>url: str\n</code></pre> <p>The URL to the article's display page.</p>"},{"location":"api/api/#tibiawikisql.api.WikiEntry.__eq__","title":"__eq__","text":"<pre><code>__eq__(other: object) -&gt; bool\n</code></pre> <p>Check for equality.</p> <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> if both objects are instances of this class and have the same <code>article_id</code>.</p> Source code in <code>tibiawikisql/api.py</code> <pre><code>def __eq__(self, other: object) -&gt; bool:\n    \"\"\"Check for equality.\n\n    Returns:\n        `True` if both objects are instances of this class and have the same `article_id`.\n\n    \"\"\"\n    if isinstance(other, self.__class__):\n        return self.article_id == other.article_id\n    return False\n</code></pre>"},{"location":"api/api/#tibiawikisql.api.Article","title":"Article  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code></p> <p>Represents a Wiki article.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a Wiki article.\",\n  \"properties\": {\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"content\": {\n      \"title\": \"Content\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"content\"\n  ],\n  \"title\": \"Article\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>content</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/api/#tibiawikisql.api.Article.content","title":"content  <code>pydantic-field</code>","text":"<pre><code>content: str\n</code></pre> <p>The article's source content.</p>"},{"location":"api/api/#tibiawikisql.api.Article.infobox_attributes","title":"infobox_attributes  <code>property</code>","text":"<pre><code>infobox_attributes: dict\n</code></pre> <p>Returns a mapping of the template attributes.</p>"},{"location":"api/api/#tibiawikisql.api.Article.article_id","title":"article_id  <code>pydantic-field</code>","text":"<pre><code>article_id: int\n</code></pre> <p>The entry's ID.</p>"},{"location":"api/api/#tibiawikisql.api.Article.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str\n</code></pre> <p>The entry's title.</p>"},{"location":"api/api/#tibiawikisql.api.Article.timestamp","title":"timestamp  <code>pydantic-field</code>","text":"<pre><code>timestamp: datetime\n</code></pre> <p>The date of the entry's last edit.</p>"},{"location":"api/api/#tibiawikisql.api.Article.url","title":"url  <code>property</code>","text":"<pre><code>url: str\n</code></pre> <p>The URL to the article's display page.</p>"},{"location":"api/api/#tibiawikisql.api.Article.__eq__","title":"__eq__","text":"<pre><code>__eq__(other: object) -&gt; bool\n</code></pre> <p>Check for equality.</p> <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> if both objects are instances of this class and have the same <code>article_id</code>.</p> Source code in <code>tibiawikisql/api.py</code> <pre><code>def __eq__(self, other: object) -&gt; bool:\n    \"\"\"Check for equality.\n\n    Returns:\n        `True` if both objects are instances of this class and have the same `article_id`.\n\n    \"\"\"\n    if isinstance(other, self.__class__):\n        return self.article_id == other.article_id\n    return False\n</code></pre>"},{"location":"api/api/#tibiawikisql.api.Image","title":"Image  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code></p> <p>Represents an image info.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents an image info.\",\n  \"properties\": {\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"file_url\": {\n      \"title\": \"File Url\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"file_url\"\n  ],\n  \"title\": \"Image\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>file_url</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/api/#tibiawikisql.api.Image.file_url","title":"file_url  <code>pydantic-field</code>","text":"<pre><code>file_url: str\n</code></pre> <p>The URL to the file.</p>"},{"location":"api/api/#tibiawikisql.api.Image.extension","title":"extension  <code>property</code>","text":"<pre><code>extension: str | None\n</code></pre> <p>The image's file extension.</p>"},{"location":"api/api/#tibiawikisql.api.Image.file_name","title":"file_name  <code>property</code>","text":"<pre><code>file_name: str\n</code></pre> <p>The image's file name.</p>"},{"location":"api/api/#tibiawikisql.api.Image.clean_name","title":"clean_name  <code>property</code>","text":"<pre><code>clean_name: str\n</code></pre> <p>The image's name without extension and prefix.</p>"},{"location":"api/api/#tibiawikisql.api.Image.article_id","title":"article_id  <code>pydantic-field</code>","text":"<pre><code>article_id: int\n</code></pre> <p>The entry's ID.</p>"},{"location":"api/api/#tibiawikisql.api.Image.title","title":"title  <code>pydantic-field</code>","text":"<pre><code>title: str\n</code></pre> <p>The entry's title.</p>"},{"location":"api/api/#tibiawikisql.api.Image.timestamp","title":"timestamp  <code>pydantic-field</code>","text":"<pre><code>timestamp: datetime\n</code></pre> <p>The date of the entry's last edit.</p>"},{"location":"api/api/#tibiawikisql.api.Image.url","title":"url  <code>property</code>","text":"<pre><code>url: str\n</code></pre> <p>The URL to the article's display page.</p>"},{"location":"api/api/#tibiawikisql.api.Image.__eq__","title":"__eq__","text":"<pre><code>__eq__(other: object) -&gt; bool\n</code></pre> <p>Check for equality.</p> <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> if both objects are instances of this class and have the same <code>article_id</code>.</p> Source code in <code>tibiawikisql/api.py</code> <pre><code>def __eq__(self, other: object) -&gt; bool:\n    \"\"\"Check for equality.\n\n    Returns:\n        `True` if both objects are instances of this class and have the same `article_id`.\n\n    \"\"\"\n    if isinstance(other, self.__class__):\n        return self.article_id == other.article_id\n    return False\n</code></pre>"},{"location":"api/api/#tibiawikisql.api.WikiClient","title":"WikiClient","text":"<pre><code>WikiClient()\n</code></pre> <p>Contains methods to communicate with TibiaWiki's API.</p> <p>Methods:</p> Name Description <code>get_category_members</code> <p>Create a generator that obtains entries in a certain category.</p> <code>get_category_members_titles</code> <p>Create a generator that obtains a list of article titles in a category.</p> <code>get_image_info</code> <p>Get an image's info.</p> <code>get_images_info</code> <p>Get the information of a list of image names.</p> <code>get_articles</code> <p>Create a generator that obtains a list of articles given their titles.</p> <code>get_article</code> <p>Get an article's info.</p> Source code in <code>tibiawikisql/api.py</code> <pre><code>def __init__(self) -&gt; None:\n    \"\"\"Creates a new instance of the client.\"\"\"\n    self.session = requests.Session()\n</code></pre>"},{"location":"api/api/#tibiawikisql.api.WikiClient.get_category_members","title":"get_category_members","text":"<pre><code>get_category_members(\n    name: str, skip_index: bool = True\n) -&gt; Generator[WikiEntry]\n</code></pre> <p>Create a generator that obtains entries in a certain category.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The category's name. <code>Category:</code> prefix is not necessary.</p> required <code>skip_index</code> <code>bool</code> <p>Whether to skip index articles or not.</p> <code>True</code> <p>Yields:</p> Type Description <code>Generator[WikiEntry]</code> <p>Articles in this category.</p> Source code in <code>tibiawikisql/api.py</code> <pre><code>def get_category_members(self, name: str, skip_index: bool = True) -&gt; Generator[WikiEntry]:\n    \"\"\"Create a generator that obtains entries in a certain category.\n\n    Args:\n        name: The category's name. ``Category:`` prefix is not necessary.\n        skip_index: Whether to skip index articles or not.\n\n    Yields:\n        Articles in this category.\n\n    \"\"\"\n    cmcontinue = None\n    params = {\n        \"action\": \"query\",\n        \"list\": \"categorymembers\",\n        \"cmtitle\": f\"Category:{name}\",\n        \"cmlimit\": 500,\n        \"cmtype\": \"page\",\n        \"cmprop\": \"ids|title|sortkeyprefix|timestamp\",\n        \"format\": \"json\",\n    }\n    while True:\n        params[\"cmcontinue\"] = cmcontinue\n        r = self.session.get(self.ENDPOINT, params=params)\n        data = json.loads(r.text)\n        for member in data[\"query\"][\"categorymembers\"]:\n            if member[\"sortkeyprefix\"] == \"*\" and skip_index:\n                continue\n            yield WikiEntry(\n                article_id=member[\"pageid\"],\n                title=member[\"title\"],\n                timestamp=member[\"timestamp\"],\n            )\n        try:\n            cmcontinue = data[\"continue\"][\"cmcontinue\"]\n        except KeyError:\n            # If there's no \"cmcontinue\", means we reached the end of the list.\n            break\n</code></pre>"},{"location":"api/api/#tibiawikisql.api.WikiClient.get_category_members_titles","title":"get_category_members_titles","text":"<pre><code>get_category_members_titles(\n    name: str, skip_index: bool = True\n) -&gt; Generator[str]\n</code></pre> <p>Create a generator that obtains a list of article titles in a category.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The category's name. <code>Category:</code> prefix is not necessary.</p> required <code>skip_index</code> <code>bool</code> <p>Whether to skip index articles or not.</p> <code>True</code> <p>Yields:</p> Type Description <code>Generator[str]</code> <p>Titles of articles in this category.</p> Source code in <code>tibiawikisql/api.py</code> <pre><code>def get_category_members_titles(self, name: str, skip_index: bool =True) -&gt; Generator[str]:\n    \"\"\"Create a generator that obtains a list of article titles in a category.\n\n    Args:\n        name: The category's name. ``Category:`` prefix is not necessary.\n        skip_index: Whether to skip index articles or not.\n\n    Yields:\n        Titles of articles in this category.\n\n    \"\"\"\n    for member in self.get_category_members(name, skip_index):\n        yield member.title\n</code></pre>"},{"location":"api/api/#tibiawikisql.api.WikiClient.get_image_info","title":"get_image_info","text":"<pre><code>get_image_info(name: str) -&gt; Image\n</code></pre> <p>Get an image's info.</p> <p>It is not required to prefix the name with <code>File:</code>, but the extension is required.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the image.</p> required <p>Returns:</p> Type Description <code>Image</code> <p>The image's information.</p> Source code in <code>tibiawikisql/api.py</code> <pre><code>def get_image_info(self, name: str) -&gt; Image:\n    \"\"\"Get an image's info.\n\n    It is not required to prefix the name with ``File:``, but the extension is required.\n\n    Args:\n        name: The name of the image.\n\n    Returns:\n        The image's information.\n\n    \"\"\"\n    gen = self.get_images_info([name])\n    return next(gen)\n</code></pre>"},{"location":"api/api/#tibiawikisql.api.WikiClient.get_images_info","title":"get_images_info","text":"<pre><code>get_images_info(\n    names: list[str],\n) -&gt; Generator[Image | None]\n</code></pre> <p>Get the information of a list of image names.</p> <p>It is not required to prefix the name with <code>File:</code>, but the extension is required.</p> Warning <p>The order of the returned images might not match the order of the provided names due to an API limitation.</p> <p>Parameters:</p> Name Type Description Default <code>names</code> <code>list[str]</code> <p>A list of names of images to get the info of.</p> required <p>Yields:</p> Type Description <code>Generator[Image | None]</code> <p>An image's information.</p> Source code in <code>tibiawikisql/api.py</code> <pre><code>def get_images_info(self, names: list[str]) -&gt; Generator[Image | None]:\n    \"\"\"Get the information of a list of image names.\n\n    It is not required to prefix the name with ``File:``, but the extension is required.\n\n    Warning:\n        The order of the returned images might not match the order of the provided names due to an API limitation.\n\n    Args:\n        names: A list of names of images to get the info of.\n\n    Yields:\n        An image's information.\n\n    \"\"\"\n    i = 0\n    params = {\n        \"action\": \"query\",\n        \"prop\": \"imageinfo\",\n        \"iiprop\": \"url|timestamp\",\n        \"format\": \"json\",\n    }\n    while True:\n        if i &gt;= len(names):\n            break\n        params[\"titles\"] = \"|\".join(f\"File:{n}\" for n in names[i:min(i + 50, len(names))])\n\n        r = self.session.get(self.ENDPOINT, params=params)\n        if r.status_code &gt;= 400:\n            continue\n        data = json.loads(r.text)\n        i += 50\n        for image_data in data[\"query\"][\"pages\"].values():\n            if \"missing\" in image_data:\n                yield None\n                continue\n            try:\n                yield Image(\n                    article_id=image_data[\"pageid\"],\n                    title=image_data[\"title\"],\n                    timestamp=image_data[\"imageinfo\"][0][\"timestamp\"],\n                    file_url=image_data[\"imageinfo\"][0][\"url\"],\n                )\n            except KeyError:\n                continue\n</code></pre>"},{"location":"api/api/#tibiawikisql.api.WikiClient.get_articles","title":"get_articles","text":"<pre><code>get_articles(names: list[str]) -&gt; Generator[Article | None]\n</code></pre> <p>Create a generator that obtains a list of articles given their titles.</p> Warning <p>The order of the returned articles might not match the order of the provided names due to an API limitation.</p> <p>Parameters:</p> Name Type Description Default <code>names</code> <code>list[str]</code> <p>A list of names of articles to get the info of.</p> required <p>Yields:</p> Type Description <code>Generator[Article | None]</code> <p>An article in the list of names.</p> Source code in <code>tibiawikisql/api.py</code> <pre><code>def get_articles(self, names: list[str]) -&gt; Generator[Article | None]:\n    \"\"\"Create a generator that obtains a list of articles given their titles.\n\n    Warning:\n        The order of the returned articles might not match the order of the provided names due to an API limitation.\n\n    Args:\n        names: A list of names of articles to get the info of.\n\n    Yields:\n        An article in the list of names.\n\n    \"\"\"\n    i = 0\n    params = {\n        \"action\": \"query\",\n        \"prop\": \"revisions\",\n        \"rvprop\": \"content|timestamp\",\n        \"format\": \"json\",\n    }\n    while True:\n        if i &gt;= len(names):\n            break\n        params[\"titles\"] = \"|\".join(names[i:min(i + 50, len(names))])\n        i += 50\n        r = self.session.get(self.ENDPOINT, params=params)\n        data = json.loads(r.text)\n        for article in data[\"query\"][\"pages\"].values():\n            if \"missing\" in article:\n                yield None\n                continue\n            yield Article(\n                article_id=article[\"pageid\"],\n                timestamp=article[\"revisions\"][0][\"timestamp\"],\n                title=article[\"title\"],\n                content=article[\"revisions\"][0][\"*\"],\n            )\n</code></pre>"},{"location":"api/api/#tibiawikisql.api.WikiClient.get_article","title":"get_article","text":"<pre><code>get_article(name: str) -&gt; Article\n</code></pre> <p>Get an article's info.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the Article.</p> required <p>Returns:</p> Type Description <code>Article</code> <p>The article matching the title.</p> Source code in <code>tibiawikisql/api.py</code> <pre><code>def get_article(self, name: str) -&gt; Article:\n    \"\"\"Get an article's info.\n\n    Args:\n        name: The name of the Article.\n\n    Returns:\n        The article matching the title.\n\n    \"\"\"\n    gen = self.get_articles([name])\n    return next(gen)\n</code></pre>"},{"location":"api/database/","title":"Database","text":""},{"location":"api/database/#tibiawikisql.database","title":"tibiawikisql.database","text":"<p>Contains all the SQL related model definitions.</p> <p>Classes:</p> Name Description <code>Column</code> <p>Represents a column in a SQL table.</p> <code>TableMeta</code> <p>Metaclass for table classes.</p> <code>Table</code> <p>Represents a SQL table.</p> <code>SQLType</code> <p>An SQL type definition.</p> <code>Timestamp</code> <p>A timestamp, represented as a ISO 8601 string.</p> <code>Date</code> <p>A date, represented as a ISO 8601 string.</p> <code>Integer</code> <p>Integer type.</p> <code>Real</code> <p>Real type.</p> <code>Text</code> <p>Text type.</p> <code>Blob</code> <p>Blob type.</p> <code>Boolean</code> <p>Boolean type.</p> <code>ForeignKey</code> <p>Defines a foreign key.</p>"},{"location":"api/database/#tibiawikisql.database.Column","title":"Column","text":"<pre><code>Column(\n    column_type: type[SQLType] | SQLType,\n    name: str | None = None,\n    *,\n    unique: bool = False,\n    primary_key: bool = False,\n    nullable: bool = True,\n    default: Any | None = None,\n    auto_increment: bool = False,\n    index: bool = False,\n    no_case: bool = False,\n)\n</code></pre> <p>Represents a column in a SQL table.</p> <p>Parameters:</p> Name Type Description Default <code>column_type</code> <code>type[SQLType] | SQLType</code> <p>The SQL type of the column.</p> required <code>name</code> <code>str | None</code> <p>The name of the column. If unset, it will get it from the attribute's name.</p> <code>None</code> <code>unique</code> <code>bool</code> <p>Whether to create a unique index for the column or not.</p> <code>False</code> <code>primary_key</code> <code>bool</code> <p>Whether the column is a primary key or not.</p> <code>False</code> <code>nullable</code> <code>bool</code> <p>Whether the class can be null or not.</p> <code>True</code> <code>default</code> <code>Any | None</code> <p>The default value of the column if undefined.</p> <code>None</code> <code>auto_increment</code> <code>bool</code> <p>Whether the value should auto increment or not.</p> <code>False</code> <code>index</code> <code>bool</code> <p>Whether the column is indexed or not.</p> <code>False</code> <code>no_case</code> <code>bool</code> <p>Whether the column should be case-insensitive or not.</p> <code>False</code> <p>Methods:</p> Name Description <code>get_column_definition</code> <p>Get the SQL definition of this column, as used in a <code>CREATE TABLE</code> statement.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def __init__(\n        self,\n        column_type: type[SQLType] | SQLType,\n        name: str | None = None,\n        *,\n        unique: bool = False,\n        primary_key: bool = False,\n        nullable: bool = True,\n        default: Any | None = None,\n        auto_increment: bool = False,\n        index: bool = False,\n        no_case: bool = False,\n) -&gt; None:\n    \"\"\"Create an instance of the class.\n\n    Args:\n        column_type: The SQL type of the column.\n        name: The name of the column. If unset, it will get it from the attribute's name.\n        unique: Whether to create a unique index for the column or not.\n        primary_key: Whether the column is a primary key or not.\n        nullable: Whether the class can be null or not.\n        default: The default value of the column if undefined.\n        auto_increment: Whether the value should auto increment or not.\n        index: Whether the column is indexed or not.\n        no_case: Whether the column should be case-insensitive or not.\n\n    \"\"\"\n    if inspect.isclass(column_type):\n        column_type = column_type()\n\n    if not isinstance(column_type, SQLType):\n        msg = \"Cannot have a non-SQLType derived column_type\"\n        raise SchemaError(msg)\n\n    self.column_type = column_type\n    self.index = index\n    self.unique = unique\n    self.primary_key = primary_key\n    self.nullable = nullable\n    self.default = default\n    self.name = name\n    self.auto_increment = auto_increment\n    self.no_case = no_case\n\n    if self.auto_increment:\n        self.primary_key = True\n\n    if self.primary_key:\n        self.nullable = False\n\n    if not isinstance(self.column_type, Integer) and self.auto_increment:\n        msg = \"Only Integer columns can be autoincrement\"\n        raise SchemaError(msg)\n\n    if sum(map(bool, (unique, primary_key, default is not None))) &gt; 1:\n        msg = \"'unique', 'primary_key', and 'default' are mutually exclusive.\"\n        raise SchemaError(msg)\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Column.get_column_definition","title":"get_column_definition","text":"<pre><code>get_column_definition() -&gt; str\n</code></pre> <p>Get the SQL definition of this column, as used in a <code>CREATE TABLE</code> statement.</p> <p>Returns:</p> Type Description <code>str</code> <p>The statement that defines the column.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def get_column_definition(self) -&gt; str:\n    \"\"\"Get the SQL definition of this column, as used in a `CREATE TABLE` statement.\n\n    Returns:\n        The statement that defines the column.\n\n    \"\"\"\n    builder = [self.name, self.column_type.to_sql()]\n\n    default = self.default\n    if default is not None:\n        builder.append(\"DEFAULT\")\n        if isinstance(default, str) and isinstance(self.column_type, Text):\n            builder.append(f\"'{default}'\")\n        elif isinstance(default, bool):\n            builder.append(str(int(default)))\n        else:\n            builder.append(str(default))\n    elif self.unique:\n        builder.append(\"UNIQUE\")\n\n    if self.auto_increment:\n        builder.append(\"AUTOINCREMENT\")\n\n    if not self.nullable:\n        builder.append(\"NOT NULL\")\n\n    if self.no_case:\n        builder.append(\"COLLATE NOCASE\")\n\n    return \" \".join(builder)\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.TableMeta","title":"TableMeta","text":"<pre><code>TableMeta(\n    name: str,\n    parents: tuple[type, ...],\n    dct: dict[str, Any],\n    **kwargs: Any,\n)\n</code></pre> <p>               Bases: <code>type</code></p> <p>Metaclass for table classes.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def __init__(cls, name: str, parents: tuple[type, ...], dct: dict[str, Any], **kwargs: Any) -&gt; None:\n    super().__init__(name, parents, dct)\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Table","title":"Table","text":"<p>Represents a SQL table.</p> <p>Methods:</p> Name Description <code>get_create_table_statement</code> <p>Generate the <code>CREATE TABLE</code> statement.</p> <code>all_tables</code> <p>Get a list of all defined tables.</p> <code>insert</code> <p>Insert a row into this table.</p> <code>get_drop_statement</code> <p>Get the SQL query to drop this table.</p> <code>get_one_by_field</code> <p>Get a row by a specific column's value.</p> <code>get_list_by_field</code> <p>Get a list of rows matching the specified field's value.</p>"},{"location":"api/database/#tibiawikisql.database.Table.get_create_table_statement","title":"get_create_table_statement  <code>classmethod</code>","text":"<pre><code>get_create_table_statement(\n    *, exists_ok: bool = True\n) -&gt; str\n</code></pre> <p>Generate the <code>CREATE TABLE</code> statement.</p> <p>Returns:</p> Type Description <code>str</code> <p>A SQL statement to create the table.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>@classmethod\ndef get_create_table_statement(cls, *, exists_ok: bool = True) -&gt; str:\n    \"\"\"Generate the `CREATE TABLE` statement.\n\n    Returns:\n        A SQL statement to create the table.\n\n    \"\"\"\n    statements = []\n    builder = [\"CREATE TABLE\"]\n\n    if exists_ok:\n        builder.append(\"IF NOT EXISTS\")\n\n    builder.append(cls.__tablename__)\n    column_creations = []\n    primary_keys = []\n    for col in cls.columns:\n        column_creations.append(col.get_column_definition())\n        if col.primary_key:\n            primary_keys.append(col.name)\n\n    if primary_keys:\n        column_creations.append(f'PRIMARY KEY ({\", \".join(primary_keys)})')\n    builder.append(f'({\", \".join(column_creations)})')\n    statements.append(\" \".join(builder) + \";\")\n\n    for column in cls.columns:\n        if column.index:\n            fmt = f\"CREATE INDEX IF NOT EXISTS {column.index_name} ON {cls.__tablename__} ({column.name});\"\n            statements.append(fmt)\n\n    return \"\\n\".join(statements)\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Table.all_tables","title":"all_tables  <code>classmethod</code>","text":"<pre><code>all_tables() -&gt; list[type[Table]]\n</code></pre> <p>Get a list of all defined tables.</p> <p>Returns:</p> Type Description <code>list[type[Table]]</code> <p>A list of defined tables in the schema.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>@classmethod\ndef all_tables(cls) -&gt; list[type[Table]]:\n    \"\"\"Get a list of all defined tables.\n\n    Returns:\n        A list of defined tables in the schema.\n\n    \"\"\"\n    return cls.__subclasses__()\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Table.insert","title":"insert  <code>classmethod</code>","text":"<pre><code>insert(conn: Connection | Cursor, **kwargs: Any) -&gt; None\n</code></pre> <p>Insert a row into this table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection to the database.</p> required <code>**kwargs</code> <code>Any</code> <p>The column values.</p> <code>{}</code> Source code in <code>tibiawikisql/database.py</code> <pre><code>@classmethod\ndef insert(cls, conn: Connection | Cursor, **kwargs: Any) -&gt; None:\n    \"\"\"Insert a row into this table.\n\n    Args:\n        conn: A connection to the database.\n        **kwargs: The column values.\n\n    \"\"\"\n    # verify column names:\n    verified = {}\n    for column in cls.columns:\n        try:\n            value = kwargs[column.name]\n        except KeyError:\n            continue\n\n        check = column.column_type.python\n        if value is None and not column.nullable:\n            msg = \"Cannot pass None to non-nullable column.\"\n            raise InvalidColumnValueError(cls, column, msg)\n        if (not check or not isinstance(value, check)) and value is not None:\n            msg = f\"Expected {check.__name__!r}, received {value.__class__.__name__!r}\"\n            raise InvalidColumnValueError(cls, column, msg)\n\n        verified[column.name] = column.column_type.to_sql_value(value)\n\n    sql = f\"INSERT INTO {cls.__tablename__} ({', '.join(verified)}) VALUES ({', '.join('?' for _ in verified)});\"\n    conn.execute(sql, tuple(verified.values()))\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Table.get_drop_statement","title":"get_drop_statement  <code>classmethod</code>","text":"<pre><code>get_drop_statement() -&gt; str\n</code></pre> <p>Get the SQL query to drop this table.</p> <p>Returns:</p> Type Description <code>str</code> <p>A SQL query to drop this table.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>@classmethod\ndef get_drop_statement(cls) -&gt; str:\n    \"\"\"Get the SQL query to drop this table.\n\n    Returns:\n        A SQL query to drop this table.\n    \"\"\"\n    return f\"DROP TABLE IF EXISTS {cls.__tablename__}\"\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Table.get_one_by_field","title":"get_one_by_field  <code>classmethod</code>","text":"<pre><code>get_one_by_field(\n    conn: Connection | Cursor,\n    column: str,\n    value: Any,\n    use_like: bool = False,\n) -&gt; Row | None\n</code></pre> <p>Get a row by a specific column's value.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A SQL connection.</p> required <code>column</code> <code>str</code> <p>The name of the column.</p> required <code>value</code> <code>Any</code> <p>The value to match it against.</p> required <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as an operator instead of <code>=</code>.</p> <code>False</code> <p>Returns:</p> Type Description <code>Row | None</code> <p>The matching row, or None.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>The specified column doesn't exist in the table.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>@classmethod\ndef get_one_by_field(\n        cls,\n        conn: Connection | Cursor,\n        column: str,\n        value: Any,\n        use_like: bool = False,\n) -&gt; Row | None:\n    \"\"\"Get a row by a specific column's value.\n\n    Args:\n        conn: A SQL connection.\n        column: The name of the column.\n        value: The value to match it against.\n        use_like: Whether to use ``LIKE`` as an operator instead of ``=``.\n\n    Returns:\n        The matching row, or [None][].\n\n    Raises:\n        ValueError: The specified column doesn't exist in the table.\n    \"\"\"\n    if column not in cls.column_map:\n        msg = f\"Column {column!r} doesn't exist\"\n        raise ValueError(msg)\n    q = (\n        Query.from_(cls.__table__)\n        .select(\"*\")\n        .where(cls.__table__[column].like(value) if use_like else cls.__table__[column].eq(value))\n    )\n    cursor = conn.cursor() if isinstance(conn, sqlite3.Connection) else conn\n    cursor.row_factory = Row\n    cursor.execute(q.get_sql())\n    return cursor.fetchone()\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Table.get_list_by_field","title":"get_list_by_field  <code>classmethod</code>","text":"<pre><code>get_list_by_field(\n    conn: Connection | Cursor,\n    column: str,\n    value: Any,\n    use_like: bool = False,\n    sort_by: str | None = None,\n    ascending: bool = True,\n    limit: int | None = None,\n    *,\n    base_query: Query | None = None,\n) -&gt; list[Row]\n</code></pre> <p>Get a list of rows matching the specified field's value.</p> <p>Note that this won't get values found in child tables.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A SQL connection.</p> required <code>column</code> <code>str</code> <p>The name of the column.</p> required <code>value</code> <code>Any</code> <p>The value to match it against.</p> required <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as an operator instead of <code>=</code>.</p> <code>False</code> <code>sort_by</code> <code>str | None</code> <p>The name of the field to sort by.</p> <code>None</code> <code>ascending</code> <code>bool</code> <p>Whether to sort ascending or descending.</p> <code>True</code> <code>limit</code> <code>int | None</code> <p>Only return up to this many rows.</p> <code>None</code> <p>Returns:</p> Type Description <code>list[Row]</code> <p>The matching row, or <code>None</code>.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>Tg</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>@classmethod\ndef get_list_by_field(\n        cls,\n        conn: Connection | Cursor,\n        column: str,\n        value: Any,\n        use_like: bool = False,\n        sort_by: str | None = None,\n        ascending: bool = True,\n        limit: int | None = None,\n        *,\n        base_query: Query | None = None,\n) -&gt; list[Row]:\n    \"\"\"Get a list of rows matching the specified field's value.\n\n    Note that this won't get values found in child tables.\n\n    Args:\n        conn: A SQL connection.\n        column: The name of the column.\n        value: The value to match it against.\n        use_like: Whether to use ``LIKE`` as an operator instead of ``=``.\n        sort_by: The name of the field to sort by.\n        ascending: Whether to sort ascending or descending.\n        limit: Only return up to this many rows.\n\n    Returns:\n        The matching row, or ``None``.\n\n    Raises:\n        ValueError: Tg\n    \"\"\"\n    if column not in cls.column_map:\n        msg = f\"Column {column!r} doesn't exist\"\n        raise ValueError(msg)\n    if sort_by and sort_by not in cls.column_map:\n        msg = f\"Column {sort_by!r} doesn't exist\"\n        raise ValueError(msg)\n    base_query = base_query or cls.get_base_select_query()\n    table = PTable(cls.__tablename__)\n    q = base_query.where(table[column].like(value) if use_like else table[column].eq(value))\n    if sort_by is not None:\n        q = q.orderby(sort_by, order=Order.asc if ascending else Order.desc)\n    if limit is not None:\n        q = q.limit(limit)\n    cursor = conn.cursor() if isinstance(conn, sqlite3.Connection) else conn\n    cursor.row_factory = sqlite3.Row\n    return list(cursor.execute(q.get_sql()))\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.SQLType","title":"SQLType","text":"<p>An SQL type definition.</p> <p>Methods:</p> Name Description <code>to_sql</code> <p>Get the name of the corresponding type in SQLite.</p> <code>to_sql_value</code> <p>Convert a value to its corresponding SQL value.</p> <p>Attributes:</p> Name Type Description <code>python</code> <code>type</code> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.SQLType.python","title":"python  <code>class-attribute</code>","text":"<pre><code>python: type = None\n</code></pre> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.SQLType.to_sql","title":"to_sql","text":"<pre><code>to_sql() -&gt; str\n</code></pre> <p>Get the name of the corresponding type in SQLite.</p> <p>Returns:</p> Type Description <code>str</code> <p>A string containing the type's definition.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql(self) -&gt; str:\n    \"\"\"Get the name of the corresponding type in SQLite.\n\n    Returns:\n        A string containing the type's definition.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.SQLType.to_sql_value","title":"to_sql_value","text":"<pre><code>to_sql_value(value) -&gt; Any\n</code></pre> <p>Convert a value to its corresponding SQL value.</p> <p>Returns:</p> Type Description <code>Any</code> <p>The corresponding value as expected by SQLite.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql_value(self, value) -&gt; Any:\n    \"\"\"Convert a value to its corresponding SQL value.\n\n    Returns:\n        The corresponding value as expected by SQLite.\n\n    \"\"\"\n    return value\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Timestamp","title":"Timestamp","text":"<p>               Bases: <code>SQLType</code></p> <p>A timestamp, represented as a ISO 8601 string.</p> <p>Methods:</p> Name Description <code>to_sql</code> <p>Get the name of the corresponding type in SQLite.</p> <code>to_sql_value</code> <p>Convert a value to its corresponding SQL value.</p> <p>Attributes:</p> Name Type Description <code>python</code> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Timestamp.python","title":"python  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>python = datetime\n</code></pre> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Timestamp.to_sql","title":"to_sql","text":"<pre><code>to_sql() -&gt; str\n</code></pre> <p>Get the name of the corresponding type in SQLite.</p> <p>Returns:</p> Type Description <code>str</code> <p>A string containing the type's definition.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql(self) -&gt; str:\n    return \"TEXT\"\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Timestamp.to_sql_value","title":"to_sql_value","text":"<pre><code>to_sql_value(value: datetime) -&gt; str\n</code></pre> <p>Convert a value to its corresponding SQL value.</p> <p>Returns:</p> Type Description <code>Any</code> <p>The corresponding value as expected by SQLite.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql_value(self, value: datetime.datetime) -&gt; str:\n    return value.isoformat()\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Date","title":"Date","text":"<p>               Bases: <code>SQLType</code></p> <p>A date, represented as a ISO 8601 string.</p> <p>Methods:</p> Name Description <code>to_sql</code> <p>Get the name of the corresponding type in SQLite.</p> <code>to_sql_value</code> <p>Convert a value to its corresponding SQL value.</p> <p>Attributes:</p> Name Type Description <code>python</code> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Date.python","title":"python  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>python = date\n</code></pre> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Date.to_sql","title":"to_sql","text":"<pre><code>to_sql() -&gt; str\n</code></pre> <p>Get the name of the corresponding type in SQLite.</p> <p>Returns:</p> Type Description <code>str</code> <p>A string containing the type's definition.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql(self) -&gt; str:\n    return \"TEXT\"\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Date.to_sql_value","title":"to_sql_value","text":"<pre><code>to_sql_value(value: date) -&gt; str\n</code></pre> <p>Convert a value to its corresponding SQL value.</p> <p>Returns:</p> Type Description <code>Any</code> <p>The corresponding value as expected by SQLite.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql_value(self, value: datetime.date) -&gt; str:\n    return value.isoformat()\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Integer","title":"Integer","text":"<p>               Bases: <code>SQLType</code></p> <p>Integer type.</p> <p>Methods:</p> Name Description <code>to_sql</code> <p>Get the name of the corresponding type in SQLite.</p> <p>Attributes:</p> Name Type Description <code>python</code> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Integer.python","title":"python  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>python = int\n</code></pre> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Integer.to_sql","title":"to_sql","text":"<pre><code>to_sql() -&gt; str\n</code></pre> <p>Get the name of the corresponding type in SQLite.</p> <p>Returns:</p> Type Description <code>str</code> <p>A string containing the type's definition.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql(self) -&gt; str:\n    return \"INTEGER\"\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Real","title":"Real","text":"<p>               Bases: <code>SQLType</code></p> <p>Real type.</p> <p>Methods:</p> Name Description <code>to_sql</code> <p>Get the name of the corresponding type in SQLite.</p> <p>Attributes:</p> Name Type Description <code>python</code> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Real.python","title":"python  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>python = float\n</code></pre> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Real.to_sql","title":"to_sql","text":"<pre><code>to_sql() -&gt; str\n</code></pre> <p>Get the name of the corresponding type in SQLite.</p> <p>Returns:</p> Type Description <code>str</code> <p>A string containing the type's definition.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql(self) -&gt; str:\n    return \"REAL\"\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Text","title":"Text","text":"<p>               Bases: <code>SQLType</code></p> <p>Text type.</p> <p>Methods:</p> Name Description <code>to_sql</code> <p>Get the name of the corresponding type in SQLite.</p> <p>Attributes:</p> Name Type Description <code>python</code> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Text.python","title":"python  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>python = str\n</code></pre> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Text.to_sql","title":"to_sql","text":"<pre><code>to_sql() -&gt; str\n</code></pre> <p>Get the name of the corresponding type in SQLite.</p> <p>Returns:</p> Type Description <code>str</code> <p>A string containing the type's definition.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql(self) -&gt; str:\n    return \"TEXT\"\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Blob","title":"Blob","text":"<p>               Bases: <code>SQLType</code></p> <p>Blob type.</p> <p>Methods:</p> Name Description <code>to_sql</code> <p>Get the name of the corresponding type in SQLite.</p> <p>Attributes:</p> Name Type Description <code>python</code> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Blob.python","title":"python  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>python = bytes\n</code></pre> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Blob.to_sql","title":"to_sql","text":"<pre><code>to_sql() -&gt; str\n</code></pre> <p>Get the name of the corresponding type in SQLite.</p> <p>Returns:</p> Type Description <code>str</code> <p>A string containing the type's definition.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql(self) -&gt; str:\n    return \"BLOB\"\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.Boolean","title":"Boolean","text":"<p>               Bases: <code>SQLType</code></p> <p>Boolean type.</p> <p>Methods:</p> Name Description <code>to_sql</code> <p>Get the name of the corresponding type in SQLite.</p> <p>Attributes:</p> Name Type Description <code>python</code> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Boolean.python","title":"python  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>python = bool\n</code></pre> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.Boolean.to_sql","title":"to_sql","text":"<pre><code>to_sql() -&gt; str\n</code></pre> <p>Get the name of the corresponding type in SQLite.</p> <p>Returns:</p> Type Description <code>str</code> <p>A string containing the type's definition.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql(self) -&gt; str:\n    return \"BOOLEAN\"\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.ForeignKey","title":"ForeignKey","text":"<pre><code>ForeignKey(\n    sql_type: type[SQLType], table: str, column: str\n)\n</code></pre> <p>               Bases: <code>SQLType</code></p> <p>Defines a foreign key.</p> <p>Parameters:</p> Name Type Description Default <code>sql_type</code> <code>type[SQLType]</code> <p>The SQL type of the column.</p> required <code>table</code> <code>str</code> <p>The name of the table that is referenced.</p> required <code>column</code> <code>str</code> <p>The name of the column from the reference table.</p> required <p>Methods:</p> Name Description <code>to_sql</code> <p>Get the name of the corresponding type in SQLite.</p> <p>Attributes:</p> Name Type Description <code>python</code> <p>The python class that represents this object.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def __init__(self, sql_type: type[SQLType], table: str, column: str) -&gt; None:\n    \"\"\"Create an instance of the class.\n\n    Args:\n        sql_type: The SQL type of the column.\n        table: The name of the table that is referenced.\n        column: The name of the column from the reference table.\n\n    \"\"\"\n    if not table or not isinstance(table, str):\n        msg = \"Missing table to reference (must be string)\"\n        raise SchemaError(msg)\n\n    self.table = table\n    self.column = column\n\n    if sql_type is None:\n        sql_type = Integer\n\n    if inspect.isclass(sql_type):\n        sql_type = sql_type()\n\n    if not isinstance(sql_type, SQLType):\n        msg = \"Cannot have non-SQLType derived sql_type\"\n        raise SchemaError(msg)\n\n    if not sql_type.is_real_type():\n        msg = \"`sql_type` must be an actual type\"\n        raise SchemaError(msg)\n\n    self.python = sql_type.python\n    self.sql_type = sql_type.to_sql()\n</code></pre>"},{"location":"api/database/#tibiawikisql.database.ForeignKey.python","title":"python  <code>instance-attribute</code>","text":"<pre><code>python = python\n</code></pre> <p>The python class that represents this object.</p>"},{"location":"api/database/#tibiawikisql.database.ForeignKey.to_sql","title":"to_sql","text":"<pre><code>to_sql()\n</code></pre> <p>Get the name of the corresponding type in SQLite.</p> <p>Returns:</p> Type Description <code>str</code> <p>A string containing the type's definition.</p> Source code in <code>tibiawikisql/database.py</code> <pre><code>def to_sql(self):\n    fmt = \"{0.sql_type} REFERENCES {0.table} ({0.column})\"\n    return fmt.format(self)\n</code></pre>"},{"location":"api/errors/","title":"Errors","text":""},{"location":"api/errors/#tibiawikisql.errors","title":"tibiawikisql.errors","text":"<p>Custom exceptions used by the package.</p> <p>Classes:</p> Name Description <code>TibiaWikiSqlError</code> <p>Base class for all exceptions raised by tibiawiki-sql.</p> <code>AttributeParsingError</code> <p>Error raised when trying to parse an attribute.</p> <code>ArticleParsingError</code> <p>Error raised when an article failed to be parsed.</p> <code>TemplateNotFoundError</code> <p>Error raised when the required template is not found in the article.</p> <code>DatabaseError</code> <p>Error raised when a database related error happens.</p> <code>InvalidColumnValueError</code> <p>Error raised when an invalid value is assigned to a column.</p> <code>SchemaError</code> <p>Error raised for invalid schema definitions.</p>"},{"location":"api/errors/#tibiawikisql.errors.TibiaWikiSqlError","title":"TibiaWikiSqlError","text":"<p>               Bases: <code>Exception</code></p> <p>Base class for all exceptions raised by tibiawiki-sql.</p>"},{"location":"api/errors/#tibiawikisql.errors.AttributeParsingError","title":"AttributeParsingError","text":"<pre><code>AttributeParsingError(cause: type[Exception])\n</code></pre> <p>               Bases: <code>TibiaWikiSqlError</code></p> <p>Error raised when trying to parse an attribute.</p> <p>Parameters:</p> Name Type Description Default <code>cause</code> <code>type[Exception]</code> <p>The exception that caused this.</p> required Source code in <code>tibiawikisql/errors.py</code> <pre><code>def __init__(self, cause: type[Exception]) -&gt; None:\n    \"\"\"Create an instance of the class.\n\n    Args:\n        cause: The exception that caused this.\n\n    \"\"\"\n    super().__init__(f\"{cause.__class__.__name__}: {cause}\")\n</code></pre>"},{"location":"api/errors/#tibiawikisql.errors.ArticleParsingError","title":"ArticleParsingError","text":"<pre><code>ArticleParsingError(\n    article: Article,\n    msg: str | None = None,\n    cause: type[Exception] | None = None,\n)\n</code></pre> <p>               Bases: <code>TibiaWikiSqlError</code></p> <p>Error raised when an article failed to be parsed.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article that failed to parse.</p> required <code>msg</code> <code>str | None</code> <p>An error message for the error.</p> <code>None</code> <code>cause</code> <code>type[Exception] | None</code> <p>The original exception that caused the parsing to fail.</p> <code>None</code> Source code in <code>tibiawikisql/errors.py</code> <pre><code>def __init__(self, article: Article, msg: str | None = None, cause: type[Exception] | None = None) -&gt; None:\n    \"\"\"Create an instance of the class.\n\n    Args:\n        article: The article that failed to parse.\n        msg: An error message for the error.\n        cause: The original exception that caused the parsing to fail.\n    \"\"\"\n    self.article = article\n    if cause:\n       msg = f\"Error parsing article: `{article.title}` | {cause.__class__.__name__}: {cause}\"\n    else:\n        msg = f\"Error parsing article: `{article.title}` | {msg}\"\n    super().__init__(msg)\n</code></pre>"},{"location":"api/errors/#tibiawikisql.errors.TemplateNotFoundError","title":"TemplateNotFoundError","text":"<pre><code>TemplateNotFoundError(\n    article: Article, parser: type[BaseParser]\n)\n</code></pre> <p>               Bases: <code>ArticleParsingError</code></p> <p>Error raised when the required template is not found in the article.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article that failed to parse.</p> required <code>parser</code> <code>type[BaseParser]</code> <p>The parser class used.</p> required Source code in <code>tibiawikisql/errors.py</code> <pre><code>def __init__(self, article: Article, parser: type[BaseParser]) -&gt; None:\n    \"\"\"Create an instance of the class.\n\n    Args:\n        article: The article that failed to parse.\n        parser: The parser class used.\n    \"\"\"\n    super().__init__(article, f\"Template `{parser.template_name}` not found.\")\n</code></pre>"},{"location":"api/errors/#tibiawikisql.errors.DatabaseError","title":"DatabaseError","text":"<p>               Bases: <code>TibiaWikiSqlError</code></p> <p>Error raised when a database related error happens.</p>"},{"location":"api/errors/#tibiawikisql.errors.InvalidColumnValueError","title":"InvalidColumnValueError","text":"<pre><code>InvalidColumnValueError(\n    table: type[Table], column: Column, message: str\n)\n</code></pre> <p>               Bases: <code>TibiaWikiSqlError</code></p> <p>Error raised when an invalid value is assigned to a column.</p> <p>Parameters:</p> Name Type Description Default <code>table</code> <code>type[Table]</code> <p>The table where the column is located.</p> required <code>column</code> <code>Column</code> <p>The column with the error.</p> required <code>message</code> <code>str</code> <p>A brief description of the error.</p> required Source code in <code>tibiawikisql/errors.py</code> <pre><code>def __init__(self, table: type[Table], column: Column, message: str) -&gt; None:\n    \"\"\"Create an instance of the class.\n\n    Args:\n        table: The table where the column is located.\n        column: The column with the error.\n        message: A brief description of the error.\n    \"\"\"\n    super().__init__(f\"Column {column.name!r} in table {table.__tablename__!r}: {message}\")\n    self.table = table\n    self.column = column\n</code></pre>"},{"location":"api/errors/#tibiawikisql.errors.SchemaError","title":"SchemaError","text":"<p>               Bases: <code>DatabaseError</code></p> <p>Error raised for invalid schema definitions.</p> Notes <p>This error is raised very early when running, to verify that classes are defined correctly, so it is not an error that should be seen when using the library.</p>"},{"location":"api/generation/","title":"Generation","text":""},{"location":"api/generation/#tibiawikisql.generation","title":"tibiawikisql.generation","text":"<p>Functions related to generating a database dump from TibiaWiki.</p> <p>Classes:</p> Name Description <code>Category</code> <p>Defines the article groups to be fetched.</p> <p>Functions:</p> Name Description <code>img_label</code> <p>Get the label to show in progress bars when iterating images.</p> <code>article_label</code> <p>Get the label to show in progress bar when iterating articles.</p> <code>constraint</code> <p>Limit a string to a certain length if exceeded.</p> <code>progress_bar</code> <p>Get a progress bar iterator.</p> <code>get_cache_info</code> <p>Get a mapping of the last edit times of images stored in the cache.</p> <code>save_cache_info</code> <p>Store the last edit times of images stored in the cache.</p> <code>fetch_image</code> <p>Fetch an image from TibiaWiki and saves it the disk.</p> <code>save_images</code> <p>Fetch and save the images of articles of a certain category.</p> <code>save_maps</code> <p>Save the map files from TibiaMaps GitHub repository.</p> <code>generate_outfit_image_names</code> <p>Generate the list of image names to extract for outfits, as well as their parametrized information.</p> <code>save_outfit_images</code> <p>Save outfit images into the database.</p> <code>fetch_category_entries</code> <p>Fetch a list of wiki entries in a certain category.</p> <code>fetch_images</code> <p>Fetch all images for fetched articles.</p> <code>generate_spell_offers</code> <p>Fetch and save the spell offers from the spell data module.</p> <p>Attributes:</p> Name Type Description <code>ConnCursor</code> <p>Type alias for both sqlite3 Cursor or Connection objects.</p> <code>OUTFIT_NAME_TEMPLATES</code> <p>The templates for image filenames for outfits.</p> <code>OUTFIT_ADDON_SEQUENCE</code> <p>The sequence of addon types to iterate.</p> <code>OUTFIT_SEX_SEQUENCE</code> <p>The sequence of outfit sexes to iterate.</p> <code>CATEGORIES</code> <p>The categories to fetch and generate objects for.</p>"},{"location":"api/generation/#tibiawikisql.generation.ConnCursor","title":"ConnCursor  <code>module-attribute</code>","text":"<pre><code>ConnCursor = Cursor | Connection\n</code></pre> <p>Type alias for both sqlite3 Cursor or Connection objects.</p>"},{"location":"api/generation/#tibiawikisql.generation.OUTFIT_NAME_TEMPLATES","title":"OUTFIT_NAME_TEMPLATES  <code>module-attribute</code>","text":"<pre><code>OUTFIT_NAME_TEMPLATES = [\n    \"Outfit %s Male.gif\",\n    \"Outfit %s Male Addon 1.gif\",\n    \"Outfit %s Male Addon 2.gif\",\n    \"Outfit %s Male Addon 3.gif\",\n    \"Outfit %s Female.gif\",\n    \"Outfit %s Female Addon 1.gif\",\n    \"Outfit %s Female Addon 2.gif\",\n    \"Outfit %s Female Addon 3.gif\",\n]\n</code></pre> <p>The templates for image filenames for outfits.</p>"},{"location":"api/generation/#tibiawikisql.generation.OUTFIT_ADDON_SEQUENCE","title":"OUTFIT_ADDON_SEQUENCE  <code>module-attribute</code>","text":"<pre><code>OUTFIT_ADDON_SEQUENCE = (0, 1, 2, 3) * 2\n</code></pre> <p>The sequence of addon types to iterate.</p>"},{"location":"api/generation/#tibiawikisql.generation.OUTFIT_SEX_SEQUENCE","title":"OUTFIT_SEX_SEQUENCE  <code>module-attribute</code>","text":"<pre><code>OUTFIT_SEX_SEQUENCE = ['Male'] * 4 + ['Female'] * 4\n</code></pre> <p>The sequence of outfit sexes to iterate.</p>"},{"location":"api/generation/#tibiawikisql.generation.CATEGORIES","title":"CATEGORIES  <code>module-attribute</code>","text":"<pre><code>CATEGORIES = {\n    \"achievements\": Category(\n        \"Achievements\", AchievementParser, no_images=True\n    ),\n    \"spells\": Category(\n        \"Spells\", SpellParser, generate_map=True\n    ),\n    \"items\": Category(\n        \"Objects\", ItemParser, generate_map=True\n    ),\n    \"creatures\": Category(\n        \"Creatures\", CreatureParser, generate_map=True\n    ),\n    \"books\": Category(\n        \"Book Texts\", BookParser, no_images=True\n    ),\n    \"keys\": Category(\"Keys\", KeyParser, no_images=True),\n    \"npcs\": Category(\"NPCs\", NpcParser, generate_map=True),\n    \"imbuements\": Category(\n        \"Imbuements\", ImbuementParser, extension=\".png\"\n    ),\n    \"quests\": Category(\n        \"Quest Overview Pages\", QuestParser, no_images=True\n    ),\n    \"house\": Category(\n        \"Player-Ownable Buildings\",\n        HouseParser,\n        no_images=True,\n    ),\n    \"charm\": Category(\n        \"Charms\", CharmParser, extension=\".png\"\n    ),\n    \"outfits\": Category(\n        \"Outfits\", OutfitParser, no_images=True\n    ),\n    \"worlds\": Category(\n        \"Game Worlds\",\n        WorldParser,\n        no_images=True,\n        include_deprecated=True,\n    ),\n    \"mounts\": Category(\"Mounts\", MountParser),\n    \"updates\": Category(\n        \"Updates\", UpdateParser, no_images=True\n    ),\n}\n</code></pre> <p>The categories to fetch and generate objects for.</p>"},{"location":"api/generation/#tibiawikisql.generation.Category","title":"Category","text":"<pre><code>Category(\n    name: str | None,\n    parser: type[BaseParser],\n    *,\n    no_images: bool = False,\n    extension: str = \".gif\",\n    include_deprecated: bool = False,\n    generate_map: bool = False,\n)\n</code></pre> <p>Defines the article groups to be fetched.</p> <p>Class for internal use only, for easier autocompletion and maintenance.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the TibiaWiki category containing the articles. Doesn't need the <code>Category:</code> prefix.</p> required <code>parser</code> <code>type[BaseParser]</code> <p>The parser class to use.</p> required <code>no_images</code> <code>bool</code> <p>Indicate that there is no image extraction from this category's items.</p> <code>False</code> <code>extension</code> <code>str</code> <p>The filename extension for images.</p> <code>'.gif'</code> <code>include_deprecated</code> <code>bool</code> <p>Whether to always include deprecated articles from this category.</p> <code>False</code> <code>generate_map</code> <code>bool</code> <p>Whether to generate a mapping of article names to their article instance for later processing.</p> <code>False</code> Source code in <code>tibiawikisql/generation.py</code> <pre><code>def __init__(\n        self,\n        name: str | None,\n        parser: type[BaseParser],\n        *,\n        no_images: bool = False,\n        extension: str = \".gif\",\n        include_deprecated: bool = False,\n        generate_map: bool = False,\n) -&gt; None:\n    \"\"\"Create a new instance of the class.\n\n    Args:\n        name: The name of the TibiaWiki category containing the articles. Doesn't need the `Category:` prefix.\n        parser: The parser class to use.\n        no_images: Indicate that there is no image extraction from this category's items.\n        extension: The filename extension for images.\n        include_deprecated: Whether to always include deprecated articles from this category.\n        generate_map: Whether to generate a mapping of article names to their article instance for later processing.\n\n    \"\"\"\n    self.name = name\n    self.parser = parser\n    self.no_images = no_images\n    self.extension = extension\n    self.include_deprecated = include_deprecated\n    self.generate_map = generate_map\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.img_label","title":"img_label","text":"<pre><code>img_label(item: Image | None) -&gt; str\n</code></pre> <p>Get the label to show in progress bars when iterating images.</p> <p>Parameters:</p> Name Type Description Default <code>item</code> <code>Image | None</code> <p>The image being iterated.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The name of the image's file or an empty string.</p> Source code in <code>tibiawikisql/generation.py</code> <pre><code>def img_label(item: Image | None) -&gt; str:\n    \"\"\"Get the label to show in progress bars when iterating images.\n\n    Args:\n        item: The image being iterated.\n\n    Returns:\n        The name of the image's file or an empty string.\n\n    \"\"\"\n    if item is None:\n        return \"\"\n    return item.clean_name\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.article_label","title":"article_label","text":"<pre><code>article_label(item: Article | None) -&gt; str\n</code></pre> <p>Get the label to show in progress bar when iterating articles.</p> <p>Parameters:</p> Name Type Description Default <code>item</code> <code>Article | None</code> <p>The article being iterated.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The name of the image's file or an empty string.</p> Source code in <code>tibiawikisql/generation.py</code> <pre><code>def article_label(item: Article | None) -&gt; str:\n    \"\"\"Get the label to show in progress bar when iterating articles.\n\n    Args:\n        item: The article being iterated.\n\n    Returns:\n        The name of the image's file or an empty string.\n\n    \"\"\"\n    if item is None:\n        return \"\"\n    return constraint(item.title, 25)\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.constraint","title":"constraint","text":"<pre><code>constraint(value: str, limit: int) -&gt; str\n</code></pre> <p>Limit a string to a certain length if exceeded.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>The string to constraint the length of.</p> required <code>limit</code> <code>int</code> <p>The length limit.</p> required <p>Returns:</p> Type Description <code>str</code> <p>If the string exceeds the limit, the same string is returned, otherwise it is cropped.</p> Source code in <code>tibiawikisql/generation.py</code> <pre><code>def constraint(value: str, limit: int) -&gt; str:\n    \"\"\"Limit a string to a certain length if exceeded.\n\n    Args:\n        value: The string to constraint the length of.\n        limit: The length limit.\n\n    Returns:\n        If the string exceeds the limit, the same string is returned, otherwise it is cropped.\n    \"\"\"\n    if len(value) &lt;= limit:\n        return value\n    return value[:limit - 1] + \"\u2026\"\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.progress_bar","title":"progress_bar","text":"<pre><code>progress_bar(\n    iterable: Iterable[V] | None = None,\n    length: int | None = None,\n    label: str | None = None,\n    item_show_func: Callable[[V | None], str | None]\n    | None = None,\n    info_sep: str = \"  \",\n    width: int = 36,\n) -&gt; ProgressBar[V]\n</code></pre> <p>Get a progress bar iterator.</p> Source code in <code>tibiawikisql/generation.py</code> <pre><code>def progress_bar(\n        iterable: Iterable[V] | None = None,\n        length: int | None = None,\n        label: str | None = None,\n        item_show_func: Callable[[V | None], str | None] | None = None,\n        info_sep: str = \"  \",\n        width: int = 36,\n) -&gt; ProgressBar[V]:\n    \"\"\"Get a progress bar iterator.\"\"\"\n    return click.progressbar(\n        iterable,\n        length,\n        label,\n        True,  # noqa: FBT003\n        True,  # noqa: FBT003\n        True,  # noqa: FBT003\n        item_show_func,\n        \"\u2588\",\n        \"\u2591\",\n        f\"%(label)s {Fore.YELLOW}%(bar)s{Style.RESET_ALL} %(info)s\",\n        info_sep,\n        width,\n    )\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.get_cache_info","title":"get_cache_info","text":"<pre><code>get_cache_info(folder_name: str) -&gt; dict[str, datetime]\n</code></pre> <p>Get a mapping of the last edit times of images stored in the cache.</p> <p>Parameters:</p> Name Type Description Default <code>folder_name</code> <code>str</code> <p>The name of the folder containing the stored images.</p> required <p>Returns:</p> Type Description <code>dict[str, datetime]</code> <p>A dictionary, where each key is an image filename and its value is its upload date to the wiki.</p> Source code in <code>tibiawikisql/generation.py</code> <pre><code>def get_cache_info(folder_name: str) -&gt; dict[str, datetime.datetime]:\n    \"\"\"Get a mapping of the last edit times of images stored in the cache.\n\n    Args:\n        folder_name: The name of the folder containing the stored images.\n\n    Returns:\n        A dictionary, where each key is an image filename and its value is its upload date to the wiki.\n\n    \"\"\"\n    try:\n        with open(f\"images/{folder_name}/cache_info.json\") as f:\n            data = json.load(f)\n            return {k: datetime.datetime.fromisoformat(v) for k, v in data.items()}\n    except (FileNotFoundError, json.JSONDecodeError):\n        return {}\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.save_cache_info","title":"save_cache_info","text":"<pre><code>save_cache_info(\n    folder_name: str, cache_info: dict[str, datetime]\n) -&gt; None\n</code></pre> <p>Store the last edit times of images stored in the cache.</p> <p>Parameters:</p> Name Type Description Default <code>folder_name</code> <code>str</code> <p>The name of the folder containing the stored images.</p> required <code>cache_info</code> <code>dict[str, datetime]</code> <p>A mapping of file names to their last upload date.</p> required Source code in <code>tibiawikisql/generation.py</code> <pre><code>def save_cache_info(folder_name: str, cache_info: dict[str, datetime.datetime]) -&gt; None:\n    \"\"\"Store the last edit times of images stored in the cache.\n\n    Args:\n        folder_name: The name of the folder containing the stored images.\n        cache_info: A mapping of file names to their last upload date.\n\n    \"\"\"\n    with open(f\"images/{folder_name}/cache_info.json\", \"w\") as f:\n        json.dump({k: v.isoformat() for k, v in cache_info.items()}, f)\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.fetch_image","title":"fetch_image","text":"<pre><code>fetch_image(\n    session: Session, folder: str, image: Image\n) -&gt; bytes\n</code></pre> <p>Fetch an image from TibiaWiki and saves it the disk.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>Session</code> <p>The request session to use to fetch the image.</p> required <code>folder</code> <code>str</code> <p>The folder where the images will be stored locally.</p> required <code>image</code> <code>Image</code> <p>The image data.</p> required <p>Returns:</p> Type Description <code>bytes</code> <p>The bytes of the image.</p> Source code in <code>tibiawikisql/generation.py</code> <pre><code>def fetch_image(session: requests.Session, folder: str, image: Image) -&gt; bytes:\n    \"\"\"Fetch an image from TibiaWiki and saves it the disk.\n\n    Args:\n        session:\n            The request session to use to fetch the image.\n        folder:\n            The folder where the images will be stored locally.\n        image:\n            The image data.\n\n    Returns:\n        The bytes of the image.\n\n    \"\"\"\n    r = session.get(image.file_url)\n    r.raise_for_status()\n    image_bytes = r.content\n    with open(f\"images/{folder}/{image.file_name}\", \"wb\") as f:\n        f.write(image_bytes)\n    return image_bytes\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.save_images","title":"save_images","text":"<pre><code>save_images(\n    conn: Connection, key: str, value: Category\n) -&gt; None\n</code></pre> <p>Fetch and save the images of articles of a certain category.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection</code> <p>Connection to the database.</p> required <code>key</code> <code>str</code> <p>The name of the data store key to use.</p> required <code>value</code> <code>Category</code> <p>The category of the images.</p> required Source code in <code>tibiawikisql/generation.py</code> <pre><code>def save_images(conn: sqlite3.Connection, key: str, value: Category) -&gt; None:\n    \"\"\"Fetch and save the images of articles of a certain category.\n\n    Args:\n        conn: Connection to the database.\n        key: The name of the data store key to use.\n        value: The category of the images.\n\n    \"\"\"\n    extension = value.extension\n    table = value.parser.table.__tablename__\n    column = \"title\"\n    results = conn.execute(f\"SELECT {column} FROM {table}\")\n    titles = [f\"{r[0]}{extension}\" for r in results]\n    os.makedirs(f\"images/{table}\", exist_ok=True)\n    cache_info = get_cache_info(table)\n    cache_count = 0\n    fetch_count = 0\n    failed = []\n    generator = wiki_client.get_images_info(titles)\n    session = requests.Session()\n    with (\n        timed() as t,\n        progress_bar(generator, len(titles), f\"Fetching {key} images\", item_show_func=img_label) as bar,\n    ):\n        for image in bar:  # type: Image\n            if image is None:\n                continue\n            try:\n                last_update = cache_info.get(image.file_name)\n                if last_update is None or image.timestamp &gt; last_update:\n                    image_bytes = fetch_image(session, table, image)\n                    fetch_count += 1\n                    cache_info[image.file_name] = image.timestamp\n                else:\n                    with open(f\"images/{table}/{image.file_name}\", \"rb\") as f:\n                        image_bytes = f.read()\n                    cache_count += 1\n            except FileNotFoundError:\n                image_bytes = fetch_image(session, table, image)\n                fetch_count += 1\n                cache_info[image.file_name] = image.timestamp\n            except requests.HTTPError:\n                failed.append(image.file_name)\n                continue\n            conn.execute(f\"UPDATE {table} SET image = ? WHERE {column} = ?\", (image_bytes, image.clean_name))\n        save_cache_info(table, cache_info)\n    if failed:\n        click.echo(f\"{Style.RESET_ALL}\\tCould not fetch {len(failed):,} images.{Style.RESET_ALL}\")\n        click.echo(f\"\\t-&gt; {Style.RESET_ALL}{f'{Style.RESET_ALL},{Style.RESET_ALL}'.join(failed)}{Style.RESET_ALL}\")\n    click.echo(f\"{Fore.GREEN}\\tSaved {key} images in {t.elapsed:.2f} seconds.\"\n               f\"\\n\\t{fetch_count:,} fetched, {cache_count:,} from cache.{Style.RESET_ALL}\")\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.save_maps","title":"save_maps","text":"<pre><code>save_maps(con: ConnCursor) -&gt; None\n</code></pre> <p>Save the map files from TibiaMaps GitHub repository.</p> <p>Parameters:</p> Name Type Description Default <code>con</code> <code>ConnCursor</code> <p>A connection or cursor to the database.</p> required Source code in <code>tibiawikisql/generation.py</code> <pre><code>def save_maps(con: ConnCursor) -&gt; None:\n    \"\"\"Save the map files from TibiaMaps GitHub repository.\n\n    Args:\n        con: A connection or cursor to the database.\n\n    \"\"\"\n    url = \"https://tibiamaps.github.io/tibia-map-data/floor-{0:02d}-map.png\"\n    os.makedirs(\"images/map\", exist_ok=True)\n    for z in range(16):\n        try:\n            with open(f\"images/map/{z}.png\", \"rb\") as f:\n                image = f.read()\n        except FileNotFoundError:\n            r = requests.get(url.format(z))\n            r.raise_for_status()\n            image = r.content\n            with open(f\"images/map/{z}.png\", \"wb\") as f:\n                f.write(image)\n        except requests.HTTPError:\n            continue\n        con.execute(\"INSERT INTO map(z, image) VALUES(?,?)\", (z, image))\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.generate_outfit_image_names","title":"generate_outfit_image_names","text":"<pre><code>generate_outfit_image_names(\n    rows: list[tuple[int, str]],\n) -&gt; tuple[list[str], dict[str, tuple[int, int, str]]]\n</code></pre> <p>Generate the list of image names to extract for outfits, as well as their parametrized information.</p> <p>Parameters:</p> Name Type Description Default <code>rows</code> <code>list[tuple[int, str]]</code> <p>A list of article ID and title pairs.</p> required <p>Returns:</p> Name Type Description <code>titles</code> <code>list[str]</code> <p>A list of filenames to download.</p> <code>image_info</code> <code>dict[str, tuple[int, int, str]]</code> <p>A mapping of file names to their article ID, addon type and outfit sex.</p> Source code in <code>tibiawikisql/generation.py</code> <pre><code>def generate_outfit_image_names(rows: list[tuple[int, str]]) -&gt; tuple[list[str], dict[str, tuple[int, int, str]]]:\n    \"\"\"Generate the list of image names to extract for outfits, as well as their parametrized information.\n\n    Args:\n        rows: A list of article ID and title pairs.\n\n    Returns:\n        titles: A list of filenames to download.\n        image_info: A mapping of file names to their article ID, addon type and outfit sex.\n\n    \"\"\"\n    titles = []\n    image_info = {}\n    for article_id, name in rows:\n        for i, image_name in enumerate(OUTFIT_NAME_TEMPLATES):\n            file_name = image_name % name\n            image_info[file_name] = (article_id, OUTFIT_ADDON_SEQUENCE[i], OUTFIT_SEX_SEQUENCE[i])\n            titles.append(file_name)\n    return titles, image_info\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.save_outfit_images","title":"save_outfit_images","text":"<pre><code>save_outfit_images(conn: ConnCursor) -&gt; None\n</code></pre> <p>Save outfit images into the database.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>ConnCursor</code> <p>A connection or cursor to the database.</p> required Source code in <code>tibiawikisql/generation.py</code> <pre><code>def save_outfit_images(conn: ConnCursor) -&gt; None:\n    \"\"\"Save outfit images into the database.\n\n    Args:\n        conn: A connection or cursor to the database.\n\n    \"\"\"\n    parser = OutfitParser\n    table = parser.table.__tablename__\n    os.makedirs(f\"images/{table}\", exist_ok=True)\n    try:\n        results = conn.execute(f\"SELECT article_id, name FROM {table}\")\n    except sqlite3.Error:\n        results = []\n    if not results:\n        return\n\n    cache_info = get_cache_info(table)\n    titles, image_info = generate_outfit_image_names(results)\n\n    session = requests.Session()\n    generator = wiki_client.get_images_info(titles)\n    cache_count = 0\n    fetch_count = 0\n    failed = []\n    with (\n        timed() as t,\n        progress_bar(generator, len(titles), \"Fetching outfit images\", item_show_func=img_label) as bar,\n    ):\n        for image in bar:\n            if image is None:\n                continue\n            try:\n                last_update = cache_info.get(image.file_name)\n                if last_update is None or image.timestamp &gt; last_update:\n                    image_bytes = fetch_image(session, table, image)\n                    fetch_count += 1\n                    cache_info[image.file_name] = image.timestamp\n                else:\n                    with open(f\"images/{table}/{image.file_name}\", \"rb\") as f:\n                        image_bytes = f.read()\n                    cache_count += 1\n            except FileNotFoundError:\n                image_bytes = fetch_image(session, table, image)\n                fetch_count += 1\n                cache_info[image.file_name] = image.timestamp\n            except requests.HTTPError:\n                failed.append(image.file_name)\n                continue\n            article_id, addons, sex = image_info[image.file_name]\n            conn.execute(\"INSERT INTO outfit_image(outfit_id, addon, sex, image) VALUES(?, ?, ?, ?)\",\n                         (article_id, addons, sex, image_bytes))\n        save_cache_info(table, cache_info)\n    if failed:\n        click.echo(f\"{Style.RESET_ALL}\\tCould not fetch {len(failed):,} images.{Style.RESET_ALL}\")\n        click.echo(f\"\\t-&gt; {Style.RESET_ALL}{f'{Style.RESET_ALL},{Style.RESET_ALL}'.join(failed)}{Style.RESET_ALL}\")\n    click.echo(f\"{Fore.GREEN}\\tSaved outfit images in {t.elapsed:.2f} seconds.\"\n               f\"\\n\\t{fetch_count:,} fetched, {cache_count:,} from cache.{Style.RESET_ALL}\")\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.fetch_category_entries","title":"fetch_category_entries","text":"<pre><code>fetch_category_entries(\n    category: str, exclude_titles: set[str] | None = None\n) -&gt; list[WikiEntry]\n</code></pre> <p>Fetch a list of wiki entries in a certain category.</p> <p>Parameters:</p> Name Type Description Default <code>category</code> <code>str</code> <p>The name of the TibiaWiki category.</p> required <code>exclude_titles</code> <code>set[str] | None</code> <p>Exclude articles matching these titles.</p> <code>None</code> <p>Returns:</p> Type Description <code>list[WikiEntry]</code> <p>A list of entries contained in the category.</p> Source code in <code>tibiawikisql/generation.py</code> <pre><code>def fetch_category_entries(category: str, exclude_titles: set[str] | None = None) -&gt; list[WikiEntry]:\n    \"\"\"Fetch a list of wiki entries in a certain category.\n\n    Args:\n        category: The name of the TibiaWiki category.\n        exclude_titles: Exclude articles matching these titles.\n\n    Returns:\n        A list of entries contained in the category.\n\n    \"\"\"\n    click.echo(f\"Fetching articles in {Fore.BLUE}Category:{category}{Style.RESET_ALL}...\")\n    entries = []\n    with timed() as t:\n        for entry in wiki_client.get_category_members(category):\n            if exclude_titles and entry.title in exclude_titles:\n                continue\n            if entry.title.startswith(\"User:\") or entry.title.startswith(\"TibiaWiki:\"):\n                continue\n            entries.append(entry)\n    click.echo(f\"\\t{Fore.GREEN}Found {len(entries):,} articles in {t.elapsed:.2f} seconds.{Style.RESET_ALL}\")\n    return entries\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.fetch_images","title":"fetch_images","text":"<pre><code>fetch_images(conn: Connection) -&gt; None\n</code></pre> <p>Fetch all images for fetched articles.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection</code> <p>A connection to the database.</p> required Source code in <code>tibiawikisql/generation.py</code> <pre><code>def fetch_images(conn: sqlite3.Connection) -&gt; None:\n    \"\"\"Fetch all images for fetched articles.\n\n    Args:\n        conn: A connection to the database.\n\n    \"\"\"\n    with conn:\n        for key, value in CATEGORIES.items():\n            if value.no_images:\n                continue\n            save_images(conn, key, value)\n        save_outfit_images(conn)\n        save_maps(conn)\n</code></pre>"},{"location":"api/generation/#tibiawikisql.generation.generate_spell_offers","title":"generate_spell_offers","text":"<pre><code>generate_spell_offers(\n    conn: Connection, data_store: dict[str, Any]\n) -&gt; None\n</code></pre> <p>Fetch and save the spell offers from the spell data module.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection</code> <p>A connection to the database.</p> required <code>data_store</code> <code>dict[str, Any]</code> <p>The data store containing information about generated articles.</p> required Source code in <code>tibiawikisql/generation.py</code> <pre><code>def generate_spell_offers(conn: sqlite3.Connection, data_store: dict[str, Any]) -&gt; None:\n    \"\"\"Fetch and save the spell offers from the spell data module.\n\n    Args:\n        conn: A connection to the database.\n        data_store: The data store containing information about generated articles.\n\n    \"\"\"\n    if \"npcs_map\" not in data_store or \"spells_map\" not in data_store:\n        return\n    article = wiki_client.get_article(\"Module:ItemPrices/spelldata\")\n    spell_offers = parse_spell_data(article.content)\n    rows = []\n    not_found_store = defaultdict(set)\n    with (\n        timed() as t,\n        progress_bar(spell_offers, len(spell_offers), \"Processing spell offers\") as bar,\n    ):\n        for npc, spell, knight, paladin, druid, sorcerer, monk in bar:\n            spell_id = data_store[\"spells_map\"].get(spell.lower())\n            if spell_id is None:\n                not_found_store[\"spell\"].add(spell)\n                continue\n            npc_id = data_store[\"npcs_map\"].get(npc.lower())\n            if npc_id is None:\n                not_found_store[\"npc\"].add(npc)\n                continue\n            rows.append((\n                npc_id,\n                spell_id,\n                knight,\n                sorcerer,\n                paladin,\n                druid,\n                monk,\n            ))\n        with conn:\n            conn.execute(\"DELETE FROM npc_spell\")\n            conn.executemany(\n                \"INSERT INTO npc_spell(npc_id, spell_id, knight, sorcerer, paladin, druid, monk) VALUES(?, ?, ?, ?, ?, ?, ?)\",\n                rows)\n        if not_found_store[\"spell\"]:\n            unknonw_spells = not_found_store[\"spell\"]\n            click.echo(f\"{Fore.RED}Could not parse offers for {len(unknonw_spells):,} spell.{Style.RESET_ALL}\")\n            click.echo(f\"\\t-&gt; {Fore.RED}{f'{Style.RESET_ALL},{Fore.RED}'.join(unknonw_spells)}{Style.RESET_ALL}\")\n        if not_found_store[\"npc\"]:\n            unknown_npcs = not_found_store[\"npc\"]\n            click.echo(f\"{Fore.RED}Could not parse offers of {len(unknown_npcs):,} npcs.{Style.RESET_ALL}\")\n            click.echo(f\"\\t-&gt; {Fore.RED}{f'{Style.RESET_ALL},{Fore.RED}'.join(unknown_npcs)}{Style.RESET_ALL}\")\n</code></pre>"},{"location":"api/parsers/","title":"Parsers","text":""},{"location":"api/parsers/#tibiawikisql.parsers.base","title":"tibiawikisql.parsers.base","text":"<p>Classes:</p> Name Description <code>AttributeParser</code> <p>Defines how to parser an attribute from a Wiki article into a python object.</p> <code>ParserMeta</code> <p>Metaclass for all parsers.</p> <code>BaseParser</code> <p>Base class that defines how to extract information from a Wiki template into a model.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.base.AttributeParser","title":"AttributeParser","text":"<pre><code>AttributeParser(\n    func: Callable[[dict[str, str]], T], fallback: D = ...\n)\n</code></pre> <p>               Bases: <code>Generic[T]</code></p> <p>Defines how to parser an attribute from a Wiki article into a python object.</p> <p>Parameters:</p> Name Type Description Default <code>func</code> <code>Callable[[dict[str, str]], T]</code> <p>A callable that takes the template's attributes as a parameter and returns a value.</p> required <code>fallback</code> <code>D</code> <p>Fallback value to set if the value is not found or the callable failed.</p> <code>...</code> <p>Methods:</p> Name Description <code>__call__</code> <p>Perform parsing on the defined attribute.</p> <code>required</code> <p>Define a required attribute.</p> <code>optional</code> <p>Create optional attribute parser. Will fall back to None.</p> <code>status</code> <p>Create a parser for the commonly found \"status\" parameter.</p> <code>version</code> <p>Create a parser for the commonly found \"implemented\" parameter.</p> Source code in <code>tibiawikisql/parsers/base.py</code> <pre><code>def __init__(self, func: Callable[[dict[str, str]], T], fallback: D = ...) -&gt; None:\n    \"\"\"Create an instance of the class.\n\n    Args:\n        func: A callable that takes the template's attributes as a parameter and returns a value.\n        fallback: Fallback value to set if the value is not found or the callable failed.\n\n    \"\"\"\n    self.func = func\n    self.fallback = fallback\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.base.AttributeParser.__call__","title":"__call__","text":"<pre><code>__call__(attributes: dict[str, str]) -&gt; T | D\n</code></pre> <p>Perform parsing on the defined attribute.</p> <p>Parameters:</p> Name Type Description Default <code>attributes</code> <code>dict[str, str]</code> <p>The template attributes.</p> required <p>Returns:</p> Type Description <code>T | D</code> <p>The result of the parser's function or the fallback value if applicable.</p> <p>Raises:</p> Type Description <code>AttributeParsingError</code> <p>If the parser function fails and no fallback was provided.</p> Source code in <code>tibiawikisql/parsers/base.py</code> <pre><code>def __call__(self, attributes: dict[str, str]) -&gt; T | D:\n    \"\"\"Perform parsing on the defined attribute.\n\n    Args:\n        attributes: The template attributes.\n\n    Returns:\n        The result of the parser's function or the fallback value if applicable.\n\n    Raises:\n        AttributeParsingError: If the parser function fails and no fallback was provided.\n    \"\"\"\n    try:\n        return self.func(attributes)\n    except Exception as e:\n        if self.fallback is Ellipsis:\n            raise AttributeParsingError(e) from e\n        return self.fallback\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.base.AttributeParser.required","title":"required  <code>classmethod</code>","text":"<pre><code>required(\n    field_name: str,\n    post_process: Callable[[str], T] = strip,\n) -&gt; Self\n</code></pre> <p>Define a required attribute.</p> <p>Parameters:</p> Name Type Description Default <code>field_name</code> <code>str</code> <p>The name of the template attribute in the wiki.</p> required <code>post_process</code> <code>Callable[[str], T]</code> <p>A function to call on the attribute's value.</p> <code>strip</code> <p>Returns:</p> Type Description <code>Self</code> <p>An attribute parser expecting a required value.</p> Source code in <code>tibiawikisql/parsers/base.py</code> <pre><code>@classmethod\ndef required(cls, field_name: str, post_process: Callable[[str], T] = str.strip) -&gt; Self:\n    \"\"\"Define a required attribute.\n\n    Args:\n        field_name: The name of the template attribute in the wiki.\n        post_process: A function to call on the attribute's value.\n\n    Returns:\n        An attribute parser expecting a required value.\n\n    \"\"\"\n    return cls(lambda x: post_process(x[field_name]))\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.base.AttributeParser.optional","title":"optional  <code>classmethod</code>","text":"<pre><code>optional(\n    field_name: str,\n    post_process: Callable[[str], T | None] = strip,\n    default: T | None = None,\n) -&gt; Self\n</code></pre> <p>Create optional attribute parser. Will fall back to None.</p> <p>Parameters:</p> Name Type Description Default <code>field_name</code> <code>str</code> <p>The name of the template attribute in the wiki.</p> required <code>post_process</code> <code>Callable[[str], T | None]</code> <p>A function to call on the attribute's value.</p> <code>strip</code> <code>default</code> <code>T | None</code> <code>None</code> <p>Returns:</p> Type Description <code>Self</code> <p>An attribute parser for an optional value.</p> Source code in <code>tibiawikisql/parsers/base.py</code> <pre><code>@classmethod\ndef optional(cls, field_name: str, post_process: Callable[[str], T | None] = str.strip, default: T | None = None) -&gt; Self:\n    \"\"\"Create optional attribute parser. Will fall back to None.\n\n    Args:\n        field_name: The name of the template attribute in the wiki.\n        post_process: A function to call on the attribute's value.\n        default:\n\n    Returns:\n        An attribute parser for an optional value.\n\n    \"\"\"\n    return cls(lambda x: post_process(x[field_name]), default)\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.base.AttributeParser.status","title":"status  <code>classmethod</code>","text":"<pre><code>status() -&gt; Self\n</code></pre> <p>Create a parser for the commonly found \"status\" parameter.</p> <p>Returns:</p> Type Description <code>Self</code> <p>An attribute parser for the status parameter, falling back to \"active\" if not found.</p> Source code in <code>tibiawikisql/parsers/base.py</code> <pre><code>@classmethod\ndef status(cls) -&gt; Self:\n    \"\"\"Create a parser for the commonly found \"status\" parameter.\n\n    Returns:\n        An attribute parser for the status parameter, falling back to \"active\" if not found.\n\n    \"\"\"\n    return cls(lambda x: x.get(\"status\").lower(), \"active\")\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.base.AttributeParser.version","title":"version  <code>classmethod</code>","text":"<pre><code>version() -&gt; Self\n</code></pre> <p>Create a parser for the commonly found \"implemented\" parameter.</p> <p>Returns:</p> Type Description <code>Self</code> <p>An attribute parser for the implemented parameter.</p> Source code in <code>tibiawikisql/parsers/base.py</code> <pre><code>@classmethod\ndef version(cls) -&gt; Self:\n    \"\"\"Create a parser for the commonly found \"implemented\" parameter.\n\n    Returns:\n        An attribute parser for the implemented parameter.\n\n    \"\"\"\n    return cls(lambda x: x.get(\"implemented\").lower())\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.base.ParserMeta","title":"ParserMeta","text":"<p>               Bases: <code>type</code></p> <p>Metaclass for all parsers.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.base.BaseParser","title":"BaseParser","text":"<p>Base class that defines how to extract information from a Wiki template into a model.</p> <p>Methods:</p> Name Description <code>parse_attributes</code> <p>Parse the attributes of an article into a mapping.</p> <code>from_article</code> <p>Parse an article into a TibiaWiki model.</p> <p>Attributes:</p> Name Type Description <code>template_name</code> <code>str</code> <p>The name of the template that contains the information.</p> <code>model</code> <code>type[RowModel]</code> <p>The model to convert the data into.</p> <code>table</code> <code>type[Table]</code> <p>The SQL table where the data wil be stored.</p> <code>attribute_map</code> <code>dict[str, AttributeParser]</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.base.BaseParser.template_name","title":"template_name  <code>class-attribute</code>","text":"<pre><code>template_name: str = NotImplemented\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.base.BaseParser.model","title":"model  <code>class-attribute</code>","text":"<pre><code>model: type[RowModel] = NotImplemented\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.base.BaseParser.table","title":"table  <code>class-attribute</code>","text":"<pre><code>table: type[Table] = NotImplemented\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.base.BaseParser.attribute_map","title":"attribute_map  <code>class-attribute</code>","text":"<pre><code>attribute_map: dict[str, AttributeParser] = NotImplemented\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.base.BaseParser.parse_attributes","title":"parse_attributes  <code>classmethod</code>","text":"<pre><code>parse_attributes(article: Article) -&gt; dict[str, Any]\n</code></pre> <p>Parse the attributes of an article into a mapping.</p> <p>By default, it will apply the attribute map, but it can be overridden to parse attributes in more complex ways. It is called by <code>parse_article</code>.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article to extract the data from.</p> required <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>A dictionary containing the parsed attribute values.</p> <p>Raises:</p> Type Description <code>AttributeParsingError</code> <p>If the required template is not found.</p> Source code in <code>tibiawikisql/parsers/base.py</code> <pre><code>@classmethod\ndef parse_attributes(cls, article: Article) -&gt; dict[str, Any]:\n    \"\"\"Parse the attributes of an article into a mapping.\n\n    By default, it will apply the attribute map, but it can be overridden to parse attributes in more complex ways.\n    It is called by `parse_article`.\n\n    Args:\n        article: The article to extract the data from.\n\n    Returns:\n        A dictionary containing the parsed attribute values.\n\n    Raises:\n        AttributeParsingError: If the required template is not found.\n\n    \"\"\"\n    templates = parse_templatates_data(article.content)\n    if cls.template_name not in templates:\n        raise TemplateNotFoundError(article, cls)\n    attributes = templates[cls.template_name]\n    row = {\n        \"article_id\": article.article_id,\n        \"timestamp\": article.timestamp,\n        \"title\": article.title,\n        \"_raw_attributes\": attributes,\n    }\n    try:\n        for field, parser in cls.attribute_map.items():\n            row[field] = parser(attributes)\n    except AttributeParsingError as e:\n        raise ArticleParsingError(article, e) from e\n    return row\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.base.BaseParser.from_article","title":"from_article  <code>classmethod</code>","text":"<pre><code>from_article(article: Article) -&gt; M\n</code></pre> <p>Parse an article into a TibiaWiki model.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article from where the model is parsed.</p> required <p>Returns:</p> Type Description <code>M</code> <p>An inherited model object for the current article.</p> Source code in <code>tibiawikisql/parsers/base.py</code> <pre><code>@classmethod\ndef from_article(cls, article: Article) -&gt; M:\n    \"\"\"Parse an article into a TibiaWiki model.\n\n    Args:\n        article: The article from where the model is parsed.\n\n    Returns:\n        An inherited model object for the current article.\n\n    \"\"\"\n    row = cls.parse_attributes(article)\n    try:\n        return cls.model.model_validate(row)\n    except ValidationError as e:\n        raise ArticleParsingError(article, cause=e) from e\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.achievement","title":"tibiawikisql.parsers.achievement","text":"<p>Classes:</p> Name Description <code>AchievementParser</code> <p>Parser for achievements.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.achievement.AchievementParser","title":"AchievementParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for achievements.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.achievement.AchievementParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Achievement\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.achievement.AchievementParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = AchievementTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.achievement.AchievementParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Achievement'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.achievement.AchievementParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": AttributeParser(\n        lambda x: get(\"actualname\") or get(\"name\")\n    ),\n    \"grade\": optional(\"grade\", parse_integer),\n    \"points\": optional(\"points\", parse_integer),\n    \"is_premium\": optional(\"premium\", parse_boolean, False),\n    \"is_secret\": optional(\"secret\", parse_boolean, False),\n    \"description\": required(\"description\", clean_links),\n    \"spoiler\": optional(\"spoiler\", clean_links),\n    \"achievement_id\": optional(\n        \"achievementid\", parse_integer\n    ),\n    \"version\": optional(\"implemented\"),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.book","title":"tibiawikisql.parsers.book","text":"<p>Classes:</p> Name Description <code>BookParser</code> <p>Parser for book articles.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.book.BookParser","title":"BookParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for book articles.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.book.BookParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Book\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.book.BookParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = BookTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.book.BookParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Book'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.book.BookParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": required(\"title\"),\n    \"book_type\": optional(\"booktype\", clean_links),\n    \"location\": optional(\n        \"location\", lambda x: clean_links(x, True)\n    ),\n    \"blurb\": optional(\n        \"blurb\", lambda x: clean_links(x, True)\n    ),\n    \"author\": optional(\n        \"author\", lambda x: clean_links(x, True)\n    ),\n    \"prev_book\": optional(\"prevbook\"),\n    \"next_book\": optional(\"nextbook\"),\n    \"text\": required(\"text\", clean_links),\n    \"version\": optional(\"implemented\"),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.charm","title":"tibiawikisql.parsers.charm","text":"<p>Classes:</p> Name Description <code>CharmParser</code> <p>Parser for charms.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.charm.CharmParser","title":"CharmParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for charms.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.charm.CharmParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Charm\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.charm.CharmParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = CharmTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.charm.CharmParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Charm'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.charm.CharmParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": AttributeParser(\n        lambda x: get(\"actualname\") or get(\"name\")\n    ),\n    \"type\": AttributeParser(lambda x: get(\"type\")),\n    \"effect\": AttributeParser(\n        lambda x: clean_links(get(\"effect\"))\n    ),\n    \"cost\": AttributeParser(\n        lambda x: parse_integer(get(\"cost\"))\n    ),\n    \"version\": AttributeParser(\n        lambda x: get(\"implemented\"), None\n    ),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature","title":"tibiawikisql.parsers.creature","text":"<p>Classes:</p> Name Description <code>CreatureParser</code> <p>Parses creatures or monsters.</p> <p>Functions:</p> Name Description <code>parse_maximum_damage</code> <p>Parse the maximum damage template from TibiaWiki.</p> <code>parse_maximum_integer</code> <p>From a string, finds the highest integer found.</p> <code>parse_loot</code> <p>Get every item drop entry of a creature's drops.</p> <code>parse_abilities</code> <p>Parse the abilities of a creature.</p> <code>parse_monster_walks</code> <p>Match the values against a regex to filter typos or bad data on the wiki.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.CreatureParser","title":"CreatureParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parses creatures or monsters.</p> <p>Methods:</p> Name Description <code>parse_attributes</code> <p>Parse the attributes of an article into a mapping.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.CreatureParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Creature\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.CreatureParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Creature'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.CreatureParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = CreatureTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.CreatureParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": AttributeParser(\n        lambda x: get(\"actualname\") or get(\"name\")\n    ),\n    \"article\": optional(\"article\"),\n    \"plural\": optional(\"plural\"),\n    \"library_race\": optional(\"bestiaryname\"),\n    \"creature_class\": optional(\"creatureclass\"),\n    \"type_primary\": optional(\"primarytype\"),\n    \"type_secondary\": optional(\"secondarytype\"),\n    \"bestiary_class\": optional(\"bestiaryclass\"),\n    \"bestiary_level\": optional(\"bestiarylevel\"),\n    \"bestiary_occurrence\": optional(\"occurrence\"),\n    \"bosstiary_class\": optional(\"bosstiaryclass\"),\n    \"hitpoints\": optional(\"hp\", parse_integer),\n    \"experience\": optional(\"exp\", parse_integer),\n    \"armor\": optional(\"armor\", parse_integer),\n    \"mitigation\": optional(\"mitigation\", parse_integer),\n    \"speed\": optional(\"speed\", parse_integer),\n    \"runs_at\": optional(\"runsat\", parse_integer),\n    \"summon_cost\": optional(\"summon\", parse_integer),\n    \"convince_cost\": optional(\"convince\", parse_integer),\n    \"illusionable\": optional(\"illusionable\", parse_boolean),\n    \"pushable\": optional(\"pushable\", parse_boolean),\n    \"push_objects\": optional(\"pushobjects\", parse_boolean),\n    \"sees_invisible\": optional(\"senseinvis\", parse_boolean),\n    \"paralysable\": optional(\"paraimmune\", parse_boolean),\n    \"spawn_type\": optional(\"spawntype\"),\n    \"is_boss\": optional(\"isboss\", parse_boolean, False),\n    \"cooldown\": optional(\"cooldown\", parse_float),\n    \"modifier_physical\": optional(\n        \"physicalDmgMod\", parse_integer\n    ),\n    \"modifier_earth\": optional(\n        \"earthDmgMod\", parse_integer\n    ),\n    \"modifier_fire\": optional(\"fireDmgMod\", parse_integer),\n    \"modifier_energy\": optional(\"iceDmgMod\", parse_integer),\n    \"modifier_ice\": optional(\"energyDmgMod\", parse_integer),\n    \"modifier_death\": optional(\n        \"deathDmgMod\", parse_integer\n    ),\n    \"modifier_holy\": optional(\"holyDmgMod\", parse_integer),\n    \"modifier_drown\": optional(\n        \"drownDmgMod\", parse_integer\n    ),\n    \"modifier_lifedrain\": optional(\n        \"hpDrainDmgMod\", parse_integer\n    ),\n    \"modifier_healing\": optional(\"healMod\", parse_integer),\n    \"walks_through\": optional(\n        \"walksthrough\", parse_monster_walks\n    ),\n    \"walks_around\": optional(\n        \"walksaround\", parse_monster_walks\n    ),\n    \"location\": optional(\"location\", clean_links),\n    \"version\": optional(\"implemented\"),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.CreatureParser.parse_attributes","title":"parse_attributes  <code>classmethod</code>","text":"<pre><code>parse_attributes(article: Article) -&gt; dict[str, Any]\n</code></pre> <p>Parse the attributes of an article into a mapping.</p> <p>By default, it will apply the attribute map, but it can be overridden to parse attributes in more complex ways. It is called by <code>parse_article</code>.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article to extract the data from.</p> required <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>A dictionary containing the parsed attribute values.</p> <p>Raises:</p> Type Description <code>AttributeParsingError</code> <p>If the required template is not found.</p> Source code in <code>tibiawikisql/parsers/creature.py</code> <pre><code>@classmethod\ndef parse_attributes(cls, article: Article) -&gt; dict[str, Any]:\n    row = super().parse_attributes(article)\n    raw_attributes = row[\"_raw_attributes\"]\n    article_id = row[\"article_id\"]\n    if \"loot\" in raw_attributes:\n        loot = parse_loot(raw_attributes[\"loot\"])\n        loot_items = []\n        for item, amounts in loot:\n            if not amounts:\n                _min, _max = 0, 1\n            else:\n                _min, _max = parse_min_max(amounts)\n            loot_items.append(\n                CreatureDrop(\n                    item_title=item,\n                    min=_min,\n                    max=_max,\n                ),\n            )\n        row[\"loot\"] = loot_items\n    if \"sounds\" in raw_attributes:\n        row[\"sounds\"] = parse_sounds(raw_attributes[\"sounds\"])\n    if \"abilities\" in raw_attributes:\n        abilities = parse_abilities(raw_attributes[\"abilities\"])\n        if abilities:\n            row[\"abilities\"] = [CreatureAbility(**ability) for ability in abilities]\n    if \"maxdmg\" in raw_attributes:\n        max_damage = parse_maximum_damage(raw_attributes[\"maxdmg\"])\n        if max_damage:\n            row[\"max_damage\"] = CreatureMaxDamage(**max_damage)\n    return row\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.parse_maximum_damage","title":"parse_maximum_damage","text":"<pre><code>parse_maximum_damage(value: str) -&gt; dict[str, int]\n</code></pre> <p>Parse the maximum damage template from TibiaWiki.</p> <p>If no template is found, the highest number found is considered the total damage.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>A string containing the creature's max damage.</p> required <p>Returns:</p> Type Description <code>dict[str, int]</code> <p>A dictionary containing the maximum damage by element if available.</p> Source code in <code>tibiawikisql/parsers/creature.py</code> <pre><code>def parse_maximum_damage(value: str) -&gt; dict[str, int]:\n    \"\"\"Parse the maximum damage template from TibiaWiki.\n\n    If no template is found, the highest number found is considered the total damage.\n\n    Args:\n        value: A string containing the creature's max damage.\n\n    Returns:\n        A dictionary containing the maximum damage by element if available.\n\n    \"\"\"\n    if not value:\n        return {}\n    max_damage_template = find_template(value, \"Max Damage\")\n    if not max_damage_template:\n        total = parse_maximum_integer(value)\n        if total is None:\n            return {}\n        return {\"total\": parse_maximum_integer(value)}\n    damages = {}\n    for element in max_damage_template.params:\n        damages[strip_code(element.name).lower()] = parse_integer(strip_code(element.value), -1)\n    excluded = {\"summons\", \"manadrain\"}\n    if \"total\" not in damages:\n        damages[\"total\"] = sum(v for k, v in damages.items() if k not in excluded)\n    return damages\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.parse_maximum_integer","title":"parse_maximum_integer","text":"<pre><code>parse_maximum_integer(value: str) -&gt; int | None\n</code></pre> <p>From a string, finds the highest integer found.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>The string containing integers.</p> required <p>Returns:</p> Type Description <code>int | None</code> <p>The highest number found, or None if no number is found.</p> Source code in <code>tibiawikisql/parsers/creature.py</code> <pre><code>def parse_maximum_integer(value: str) -&gt; int | None:\n    \"\"\"From a string, finds the highest integer found.\n\n    Args:\n        value: The string containing integers.\n\n    Returns:\n        The highest number found, or None if no number is found.\n\n    \"\"\"\n    matches = int_pattern.findall(value)\n    try:\n        return max(list(map(int, matches)))\n    except ValueError:\n        return None\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.parse_loot","title":"parse_loot","text":"<pre><code>parse_loot(value: str) -&gt; list[tuple[str, str]]\n</code></pre> <p>Get every item drop entry of a creature's drops.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>A string containing item drops.</p> required Return <p>A list of tuples containing the name of the item and the amount dropped (or empty for 1).</p> Source code in <code>tibiawikisql/parsers/creature.py</code> <pre><code>def parse_loot(value: str) -&gt; list[tuple[str, str]]:\n    \"\"\"Get every item drop entry of a creature's drops.\n\n    Args:\n        value: A string containing item drops.\n\n    Return:\n        A list of tuples containing the name of the item and the amount dropped (or empty for 1).\n\n    \"\"\"\n\n    def match(k):\n        return \"Item\" in k.name\n\n    loot_items_templates: Template = mwparserfromhell.parse(value).filter_templates(recursive=True,\n                                                                                            matches=match)\n    loot = []\n    for item_template in loot_items_templates:\n        param_count = len(item_template.params)\n        if param_count &lt; 2:\n            loot.append((strip_code(item_template.get(1)), \"\"))\n        else:\n            second_param = strip_code(item_template.get(2))\n            if second_param in [\"always\", \"common\", \"uncommon\", \"semi-rare\", \"rare\", \"very rare\"]:\n                loot.append((strip_code(item_template.get(1)), \"\"))\n            else:\n                loot.append((second_param, (strip_code(item_template.get(1)))))\n    return loot\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.parse_abilities","title":"parse_abilities","text":"<pre><code>parse_abilities(value)\n</code></pre> <p>Parse the abilities of a creature.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.parse_abilities--parameters","title":"Parameters","text":"<p>value: :class:<code>str</code>     A string containing the creature's abilities definition.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.parse_abilities--returns","title":"Returns","text":"<p>:class:<code>list</code> of :class:<code>dict</code>     A list of dictionaries with the ability data.</p> Source code in <code>tibiawikisql/parsers/creature.py</code> <pre><code>def parse_abilities(value):\n    \"\"\"Parse the abilities of a creature.\n\n    Parameters\n    ----------\n    value: :class:`str`\n        A string containing the creature's abilities definition.\n\n    Returns\n    -------\n    :class:`list` of :class:`dict`\n        A list of dictionaries with the ability data.\n\n    \"\"\"\n    if not value:\n        return []\n    parsed = mwparserfromhell.parse(value)\n    ability_list_template = find_template(value, \"Ability List\")\n    if not ability_list_template:\n        name = strip_code(parsed)\n        return [{\n            \"name\": name,\n            \"element\": \"no_template\",\n        }] if name else []\n    abilities = []\n    for element in ability_list_template.params:\n        if not element.strip():\n            continue\n        ability_template = next(element.value.ifilter_templates(recursive=False), None)\n        if not ability_template:\n            abilities.append({\n                \"name\": strip_code(element),\n                \"element\": \"plain_text\",\n            })\n            continue\n        template_name = str(ability_template.name)\n        ability = None\n        if template_name == \"Melee\":\n            ability = {\n                \"name\": ability_template.get(\"name\", \"Melee\"),\n                \"effect\": ability_template.get(1, ability_template.get(\"damage\", \"?\")),\n                \"element\": ability_template.get(2, ability_template.get(\"element\", \"physical\")),\n            }\n        if template_name == \"Summon\":\n            ability = {\n                \"name\": ability_template.get(1, ability_template.get(\"creature\", None)),\n                \"effect\": ability_template.get(2, ability_template.get(\"amount\", \"1\")),\n                \"element\": \"summon\",\n            }\n        if template_name == \"Healing\":\n            ability = {\n                \"name\": ability_template.get(1, ability_template.get(\"name\", \"Self-Healing\")),\n                \"effect\": ability_template.get(2, ability_template.get(\"range\", ability_template.get(\"damage\", \"?\"))),\n                \"element\": \"healing\",\n            }\n        if template_name == \"Ability\":\n            ability = {\n                \"name\": ability_template.get(1, ability_template.get(\"name\", None)),\n                \"effect\": ability_template.get(2, ability_template.get(\"damage\", \"?\")),\n                \"element\": ability_template.get(3, ability_template.get(\"element\", \"physical\")),\n            }\n            if ability[\"name\"] is None:\n                ability[\"name\"] = f'{ability[\"element\"].title()} Damage'\n        if ability:\n            abilities.append(strip_code(ability))\n    return abilities\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.parse_monster_walks","title":"parse_monster_walks","text":"<pre><code>parse_monster_walks(value)\n</code></pre> <p>Match the values against a regex to filter typos or bad data on the wiki.</p> <p>Element names followed by any character that is not a comma will be considered unknown and will not be returned.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.parse_monster_walks--examples","title":"Examples","text":"<pre><code>- ``Poison?, fire`` will return ``fire``.\n- ``Poison?, fire.`` will return neither.\n- ``Poison, earth, fire?, [[ice]]`` will return ``poison,earth``.\n- ``No``, ``--``, ``&gt;``, or ``None`` will return ``None``.\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.parse_monster_walks--parameters","title":"Parameters","text":"<p>value: :class:<code>str</code>     The string containing possible field types.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.creature.parse_monster_walks--returns","title":"Returns","text":"<p>:class:<code>str</code>, optional     A list of field types, separated by commas.</p> Source code in <code>tibiawikisql/parsers/creature.py</code> <pre><code>def parse_monster_walks(value):\n    \"\"\"Match the values against a regex to filter typos or bad data on the wiki.\n\n    Element names followed by any character that is not a comma will be considered unknown and will not be returned.\n\n    Examples\n    --------\n        - ``Poison?, fire`` will return ``fire``.\n        - ``Poison?, fire.`` will return neither.\n        - ``Poison, earth, fire?, [[ice]]`` will return ``poison,earth``.\n        - ``No``, ``--``, ``&gt;``, or ``None`` will return ``None``.\n\n    Parameters\n    ----------\n    value: :class:`str`\n        The string containing possible field types.\n\n    Returns\n    -------\n    :class:`str`, optional\n        A list of field types, separated by commas.\n\n    \"\"\"\n    regex = re.compile(\n        r\"(physical)(,|$)|(holy)(,|$)|(death)(,|$)|(fire)(,|$)|(ice)(,|$)|(energy)(,|$)|(earth)(,|$)|\"\n        r\"(poison)(,|$)\")\n    content = \"\"\n    for match in re.finditer(regex, value.lower().strip()):\n        content += match.group()\n    if not content:\n        return None\n    return content\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.house","title":"tibiawikisql.parsers.house","text":"<p>Classes:</p> Name Description <code>HouseParser</code> <p>Parses houses and guildhalls.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.house.HouseParser","title":"HouseParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parses houses and guildhalls.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.house.HouseParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = House\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.house.HouseParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = HouseTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.house.HouseParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Building'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.house.HouseParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"house_id\": required(\"houseid\", parse_integer),\n    \"name\": required(\"name\"),\n    \"is_guildhall\": required(\n        \"type\",\n        lambda x: x is not None and \"guildhall\" in lower(),\n    ),\n    \"city\": required(\"city\"),\n    \"street\": optional(\"street\"),\n    \"location\": optional(\"location\", clean_links),\n    \"beds\": required(\"beds\", parse_integer),\n    \"rent\": required(\"rent\", parse_integer),\n    \"size\": required(\"size\", parse_integer),\n    \"rooms\": optional(\"rooms\", parse_integer),\n    \"floors\": optional(\"floors\", parse_integer),\n    \"x\": optional(\"posx\", convert_tibiawiki_position),\n    \"y\": optional(\"posy\", convert_tibiawiki_position),\n    \"z\": optional(\"posz\", int),\n    \"version\": version(),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement","title":"tibiawikisql.parsers.imbuement","text":"<p>Classes:</p> Name Description <code>ImbuementParser</code> <p>Parses imbuements.</p> <p>Functions:</p> Name Description <code>parse_astral_sources</code> <p>Parse the astral sources of an imbuement.</p> <code>parse_effect</code> <p>Parse TibiaWiki's effect template into a string effect.</p> <code>parse_slots</code> <p>Parse the list of slots.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.ImbuementParser","title":"ImbuementParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parses imbuements.</p> <p>Methods:</p> Name Description <code>parse_attributes</code> <p>Parse the attributes of an article into a mapping.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.ImbuementParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Imbuement\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.ImbuementParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = ImbuementTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.ImbuementParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Imbuement'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.ImbuementParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": required(\"name\"),\n    \"tier\": required(\"prefix\"),\n    \"type\": required(\"type\"),\n    \"category\": required(\"category\"),\n    \"effect\": required(\"effect\", parse_effect),\n    \"version\": required(\"implemented\"),\n    \"slots\": required(\"slots\", parse_slots),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.ImbuementParser.parse_attributes","title":"parse_attributes  <code>classmethod</code>","text":"<pre><code>parse_attributes(article: Article) -&gt; dict[str, Any]\n</code></pre> <p>Parse the attributes of an article into a mapping.</p> <p>By default, it will apply the attribute map, but it can be overridden to parse attributes in more complex ways. It is called by <code>parse_article</code>.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article to extract the data from.</p> required <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>A dictionary containing the parsed attribute values.</p> <p>Raises:</p> Type Description <code>AttributeParsingError</code> <p>If the required template is not found.</p> Source code in <code>tibiawikisql/parsers/imbuement.py</code> <pre><code>@classmethod\ndef parse_attributes(cls, article: Article) -&gt; dict[str, Any]:\n    row = super().parse_attributes(article)\n    if not row:\n        return row\n    raw_attributes = row[\"_raw_attributes\"]\n    if \"astralsources\" in raw_attributes:\n        materials = parse_astral_sources(raw_attributes[\"astralsources\"])\n        row[\"materials\"] = [Material(item_title=name, amount=amount) for name, amount in materials.items()]\n    return row\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.parse_astral_sources","title":"parse_astral_sources","text":"<pre><code>parse_astral_sources(content: str)\n</code></pre> <p>Parse the astral sources of an imbuement.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.parse_astral_sources--parameters","title":"Parameters","text":"<p>content: A string containing astral sources.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.parse_astral_sources--returns","title":"Returns","text":"<p>:class:<code>dict[str,int]</code>:     A dictionary containing the material name and te amount required.</p> Source code in <code>tibiawikisql/parsers/imbuement.py</code> <pre><code>def parse_astral_sources(content: str):\n    \"\"\"Parse the astral sources of an imbuement.\n\n    Parameters\n    ----------\n    content: A string containing astral sources.\n\n    Returns\n    -------\n    :class:`dict[str,int]`:\n        A dictionary containing the material name and te amount required.\n\n    \"\"\"\n    materials = astral_pattern.findall(content)\n    if materials:\n        return {item: int(amount) for (item, amount) in materials}\n    return None\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.parse_effect","title":"parse_effect","text":"<pre><code>parse_effect(effect)\n</code></pre> <p>Parse TibiaWiki's effect template into a string effect.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.parse_effect--parameters","title":"Parameters","text":"<p>effect: :class:<code>str</code>     The string containing the template.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.parse_effect--returns","title":"Returns","text":"<p>:class:<code>str</code>:     The effect string.</p> Source code in <code>tibiawikisql/parsers/imbuement.py</code> <pre><code>def parse_effect(effect):\n    \"\"\"Parse TibiaWiki's effect template into a string effect.\n\n    Parameters\n    ----------\n    effect: :class:`str`\n        The string containing the template.\n\n    Returns\n    -------\n    :class:`str`:\n        The effect string.\n\n    \"\"\"\n    m = effect_pattern.search(effect)\n    category, amount = m.groups()\n    try:\n        return effect_map[category].format(amount)\n    except KeyError:\n        return f\"{category} {amount}\"\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.parse_slots","title":"parse_slots","text":"<pre><code>parse_slots(content)\n</code></pre> <p>Parse the list of slots.</p> <p>Cleans up spaces between items.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.parse_slots--parameters","title":"Parameters","text":"<p>content: :class:<code>str</code>     A string containing comma separated values.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.imbuement.parse_slots--returns","title":"Returns","text":"<p>:class:<code>str</code>:     The slots string.</p> Source code in <code>tibiawikisql/parsers/imbuement.py</code> <pre><code>def parse_slots(content):\n    \"\"\"Parse the list of slots.\n\n    Cleans up spaces between items.\n\n    Parameters\n    ----------\n    content: :class:`str`\n        A string containing comma separated values.\n\n    Returns\n    -------\n    :class:`str`:\n        The slots string.\n\n    \"\"\"\n    slots = content.split(\",\")\n    return \",\".join(s.strip() for s in slots)\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.item","title":"tibiawikisql.parsers.item","text":"<p>Classes:</p> Name Description <code>ItemParser</code> <p>Parses items and objects.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.item.ItemParser","title":"ItemParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parses items and objects.</p> <p>Methods:</p> Name Description <code>parse_attributes</code> <p>Parse the attributes of an article into a mapping.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.item.ItemParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Item\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.item.ItemParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = ItemTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.item.ItemParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Object'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.item.ItemParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": required(\"name\"),\n    \"actual_name\": optional(\"actualname\"),\n    \"plural\": optional(\"plural\", clean_question_mark),\n    \"article\": optional(\"article\"),\n    \"is_marketable\": optional(\n        \"marketable\", parse_boolean, False\n    ),\n    \"is_stackable\": optional(\n        \"stackable\", parse_boolean, False\n    ),\n    \"is_pickupable\": optional(\n        \"pickupable\", parse_boolean, False\n    ),\n    \"is_immobile\": optional(\n        \"immobile\", parse_boolean, False\n    ),\n    \"value_sell\": optional(\"npcvalue\", parse_integer),\n    \"value_buy\": optional(\"npcprice\", parse_integer),\n    \"weight\": optional(\"weight\", parse_float),\n    \"flavor_text\": optional(\"flavortext\"),\n    \"item_class\": optional(\"objectclass\"),\n    \"item_type\": optional(\"primarytype\"),\n    \"type_secondary\": optional(\"secondarytype\"),\n    \"light_color\": optional(\n        \"lightcolor\",\n        lambda x: client_color_to_rgb(parse_integer(x)),\n    ),\n    \"light_radius\": optional(\"lightradius\", parse_integer),\n    \"version\": optional(\"implemented\"),\n    \"client_id\": optional(\"itemid\", parse_integer),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.item.ItemParser.parse_attributes","title":"parse_attributes  <code>classmethod</code>","text":"<pre><code>parse_attributes(article: Article) -&gt; dict[str, Any]\n</code></pre> <p>Parse the attributes of an article into a mapping.</p> <p>By default, it will apply the attribute map, but it can be overridden to parse attributes in more complex ways. It is called by <code>parse_article</code>.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article to extract the data from.</p> required <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>A dictionary containing the parsed attribute values.</p> <p>Raises:</p> Type Description <code>AttributeParsingError</code> <p>If the required template is not found.</p> Source code in <code>tibiawikisql/parsers/item.py</code> <pre><code>@classmethod\ndef parse_attributes(cls, article: Article) -&gt; dict[str, Any]:\n    row = super().parse_attributes(article)\n    row[\"attributes\"] = []\n    for name, attribute in cls.item_attributes.items():\n        if attribute in row[\"_raw_attributes\"] and row[\"_raw_attributes\"][attribute]:\n            row[\"attributes\"].append(ItemAttribute(\n                name=name,\n                value=clean_links(row[\"_raw_attributes\"][attribute]),\n            ))\n    cls.parse_item_attributes(row)\n    cls.parse_resistances(row)\n    cls.parse_sounds(row)\n    cls.parse_store_value(row)\n    return row\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.key","title":"tibiawikisql.parsers.key","text":"<p>Classes:</p> Name Description <code>KeyParser</code> <p>Parser for keys.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.key.KeyParser","title":"KeyParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for keys.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.key.KeyParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Key\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.key.KeyParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = ItemKeyTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.key.KeyParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Key'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.key.KeyParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": optional(\"aka\", clean_links),\n    \"number\": optional(\"number\", parse_integer),\n    \"material\": optional(\"primarytype\"),\n    \"location\": optional(\"location\", clean_links),\n    \"notes\": optional(\"shortnotes\", clean_links),\n    \"origin\": optional(\"origin\", clean_links),\n    \"status\": status(),\n    \"version\": optional(\"implemented\", clean_links),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.mount","title":"tibiawikisql.parsers.mount","text":"<p>Classes:</p> Name Description <code>MountParser</code> <p>Parser for mounts.</p> <p>Functions:</p> Name Description <code>remove_mount</code> <p>Remove \"(Mount)\" from the name, if found.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.mount.MountParser","title":"MountParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for mounts.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.mount.MountParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Mount\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.mount.MountParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = MountTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.mount.MountParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Mount'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.mount.MountParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": required(\"name\", remove_mount),\n    \"speed\": required(\"speed\", int),\n    \"taming_method\": required(\"taming_method\", clean_links),\n    \"is_buyable\": optional(\"bought\", parse_boolean, False),\n    \"price\": optional(\"price\", parse_integer),\n    \"achievement\": optional(\"achievement\"),\n    \"light_color\": optional(\n        \"lightcolor\",\n        lambda x: client_color_to_rgb(parse_integer(x)),\n    ),\n    \"light_radius\": optional(\"lightradius\", int),\n    \"version\": version(),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.mount.remove_mount","title":"remove_mount","text":"<pre><code>remove_mount(name: str) -&gt; str\n</code></pre> <p>Remove \"(Mount)\" from the name, if found.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name to check.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The name with \"(Mount)\" removed from it.</p> Source code in <code>tibiawikisql/parsers/mount.py</code> <pre><code>def remove_mount(name: str) -&gt; str:\n    \"\"\"Remove \"(Mount)\" from the name, if found.\n\n    Args:\n        name: The name to check.\n\n    Returns:\n        The name with \"(Mount)\" removed from it.\n\n    \"\"\"\n    return name.replace(\"(Mount)\", \"\").strip()\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.npc","title":"tibiawikisql.parsers.npc","text":"<p>Classes:</p> Name Description <code>NpcParser</code> <p>Parser for NPCs.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.npc.NpcParser","title":"NpcParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for NPCs.</p> <p>Methods:</p> Name Description <code>parse_attributes</code> <p>Parse the attributes of an article into a mapping.</p> <p>Attributes:</p> Name Type Description <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>model</code> <p>The model to convert the data into.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.npc.NpcParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = NpcTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.npc.NpcParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Npc\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.npc.NpcParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_NPC'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.npc.NpcParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": AttributeParser(\n        lambda x: get(\"actualname\") or get(\"name\")\n    ),\n    \"gender\": optional(\"gender\"),\n    \"location\": optional(\"location\", clean_links),\n    \"subarea\": optional(\"subarea\"),\n    \"city\": required(\"city\"),\n    \"x\": optional(\"posx\", convert_tibiawiki_position),\n    \"y\": optional(\"posy\", convert_tibiawiki_position),\n    \"z\": optional(\"posz\", int),\n    \"version\": optional(\"implemented\"),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.npc.NpcParser.parse_attributes","title":"parse_attributes  <code>classmethod</code>","text":"<pre><code>parse_attributes(article: Article) -&gt; dict[str, Any]\n</code></pre> <p>Parse the attributes of an article into a mapping.</p> <p>By default, it will apply the attribute map, but it can be overridden to parse attributes in more complex ways. It is called by <code>parse_article</code>.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article to extract the data from.</p> required <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>A dictionary containing the parsed attribute values.</p> <p>Raises:</p> Type Description <code>AttributeParsingError</code> <p>If the required template is not found.</p> Source code in <code>tibiawikisql/parsers/npc.py</code> <pre><code>@classmethod\ndef parse_attributes(cls, article: Article) -&gt; dict[str, Any]:\n    row = super().parse_attributes(article)\n    raw_attributes = row[\"_raw_attributes\"]\n    cls._parse_jobs(row)\n    cls._parse_races(row)\n\n    row[\"destinations\"] = []\n    destinations = []\n    if \"notes\" in raw_attributes and \"{{Transport\" in raw_attributes[\"notes\"]:\n        destinations.extend(cls._parse_destinations(raw_attributes[\"notes\"]))\n    for destination, price, notes in destinations:\n        name = destination.strip()\n        clean_notes = clean_links(notes.strip())\n        if not notes:\n            clean_notes = None\n        row[\"destinations\"].append(NpcDestination(\n            name=name,\n            price=price,\n            notes=clean_notes,\n        ))\n    return row\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.outfit","title":"tibiawikisql.parsers.outfit","text":"<p>Classes:</p> Name Description <code>OutfitParser</code> <p>Parser for outfits.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.outfit.OutfitParser","title":"OutfitParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for outfits.</p> <p>Methods:</p> Name Description <code>parse_attributes</code> <p>Parse the attributes of an article into a mapping.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.outfit.OutfitParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Outfit\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.outfit.OutfitParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = OutfitTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.outfit.OutfitParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Outfit'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.outfit.OutfitParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": required(\"name\"),\n    \"outfit_type\": required(\"primarytype\"),\n    \"is_premium\": optional(\"premium\", parse_boolean, False),\n    \"is_tournament\": optional(\n        \"tournament\", parse_boolean, False\n    ),\n    \"is_bought\": optional(\"bought\", parse_boolean, False),\n    \"full_price\": optional(\n        \"fulloutfitprice\", parse_integer\n    ),\n    \"achievement\": optional(\"achievement\"),\n    \"status\": status(),\n    \"version\": version(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.outfit.OutfitParser.parse_attributes","title":"parse_attributes  <code>classmethod</code>","text":"<pre><code>parse_attributes(article: Article) -&gt; dict[str, Any]\n</code></pre> <p>Parse the attributes of an article into a mapping.</p> <p>By default, it will apply the attribute map, but it can be overridden to parse attributes in more complex ways. It is called by <code>parse_article</code>.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article to extract the data from.</p> required <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>A dictionary containing the parsed attribute values.</p> <p>Raises:</p> Type Description <code>AttributeParsingError</code> <p>If the required template is not found.</p> Source code in <code>tibiawikisql/parsers/outfit.py</code> <pre><code>@classmethod\ndef parse_attributes(cls, article: Article) -&gt; dict[str, Any]:\n    row = super().parse_attributes(article)\n    if not row:\n        return row\n    raw_attributes = row[\"_raw_attributes\"]\n    row[\"quests\"] = []\n    if \"outfit\" in raw_attributes:\n        quests = parse_links(raw_attributes[\"outfit\"])\n        for quest in quests:\n            row[\"quests\"].append(UnlockQuest(\n                quest_title=quest.strip(),\n                unlock_type=\"outfit\",\n            ))\n    if \"addons\" in raw_attributes:\n        quests = parse_links(raw_attributes[\"addons\"])\n        for quest in quests:\n            row[\"quests\"].append(UnlockQuest(\n                quest_title=quest.strip(),\n                unlock_type=\"addons\",\n            ))\n    return row\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.quest","title":"tibiawikisql.parsers.quest","text":"<p>Classes:</p> Name Description <code>QuestParser</code> <p>Parser for quests.</p> <p>Functions:</p> Name Description <code>parse_links</code> <p>Find all the links in a string and returns a list of them.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.quest.QuestParser","title":"QuestParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for quests.</p> <p>Methods:</p> Name Description <code>parse_attributes</code> <p>Parse the attributes of an article into a mapping.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.quest.QuestParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Quest\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.quest.QuestParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = QuestTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.quest.QuestParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Quest'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.quest.QuestParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": required(\"name\", unescape),\n    \"location\": optional(\"location\", clean_links),\n    \"rookgaard\": optional(\n        \"rookgaardquest\", parse_boolean, False\n    ),\n    \"type\": optional(\"type\"),\n    \"quest_log\": optional(\"log\", parse_boolean),\n    \"legend\": optional(\"legend\", clean_links),\n    \"level_required\": optional(\"lvl\", parse_integer),\n    \"level_recommended\": optional(\"lvlrec\", parse_integer),\n    \"active_time\": optional(\"time\"),\n    \"estimated_time\": optional(\"timealloc\"),\n    \"is_premium\": required(\"premium\", parse_boolean),\n    \"version\": optional(\"implemented\"),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.quest.QuestParser.parse_attributes","title":"parse_attributes  <code>classmethod</code>","text":"<pre><code>parse_attributes(article: Article) -&gt; dict[str, Any]\n</code></pre> <p>Parse the attributes of an article into a mapping.</p> <p>By default, it will apply the attribute map, but it can be overridden to parse attributes in more complex ways. It is called by <code>parse_article</code>.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article to extract the data from.</p> required <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>A dictionary containing the parsed attribute values.</p> <p>Raises:</p> Type Description <code>AttributeParsingError</code> <p>If the required template is not found.</p> Source code in <code>tibiawikisql/parsers/quest.py</code> <pre><code>@classmethod\ndef parse_attributes(cls, article: Article) -&gt; dict[str, Any]:\n    row = super().parse_attributes(article)\n    if not row:\n        return row\n    cls._parse_quest_rewards(row)\n    cls._parse_quest_dangers(row)\n    return row\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.quest.parse_links","title":"parse_links","text":"<pre><code>parse_links(value)\n</code></pre> <p>Find all the links in a string and returns a list of them.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.quest.parse_links--parameters","title":"Parameters","text":"<p>value: :class:<code>str</code>     A string containing links.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.quest.parse_links--returns","title":"Returns","text":"<p>list(:class:<code>str</code>):     The links found in the string.</p> Source code in <code>tibiawikisql/parsers/quest.py</code> <pre><code>def parse_links(value):\n    \"\"\"Find all the links in a string and returns a list of them.\n\n    Parameters\n    ----------\n    value: :class:`str`\n        A string containing links.\n\n    Returns\n    -------\n    list(:class:`str`):\n        The links found in the string.\n\n    \"\"\"\n    return list(link_pattern.findall(value))\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.spell","title":"tibiawikisql.parsers.spell","text":"<p>Classes:</p> Name Description <code>SpellParser</code> <p>Parser for spells.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.spell.SpellParser","title":"SpellParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for spells.</p> <p>Methods:</p> Name Description <code>parse_attributes</code> <p>Parse the attributes of an article into a mapping.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.spell.SpellParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Spell\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.spell.SpellParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = SpellTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.spell.SpellParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Spell'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.spell.SpellParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": required(\"name\"),\n    \"effect\": required(\"effect\", clean_links),\n    \"words\": optional(\"words\"),\n    \"spell_type\": required(\"type\"),\n    \"group_spell\": required(\"subclass\"),\n    \"group_secondary\": optional(\"secondarygroup\"),\n    \"group_rune\": optional(\"runegroup\"),\n    \"element\": optional(\"damagetype\"),\n    \"mana\": optional(\"mana\", parse_integer),\n    \"soul\": optional(\"soul\", parse_integer, 0),\n    \"price\": optional(\"spellcost\", parse_integer),\n    \"cooldown\": required(\"cooldown\"),\n    \"cooldown2\": optional(\"cooldown2\"),\n    \"cooldown3\": optional(\"cooldown3\"),\n    \"cooldown_group\": optional(\"cooldowngroup\"),\n    \"cooldown_group_secondary\": optional(\"cooldowngroup2\"),\n    \"level\": optional(\"levelrequired\", parse_integer),\n    \"is_premium\": optional(\"premium\", parse_boolean, False),\n    \"is_promotion\": optional(\n        \"promotion\", parse_boolean, False\n    ),\n    \"is_wheel_spell\": optional(\n        \"wheelspell\", parse_boolean, False\n    ),\n    \"is_passive\": optional(\n        \"passivespell\", parse_boolean, False\n    ),\n    \"version\": optional(\"implemented\"),\n    \"status\": status(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.spell.SpellParser.parse_attributes","title":"parse_attributes  <code>classmethod</code>","text":"<pre><code>parse_attributes(article: Article)\n</code></pre> <p>Parse the attributes of an article into a mapping.</p> <p>By default, it will apply the attribute map, but it can be overridden to parse attributes in more complex ways. It is called by <code>parse_article</code>.</p> <p>Parameters:</p> Name Type Description Default <code>article</code> <code>Article</code> <p>The article to extract the data from.</p> required <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>A dictionary containing the parsed attribute values.</p> <p>Raises:</p> Type Description <code>AttributeParsingError</code> <p>If the required template is not found.</p> Source code in <code>tibiawikisql/parsers/spell.py</code> <pre><code>@classmethod\ndef parse_attributes(cls, article: Article):\n    row = super().parse_attributes(article)\n    for vocation in [\"knight\", \"sorcerer\", \"druid\", \"paladin\", \"monk\"]:\n        if vocation in row[\"_raw_attributes\"].get(\"voc\", \"\").lower():\n            row[vocation] = True\n    return row\n</code></pre>"},{"location":"api/parsers/#tibiawikisql.parsers.update","title":"tibiawikisql.parsers.update","text":"<p>Classes:</p> Name Description <code>UpdateParser</code> <p>Parser for game updates.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.update.UpdateParser","title":"UpdateParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for game updates.</p> <p>Attributes:</p> Name Type Description <code>model</code> <p>The model to convert the data into.</p> <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.update.UpdateParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = Update\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.update.UpdateParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = UpdateTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.update.UpdateParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_Update'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.update.UpdateParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": optional(\"name\"),\n    \"type_primary\": required(\"primarytype\"),\n    \"type_secondary\": optional(\"secondarytype\"),\n    \"release_date\": required(\"date\", parse_date),\n    \"news_id\": optional(\"newsid\", parse_integer),\n    \"previous\": optional(\"previous\"),\n    \"next\": optional(\"next\"),\n    \"summary\": optional(\"summary\", clean_links),\n    \"changes\": optional(\"changelist\", clean_links),\n    \"version\": version(),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.world","title":"tibiawikisql.parsers.world","text":"<p>Classes:</p> Name Description <code>WorldParser</code> <p>Parser for game worlds (servers).</p>"},{"location":"api/parsers/#tibiawikisql.parsers.world.WorldParser","title":"WorldParser","text":"<p>               Bases: <code>BaseParser</code></p> <p>Parser for game worlds (servers).</p> <p>Attributes:</p> Name Type Description <code>table</code> <p>The SQL table where the data wil be stored.</p> <code>model</code> <p>The model to convert the data into.</p> <code>template_name</code> <p>The name of the template that contains the information.</p> <code>attribute_map</code> <code>ClassVar</code> <p>A map defining how to process every template attribute.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.world.WorldParser.table","title":"table  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>table = WorldTable\n</code></pre> <p>The SQL table where the data wil be stored.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.world.WorldParser.model","title":"model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>model = World\n</code></pre> <p>The model to convert the data into.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.world.WorldParser.template_name","title":"template_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template_name = 'Infobox_World'\n</code></pre> <p>The name of the template that contains the information.</p>"},{"location":"api/parsers/#tibiawikisql.parsers.world.WorldParser.attribute_map","title":"attribute_map  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attribute_map: ClassVar = {\n    \"name\": required(\"name\"),\n    \"location\": required(\"location\"),\n    \"pvp_type\": required(\"type\"),\n    \"is_preview\": optional(\"preview\", parse_boolean, False),\n    \"is_experimental\": optional(\n        \"experimental\", parse_boolean, False\n    ),\n    \"online_since\": required(\"online\", parse_date),\n    \"offline_since\": optional(\"offline\", parse_date),\n    \"merged_into\": optional(\"mergedinto\"),\n    \"battleye\": optional(\"battleye\", parse_boolean, False),\n    \"battleye_type\": optional(\"battleyetype\"),\n    \"protected_since\": optional(\n        \"protectedsince\", parse_date\n    ),\n    \"world_board\": optional(\"worldboardid\", parse_integer),\n    \"trade_board\": optional(\"tradeboardid\", parse_integer),\n}\n</code></pre> <p>A map defining how to process every template attribute.</p>"},{"location":"api/schema/","title":"Schema","text":""},{"location":"api/schema/#tibiawikisql.schema","title":"tibiawikisql.schema","text":"<p>Defines the SQL schemas to use.</p> <p>Classes:</p> Name Description <code>AchievementTable</code> <p>Contains achievements from the game.</p> <code>NpcSpellTable</code> <p>Stores spells taught by NPCs.</p> <code>OutfitQuestTable</code> <code>QuestDangerTable</code> <code>QuestRewardTable</code> <p>Table containing the item rewards for a quest.</p> <p>Functions:</p> Name Description <code>create_tables</code> <p>Create all the tables in the database.</p>"},{"location":"api/schema/#tibiawikisql.schema.AchievementTable","title":"AchievementTable","text":"<p>               Bases: <code>Table</code></p> <p>Contains achievements from the game.</p>"},{"location":"api/schema/#tibiawikisql.schema.NpcSpellTable","title":"NpcSpellTable","text":"<p>               Bases: <code>Table</code></p> <p>Stores spells taught by NPCs.</p> <p>Attributes:</p> Name Type Description <code>npc_id</code> <p>Foreign key to NPC's article ID.</p> <code>spell_id</code> <p>Foreign key to spell's article ID.</p> <code>knight</code> <p>Whether the NPC teaches the spell to knights.</p> <code>sorcerer</code> <p>Whether the NPC teaches the spell to sorcerers.</p> <code>paladin</code> <p>Whether the NPC teaches the spell to paladins.</p> <code>druid</code> <p>Whether the NPC teaches the spell to druids.</p> <code>monk</code> <p>Whether the NPC teaches the spell to monks.</p> <p>Methods:</p> Name Description <code>get_by_spell_id</code> <p>Get entries matching the spell's article ID, joining additional data about the NPC.</p>"},{"location":"api/schema/#tibiawikisql.schema.NpcSpellTable.get_by_spell_id","title":"get_by_spell_id  <code>classmethod</code>","text":"<pre><code>get_by_spell_id(\n    conn: Connection | Cursor, spell_id: int\n) -&gt; list[Row]\n</code></pre> <p>Get entries matching the spell's article ID, joining additional data about the NPC.</p> <p>The schema returned is compatible with the [SpellTeacher][] model.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection to the database.</p> required <code>spell_id</code> <code>int</code> <p>The article ID of the spell.</p> required <p>Returns:</p> Type Description <code>list[Row]</code> <p>The rows containing the NPCs that teach the spell.</p> Source code in <code>tibiawikisql/schema.py</code> <pre><code>@classmethod\ndef get_by_spell_id(cls, conn: Connection | Cursor, spell_id: int) -&gt; list[Row]:\n    \"\"\"Get entries matching the spell's article ID, joining additional data about the NPC.\n\n    The schema returned is compatible with the [SpellTeacher][] model.\n\n    Args:\n        conn: A connection to the database.\n        spell_id: The article ID of the spell.\n\n    Returns:\n        The rows containing the NPCs that teach the spell.\n    \"\"\"\n    npc = PTable(NpcTable.__tablename__)\n    query = (\n        Query.from_(cls.__table__)\n        .select(\n            cls.__table__.npc_id,\n            npc.title.as_(\"npc_title\"),\n            npc.city.as_(\"npc_city\"),\n            cls.__table__.knight,\n            cls.__table__.paladin,\n            cls.__table__.sorcerer,\n            cls.__table__.druid,\n            cls.__table__.monk,\n        )\n        .join(npc).on(cls.__table__.npc_id == npc.article_id)\n    )\n    return cls.get_list_by_field(conn, \"spell_id\", spell_id, base_query=query)\n</code></pre>"},{"location":"api/schema/#tibiawikisql.schema.OutfitQuestTable","title":"OutfitQuestTable","text":"<p>               Bases: <code>Table</code></p> <p>Methods:</p> Name Description <code>get_list_by_outfit_id</code> <p>Get all entries related to a specific outfit, joining quest titles.</p>"},{"location":"api/schema/#tibiawikisql.schema.OutfitQuestTable.get_list_by_outfit_id","title":"get_list_by_outfit_id  <code>classmethod</code>","text":"<pre><code>get_list_by_outfit_id(\n    conn: Connection | Cursor, outfit_id: int\n) -&gt; list[Row] | list[dict[str, Any]]\n</code></pre> <p>Get all entries related to a specific outfit, joining quest titles.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection to the database.</p> required <code>outfit_id</code> <code>int</code> <p>The article ID of the outfit.</p> required <p>Returns:</p> Type Description <code>list[Row] | list[dict[str, Any]]</code> <p>The rows matching the criteria.</p> Source code in <code>tibiawikisql/schema.py</code> <pre><code>@classmethod\ndef get_list_by_outfit_id(cls, conn: Connection | Cursor, outfit_id: int) -&gt; list[Row] | list[dict[str, Any]]:\n    \"\"\"Get all entries related to a specific outfit, joining quest titles.\n\n    Args:\n        conn: A connection to the database.\n        outfit_id: The article ID of the outfit.\n\n    Returns:\n        The rows matching the criteria.\n    \"\"\"\n    quest = QuestTable.__table__\n    query = (\n        Query.from_(cls.__table__)\n        .select(\n            cls.__table__.quest_id,\n            quest.title.as_(\"quest_title\"),\n            cls.__table__.unlock_type,\n        )\n        .join(quest).on(quest.article_id == cls.__table__.quest_id)\n    )\n    return cls.get_list_by_field(conn, \"outfit_id\", outfit_id, base_query=query)\n</code></pre>"},{"location":"api/schema/#tibiawikisql.schema.QuestDangerTable","title":"QuestDangerTable","text":"<p>               Bases: <code>Table</code></p> <p>Methods:</p> Name Description <code>get_list_by_quest_id</code> <p>Get all entries related to a specific quest, joining creature titles.</p>"},{"location":"api/schema/#tibiawikisql.schema.QuestDangerTable.get_list_by_quest_id","title":"get_list_by_quest_id  <code>classmethod</code>","text":"<pre><code>get_list_by_quest_id(\n    conn: Connection | Cursor, quest_id: int\n) -&gt; list[Row] | list[dict[str, Any]]\n</code></pre> <p>Get all entries related to a specific quest, joining creature titles.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection to the database.</p> required <code>quest_id</code> <code>int</code> <p>The article ID of the quest.</p> required <p>Returns:</p> Type Description <code>list[Row] | list[dict[str, Any]]</code> <p>The rows matching the criteria.</p> Source code in <code>tibiawikisql/schema.py</code> <pre><code>@classmethod\ndef get_list_by_quest_id(cls, conn: Connection | Cursor, quest_id: int) -&gt; list[Row] | list[dict[str, Any]]:\n    \"\"\"Get all entries related to a specific quest, joining creature titles.\n\n    Args:\n        conn: A connection to the database.\n        quest_id: The article ID of the quest.\n\n    Returns:\n        The rows matching the criteria.\n    \"\"\"\n    creature = PTable(CreatureTable.__tablename__)\n    query = (\n        Query.from_(cls.__table__)\n        .select(\n            cls.__table__.creature_id,\n            creature.title.as_(\"creature_title\"),\n        )\n        .join(creature).on(creature.article_id == cls.__table__.creature_id)\n    )\n    return cls.get_list_by_field(conn, \"quest_id\", quest_id, base_query=query)\n</code></pre>"},{"location":"api/schema/#tibiawikisql.schema.QuestRewardTable","title":"QuestRewardTable","text":"<p>               Bases: <code>Table</code></p> <p>Table containing the item rewards for a quest.</p> <p>Methods:</p> Name Description <code>get_list_by_item_id</code> <p>Get all entries related to a specific item, joining quest titles.</p> <code>get_list_by_quest_id</code> <p>Get all entries related to a specific quest, joining item titles.</p>"},{"location":"api/schema/#tibiawikisql.schema.QuestRewardTable.get_list_by_item_id","title":"get_list_by_item_id  <code>classmethod</code>","text":"<pre><code>get_list_by_item_id(\n    conn: Connection | Cursor, item_id: int\n) -&gt; list[Row] | list[dict[str, Any]]\n</code></pre> <p>Get all entries related to a specific item, joining quest titles.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection to the database.</p> required <code>item_id</code> <code>int</code> <p>The article ID of the item.</p> required <p>Returns:</p> Type Description <code>list[Row] | list[dict[str, Any]]</code> <p>The rows matching the criteria.</p> Source code in <code>tibiawikisql/schema.py</code> <pre><code>@classmethod\ndef get_list_by_item_id(cls, conn: Connection | Cursor, item_id: int) -&gt; list[Row] | list[dict[str, Any]]:\n    \"\"\"Get all entries related to a specific item, joining quest titles.\n\n    Args:\n        conn: A connection to the database.\n        item_id: The article ID of the item.\n\n    Returns:\n        The rows matching the criteria.\n    \"\"\"\n    quest = PTable(QuestTable.__tablename__)\n    query = (\n        Query.from_(cls.__table__)\n        .select(\n            cls.__table__.quest_id,\n            quest.title.as_(\"quest_title\"),\n        )\n        .join(quest).on(quest.article_id == cls.__table__.quest_id)\n    )\n    return cls.get_list_by_field(conn, \"item_id\", item_id, base_query=query)\n</code></pre>"},{"location":"api/schema/#tibiawikisql.schema.QuestRewardTable.get_list_by_quest_id","title":"get_list_by_quest_id  <code>classmethod</code>","text":"<pre><code>get_list_by_quest_id(\n    conn: Connection | Cursor, quest_id: int\n) -&gt; list[Row] | list[dict[str, Any]]\n</code></pre> <p>Get all entries related to a specific quest, joining item titles.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection to the database.</p> required <code>quest_id</code> <code>int</code> <p>The article ID of the quest.</p> required <p>Returns:</p> Type Description <code>list[Row] | list[dict[str, Any]]</code> <p>The rows matching the criteria.</p> Source code in <code>tibiawikisql/schema.py</code> <pre><code>@classmethod\ndef get_list_by_quest_id(cls, conn: Connection | Cursor, quest_id: int) -&gt; list[Row] | list[dict[str, Any]]:\n    \"\"\"Get all entries related to a specific quest, joining item titles.\n\n    Args:\n        conn: A connection to the database.\n        quest_id: The article ID of the quest.\n\n    Returns:\n        The rows matching the criteria.\n    \"\"\"\n    item = PTable(ItemTable.__tablename__)\n    query = (\n        Query.from_(cls.__table__)\n        .select(\n            cls.__table__.item_id,\n            item.title.as_(\"item_title\"),\n        )\n        .join(item).on(item.article_id == cls.__table__.item_id)\n    )\n    return cls.get_list_by_field(conn, \"quest_id\", quest_id, base_query=query)\n</code></pre>"},{"location":"api/schema/#tibiawikisql.schema.create_tables","title":"create_tables","text":"<pre><code>create_tables(conn)\n</code></pre> <p>Create all the tables in the database.</p>"},{"location":"api/schema/#tibiawikisql.schema.create_tables--parameters","title":"Parameters","text":"<p>conn: sqlite3.Connection, sqlite3.Cursor     A connection to the database.</p> Source code in <code>tibiawikisql/schema.py</code> <pre><code>def create_tables(conn):\n    \"\"\"Create all the tables in the database.\n\n    Parameters\n    ----------\n    conn: sqlite3.Connection, sqlite3.Cursor\n        A connection to the database.\n\n    \"\"\"\n    for table in Table.all_tables():\n        conn.execute(table.get_drop_statement())\n        conn.executescript(table.get_create_table_statement())\n</code></pre>"},{"location":"api/utils/","title":"Utilities","text":""},{"location":"api/utils/#tibiawikisql.utils","title":"tibiawikisql.utils","text":"<p>Functions:</p> Name Description <code>clean_question_mark</code> <p>Remove question marks from strings, returning <code>None</code> if one is found.</p> <code>clean_links</code> <p>Remove any links from the string, changing them for their plain version.</p> <code>convert_tibiawiki_position</code> <p>Convert from TibiaWiki position system to regular numeric coordinates.</p> <code>find_template</code> <p>Find a template in a string containing wiki code.</p> <code>find_templates</code> <p>Create a generator to find templates in a wikicode string.</p> <code>parse_boolean</code> <p>Parse a boolean value from a string.</p> <code>parse_date</code> <p>Parse a date from the formats used in TibiaWiki.</p> <code>parse_float</code> <p>From a string, parses a floating value.</p> <code>parse_integer</code> <p>Parse an integer from a string. Extra characters are ignored.</p> <code>parse_loot_statistics</code> <p>Get every dropped item from a creature's loot statistics.</p> <code>parse_min_max</code> <p>Parse the minimum and maximum amounts of a loot drop.</p> <code>parse_sounds</code> <p>Parse a list of sounds, using Template:Sound_List.</p> <code>client_color_to_rgb</code> <p>Convert a color number from Tibia's client data to a RGB value.</p> <code>parse_templatates_data</code> <p>Parse the attributes of an Infobox template.</p> <code>strip_code</code> <p>Strip code from Wikicode elements into plain strings.</p>"},{"location":"api/utils/#tibiawikisql.utils.clean_question_mark","title":"clean_question_mark","text":"<pre><code>clean_question_mark(content: str) -&gt; str | None\n</code></pre> <p>Remove question marks from strings, returning <code>None</code> if one is found.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>A string to clean.</p> required <p>Returns:</p> Type Description <code>str | None</code> <p>The string, or <code>`None</code> if it was a question mark.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def clean_question_mark(content: str) -&gt; str | None:\n    \"\"\"Remove question marks from strings, returning ``None`` if one is found.\n\n    Args:\n        content: A string to clean.\n\n    Returns:\n        The string, or ``None` if it was a question mark.\n\n    \"\"\"\n    if not content:\n        return None\n    if \"?\" in content:\n        return None\n    return content.strip()\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.clean_links","title":"clean_links","text":"<pre><code>clean_links(content: str) -&gt; str\n</code></pre><pre><code>clean_links(\n    content: str, strip_question_mark: Literal[False]\n) -&gt; str\n</code></pre><pre><code>clean_links(\n    content: str, strip_question_mark: Literal[True]\n) -&gt; str | None\n</code></pre> <pre><code>clean_links(\n    content: str, strip_question_mark: bool = False\n) -&gt; str | None\n</code></pre> <p>Remove any links from the string, changing them for their plain version.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>The string to clean.</p> required <code>strip_question_mark</code> <code>bool</code> <p>If the content is a question mark, return None.</p> <code>False</code> <p>Returns:</p> Type Description <code>str | None</code> <p>The clean string, with no links.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def clean_links(content: str, strip_question_mark: bool = False) -&gt; str | None:\n    \"\"\"Remove any links from the string, changing them for their plain version.\n\n    Args:\n        content: The string to clean.\n        strip_question_mark: If the content is a question mark, return None.\n\n    Returns:\n        The clean string, with no links.\n\n    \"\"\"\n    img = re.compile(\"(File|Image):\", re.IGNORECASE)\n    clean_content = re.sub(r\"&lt;/?[bB][rR] ?/?&gt;\", \"\\n\", content)\n\n    # Convert lists to Markdown lists so they are not removed  by `strip_code`.\n\n    lines = clean_content.splitlines()\n    converted_lines = []\n    for line in lines:\n        stripped = line.lstrip()\n        match = re.match(r\"^(\\*+)\\s*(.*)\", stripped)\n        if match:\n            indent = \"\\t\" * (len(match.group(1)) - 1)\n            content_line = match.group(2).strip()\n            converted_lines.append(f\"{indent}- {content_line}\")\n        else:\n            converted_lines.append(line)\n    clean_content = \"\\n\".join(converted_lines)\n\n    parsed = mwparserfromhell.parse(clean_content)\n    # Remove image links as well\n    remove_img = [f for f in parsed.ifilter_wikilinks() if img.match(str(f.title))]\n    for f in remove_img:\n        parsed.remove(f)\n    for template in parsed.ifilter_templates():\n        if template.name:\n            parsed.replace(template, template.params[0])\n    clean_content = parsed.strip_code().strip()\n    if strip_question_mark and clean_content == \"?\":\n        return None\n    return clean_content\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.convert_tibiawiki_position","title":"convert_tibiawiki_position","text":"<pre><code>convert_tibiawiki_position(pos: str) -&gt; int\n</code></pre> <p>Convert from TibiaWiki position system to regular numeric coordinates.</p> <p>TibiaWiki takes the coordinates and splits in two bytes, represented in decimal, separated by a period.</p> <p>Parameters:</p> Name Type Description Default <code>pos</code> <code>str</code> <p>A string containing a coordinate.</p> required <p>Returns:</p> Type Description <code>int</code> <p>The coordinate value.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def convert_tibiawiki_position(pos: str) -&gt; int:\n    \"\"\"Convert from TibiaWiki position system to regular numeric coordinates.\n\n    TibiaWiki takes the coordinates and splits in two bytes, represented in decimal, separated by a period.\n\n    Args:\n        pos: A string containing a coordinate.\n\n    Returns:\n        The coordinate value.\n\n    \"\"\"\n    position_splits = pos.strip().split(\".\")\n    try:\n        coordinate = int(position_splits[0]) &lt;&lt; 8\n        if len(position_splits) &gt; 1 and position_splits[1].strip():\n            coordinate += int(position_splits[1])\n        return coordinate\n    except (ValueError, IndexError):\n        return 0\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.find_template","title":"find_template","text":"<pre><code>find_template(\n    content: str,\n    template_name: str,\n    partial: bool = False,\n    recursive: bool = False,\n) -&gt; Template | None\n</code></pre> <p>Find a template in a string containing wiki code.</p> <p>If there are multiple matches, the first one will be returned.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>A string containing wiki code.</p> required <code>template_name</code> <code>str</code> <p>The name of the template to match. Case-insensitive.</p> required <code>partial</code> <code>bool</code> <p>Whether to match the entire template name or just a substring of it. e.g. match \"Loot Table\" when searching for \"Loot\"</p> <code>False</code> <code>recursive</code> <code>bool</code> <p>Whether to search for templates recursively, by going inside nested templates.</p> <code>False</code> <p>Returns:</p> Type Description <code>Template | None</code> <p>The first template found in the content, if any. Otherwise, <code>None</code> is returned.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def find_template(content: str, template_name: str, partial: bool = False, recursive: bool = False) -&gt; Template | None:\n    \"\"\"Find a template in a string containing wiki code.\n\n    If there are multiple matches, the first one will be returned.\n\n    Args:\n        content: A string containing wiki code.\n        template_name: The name of the template to match. Case-insensitive.\n        partial: Whether to match the entire template name or just a substring of it.\n            e.g. match \"Loot Table\" when searching for \"Loot\"\n        recursive: Whether to search for templates recursively, by going inside nested templates.\n\n    Returns:\n        The first template found in the content, if any. Otherwise, ``None`` is returned.\n\n    \"\"\"\n    return next(find_templates(content, template_name, partial, recursive), None)\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.find_templates","title":"find_templates","text":"<pre><code>find_templates(\n    content: str,\n    template_name: str,\n    partial: bool = False,\n    recursive: bool = False,\n) -&gt; Generator[Template]\n</code></pre> <p>Create a generator to find templates in a wikicode string.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>A string containing wiki code.</p> required <code>template_name</code> <code>str</code> <p>The name of the template to match. Case insensitive.</p> required <code>partial</code> <code>bool</code> <p>Whether to match the entire template name or just a substring of it. e.g. match \"Loot Table\" when searching for \"Loot\"</p> <code>False</code> <code>recursive</code> <code>bool</code> <p>Whether to search for templates recursively, by going inside nested templates.</p> <code>False</code> <p>Yields:</p> Type Description <code>Generator[Template]</code> <p>Templates matching provided string.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def find_templates(content: str, template_name: str, partial: bool = False, recursive: bool = False) -&gt; Generator[\n    Template]:\n    \"\"\"Create a generator to find templates in a wikicode string.\n\n    Args:\n        content: A string containing wiki code.\n        template_name: The name of the template to match. Case insensitive.\n        partial: Whether to match the entire template name or just a substring of it.\n            e.g. match \"Loot Table\" when searching for \"Loot\"\n        recursive: Whether to search for templates recursively, by going inside nested templates.\n\n    Yields:\n        Templates matching provided string.\n\n    \"\"\"\n    parsed = mwparserfromhell.parse(content)\n    templates: list[Template] = parsed.ifilter_templates(recursive=recursive)\n    template_name = template_name.strip().lower().replace(\"_\", \" \")\n    for template in templates:\n        name = strip_code(template.name).lower().replace(\"_\", \" \")\n        if (partial and template_name in name) or (not partial and template_name == name):\n            yield template\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.parse_boolean","title":"parse_boolean","text":"<pre><code>parse_boolean(\n    value: str, default: bool = False, invert: bool = False\n) -&gt; bool\n</code></pre> <p>Parse a boolean value from a string.</p> <p>String must contain \"yes\" to be considered True.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>The string containing an integer.</p> required <code>default</code> <code>bool</code> <p>The value to return if no boolean string is found.</p> <code>False</code> <code>invert</code> <code>bool</code> <p>Whether to invert the value or not.</p> <code>False</code> <p>Returns:</p> Type Description <code>bool</code> <p>The boolean value parsed in the string, or default if it doesn't match yes or no.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def parse_boolean(value: str, default: bool = False, invert: bool = False) -&gt; bool:\n    \"\"\"Parse a boolean value from a string.\n\n    String must contain \"yes\" to be considered True.\n\n    Args:\n        value: The string containing an integer.\n        default: The value to return if no boolean string is found.\n        invert: Whether to invert the value or not.\n\n    Returns:\n        The boolean value parsed in the string, or default if it doesn't match yes or no.\n\n    \"\"\"\n    value = value.strip().lower()\n    if value == \"yes\":\n        return not invert\n    if value == \"no\":\n        return invert\n    return default\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.parse_date","title":"parse_date","text":"<pre><code>parse_date(value: str) -&gt; date\n</code></pre> <p>Parse a date from the formats used in TibiaWiki.</p> <ul> <li>June 28, 2019</li> <li>Aug 21, 2014</li> <li>May 14, 2024 17:45</li> </ul> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>The string containing the date.</p> required <p>Returns:</p> Type Description <code>date</code> <p>The date represented by the string.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def parse_date(value: str) -&gt; datetime.date:\n    \"\"\"Parse a date from the formats used in TibiaWiki.\n\n    - June 28, 2019\n    - Aug 21, 2014\n    - May 14, 2024 17:45\n\n    Args:\n        value: The string containing the date.\n\n    Returns:\n        The date represented by the string.\n\n    \"\"\"\n    value = value.strip()\n    date_formats = [\n        \"%B %d, %Y\",\n        \"%b %d, %Y\",\n        \"%Y\",\n        \"%B %d, %Y %H:%M\",\n        \"%b %d, %Y %H:%M\",\n        \"%Y %H:%M\",\n    ]\n    for date_format in date_formats:\n        try:\n            dt = datetime.datetime.strptime(value, date_format)\n            return dt.date().isoformat()\n        except ValueError:\n            continue\n\n    msg = f\"Date format for value '{value}' not recognized\"\n    raise ValueError(msg)\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.parse_float","title":"parse_float","text":"<pre><code>parse_float(value: str, default: float = 0.0) -&gt; float\n</code></pre> <p>From a string, parses a floating value.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>The string containing the floating number.</p> required <code>default</code> <code>float</code> <p>The value to return if no float is found.</p> <code>0.0</code> <p>Returns:</p> Type Description <code>float</code> <p>The floating number found, or the default value provided.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def parse_float(value: str, default: float = 0.0) -&gt; float:\n    \"\"\"From a string, parses a floating value.\n\n    Args:\n        value: The string containing the floating number.\n        default: The value to return if no float is found.\n\n    Returns:\n        The floating number found, or the default value provided.\n\n    \"\"\"\n    match = float_pattern.search(value)\n    if match:\n        return float(match.group(0))\n    return default\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.parse_integer","title":"parse_integer","text":"<pre><code>parse_integer(value: str, default: int = 0) -&gt; int\n</code></pre> <p>Parse an integer from a string. Extra characters are ignored.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>The string containing an integer.</p> required <code>default</code> <code>int</code> <p>The value to return if no integer is found.</p> <code>0</code> <p>Returns:</p> Type Description <code>int</code> <p>The numeric value found, or the default value provided.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def parse_integer(value: str, default: int = 0) -&gt; int:\n    \"\"\"Parse an integer from a string. Extra characters are ignored.\n\n    Args:\n        value: The string containing an integer.\n        default: The value to return if no integer is found.\n\n    Returns:\n        The numeric value found, or the default value provided.\n\n    \"\"\"\n    match = int_pattern.search(value)\n    if match:\n        return int(match.group(0))\n    return default\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.parse_loot_statistics","title":"parse_loot_statistics","text":"<pre><code>parse_loot_statistics(value: str) -&gt; tuple[int, list[Any]]\n</code></pre> <p>Get every dropped item from a creature's loot statistics.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>A string containing a creature's loot statistics.</p> required <p>Returns:</p> Type Description <code>tuple[int, list[Any]]</code> <p>A tuple containing the total kills and a list of entries.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def parse_loot_statistics(value: str) -&gt; tuple[int, list[Any]]:\n    \"\"\"Get every dropped item from a creature's loot statistics.\n\n    Args:\n        value: A string containing a creature's loot statistics.\n\n    Returns:\n        A tuple containing the total kills and a list of entries.\n\n    \"\"\"\n    template = find_template(value, \"Loot2\", partial=True)\n    if not template:\n        return 0, []\n    kills = parse_integer(strip_code(template.get(\"kills\", 0)))\n    entries = [_parse_loot_entry(param.value.strip_code()) for param in template.params if not param.showkey]\n    return kills, entries\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.parse_min_max","title":"parse_min_max","text":"<pre><code>parse_min_max(value: str) -&gt; tuple[int, int]\n</code></pre> <p>Parse the minimum and maximum amounts of a loot drop.</p> <p>They consist of two numbers separated by a hyphen, e.g. <code>0-40</code></p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>A string containing minimum and maximum values.</p> required <p>Returns:</p> Type Description <code>tuple[int, int]</code> <p>The minimum and maximum amounts.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def parse_min_max(value: str) -&gt; tuple[int, int]:\n    \"\"\"Parse the minimum and maximum amounts of a loot drop.\n\n    They consist of two numbers separated by a hyphen, e.g. ``0-40``\n\n    Args:\n        value: A string containing minimum and maximum values.\n\n    Returns:\n        The minimum and maximum amounts.\n\n    \"\"\"\n    match = min_max_pattern.search(value)\n    if match:\n        return int(match.group(1)), int(match.group(2))\n    return 0, parse_integer(value, 1)\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.parse_sounds","title":"parse_sounds","text":"<pre><code>parse_sounds(value: str) -&gt; list[str]\n</code></pre> <p>Parse a list of sounds, using Template:Sound_List.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>A string containing the list of sounds.</p> required <p>Returns:</p> Type Description <code>list[str]</code> <p>A list of sounds.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def parse_sounds(value: str) -&gt; list[str]:\n    \"\"\"Parse a list of sounds, using Template:Sound_List.\n\n    Args:\n        value: A string containing the list of sounds.\n\n    Returns:\n        A list of sounds.\n\n    \"\"\"\n    template = find_template(value, \"Sound\", partial=True)\n    if not template:\n        return []\n    return [strip_code(param) for param in template.params if param]\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.client_color_to_rgb","title":"client_color_to_rgb","text":"<pre><code>client_color_to_rgb(value: int) -&gt; int\n</code></pre> <p>Convert a color number from Tibia's client data to a RGB value.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>int</code> <p>A numeric value representing a color.</p> required <p>Returns:</p> Type Description <code>int</code> <p>The hexadecimal color represented.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def client_color_to_rgb(value: int) -&gt; int:\n    \"\"\"Convert a color number from Tibia's client data to a RGB value.\n\n    Args:\n        value: A numeric value representing a color.\n\n    Returns:\n        The hexadecimal color represented.\n\n    \"\"\"\n    if value &lt; 0 or value &gt; 215:\n        return 0\n    return ((value // 36 * 0x33) &lt;&lt; 16) + ((value // 6 % 6 * 0x33) &lt;&lt; 8) + ((value % 6 * 0x33) &amp; 0xFF)\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.parse_templatates_data","title":"parse_templatates_data","text":"<pre><code>parse_templatates_data(\n    content: str,\n) -&gt; dict[str, dict[str, str]]\n</code></pre> <p>Parse the attributes of an Infobox template.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>A string containing an Infobox template.</p> required <p>Returns:</p> Type Description <code>dict[str, dict[str, str]]</code> <p>A dictionary with every attribute as key.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def parse_templatates_data(content: str) -&gt; dict[str, dict[str, str]]:\n    \"\"\"Parse the attributes of an Infobox template.\n\n    Args:\n        content: A string containing an Infobox template.\n\n    Returns:\n        A dictionary with every attribute as key.\n\n    \"\"\"\n    parsed = mwparserfromhell.parse(content)\n    templates = parsed.filter_templates(recursive=False)\n    if not templates:\n        return {}\n    data = defaultdict(dict)\n    for template in templates:\n        template_name = str(template.name).strip().replace(\" \", \"_\")\n        for param in template.params:\n            key = param.name.strip()\n            if not param.showkey:\n                key = int(key)\n            value = param.value.strip()\n            if value:\n                data[template_name][key] = value\n    return data\n</code></pre>"},{"location":"api/utils/#tibiawikisql.utils.strip_code","title":"strip_code","text":"<pre><code>strip_code(value: Any) -&gt; str | int | dict | None\n</code></pre> <p>Strip code from Wikicode elements into plain strings.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>Any</code> <p>A string or object containing wiki code.</p> required <p>Returns:</p> Type Description <code>str | int | dict | None</code> <p>A string representing the plain text content.</p> Source code in <code>tibiawikisql/utils.py</code> <pre><code>def strip_code(value: Any) -&gt; str | int | dict | None:\n    \"\"\"Strip code from Wikicode elements into plain strings.\n\n    Args:\n        value: A string or object containing wiki code.\n\n    Returns:\n        A string representing the plain text content.\n\n    \"\"\"\n    if value is None or isinstance(value, int):\n        return value\n    if isinstance(value, str):\n        return value.strip()\n    if isinstance(value, Parameter):\n        return value.value.strip_code().strip()\n    if isinstance(value, Wikicode):\n        return value.strip_code().strip()\n    if isinstance(value, dict):\n        for key, val in value.items():\n            value[key] = strip_code(val)\n        return value\n    return None\n</code></pre>"},{"location":"api/models/","title":"Package Index","text":""},{"location":"api/models/#tibiawikisql.models","title":"tibiawikisql.models","text":"<p>Contains all the models representing TibiaWiki articles.</p> <p>Modules:</p> Name Description <code>achievement</code> <code>base</code> <p>Module with base classes used by models.</p> <code>charm</code> <code>creature</code> <code>house</code> <code>imbuement</code> <code>item</code> <code>mount</code> <code>npc</code> <code>outfit</code> <code>quest</code> <code>spell</code> <code>update</code> <code>world</code>"},{"location":"api/models/achievement/","title":"Achievement","text":""},{"location":"api/models/achievement/#tibiawikisql.models.achievement","title":"tibiawikisql.models.achievement","text":"<p>Classes:</p> Name Description <code>Achievement</code> <p>Represents an Achievement.</p>"},{"location":"api/models/achievement/#tibiawikisql.models.achievement.Achievement","title":"Achievement  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithStatus</code>, <code>WithVersion</code>, <code>RowModel</code></p> <p>Represents an Achievement.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents an Achievement.\",\n  \"properties\": {\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"grade\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Grade\"\n    },\n    \"points\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Points\"\n    },\n    \"description\": {\n      \"title\": \"Description\",\n      \"type\": \"string\"\n    },\n    \"spoiler\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Spoiler\"\n    },\n    \"is_secret\": {\n      \"title\": \"Is Secret\",\n      \"type\": \"boolean\"\n    },\n    \"is_premium\": {\n      \"title\": \"Is Premium\",\n      \"type\": \"boolean\"\n    },\n    \"achievement_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Achievement Id\"\n    }\n  },\n  \"required\": [\n    \"version\",\n    \"status\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"grade\",\n    \"points\",\n    \"description\",\n    \"spoiler\",\n    \"is_secret\",\n    \"is_premium\",\n    \"achievement_id\"\n  ],\n  \"title\": \"Achievement\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>grade</code>                 (<code>int | None</code>)             </li> <li> <code>points</code>                 (<code>int | None</code>)             </li> <li> <code>description</code>                 (<code>str</code>)             </li> <li> <code>spoiler</code>                 (<code>str | None</code>)             </li> <li> <code>is_secret</code>                 (<code>bool</code>)             </li> <li> <code>is_premium</code>                 (<code>bool</code>)             </li> <li> <code>achievement_id</code>                 (<code>int | None</code>)             </li> </ul>"},{"location":"api/models/achievement/#tibiawikisql.models.achievement.Achievement.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The achievement's name.</p>"},{"location":"api/models/achievement/#tibiawikisql.models.achievement.Achievement.grade","title":"grade  <code>pydantic-field</code>","text":"<pre><code>grade: int | None\n</code></pre> <p>The achievement's grade, from 1 to 3. Also known as 'stars'.</p>"},{"location":"api/models/achievement/#tibiawikisql.models.achievement.Achievement.points","title":"points  <code>pydantic-field</code>","text":"<pre><code>points: int | None\n</code></pre> <p>The amount of points given by this achievement.</p>"},{"location":"api/models/achievement/#tibiawikisql.models.achievement.Achievement.description","title":"description  <code>pydantic-field</code>","text":"<pre><code>description: str\n</code></pre> <p>The official description shown for the achievement.</p>"},{"location":"api/models/achievement/#tibiawikisql.models.achievement.Achievement.spoiler","title":"spoiler  <code>pydantic-field</code>","text":"<pre><code>spoiler: str | None\n</code></pre> <p>Instructions or information on how to obtain the achievement.</p>"},{"location":"api/models/achievement/#tibiawikisql.models.achievement.Achievement.is_secret","title":"is_secret  <code>pydantic-field</code>","text":"<pre><code>is_secret: bool\n</code></pre> <p>Whether the achievement is secret or not.</p>"},{"location":"api/models/achievement/#tibiawikisql.models.achievement.Achievement.is_premium","title":"is_premium  <code>pydantic-field</code>","text":"<pre><code>is_premium: bool\n</code></pre> <p>Whether a premium account is required to get this achievement.</p>"},{"location":"api/models/achievement/#tibiawikisql.models.achievement.Achievement.achievement_id","title":"achievement_id  <code>pydantic-field</code>","text":"<pre><code>achievement_id: int | None\n</code></pre> <p>The internal ID of the achievement.</p>"},{"location":"api/models/base/","title":"Base","text":""},{"location":"api/models/base/#tibiawikisql.models.base","title":"tibiawikisql.models.base","text":"<p>Module with base classes used by models.</p> <p>Classes:</p> Name Description <code>WithStatus</code> <p>Adds the status field to a model.</p> <code>WithVersion</code> <p>Adds the version field to a model.</p> <code>WithImage</code> <p>Adds the image field to a model.</p> <code>RowModel</code> <p>A mixin class to indicate that this model comes from a SQL table.</p>"},{"location":"api/models/base/#tibiawikisql.models.base.WithStatus","title":"WithStatus  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Adds the status field to a model.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Adds the status field to a model.\",\n  \"properties\": {\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"status\"\n  ],\n  \"title\": \"WithStatus\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/base/#tibiawikisql.models.base.WithStatus.status","title":"status  <code>pydantic-field</code>","text":"<pre><code>status: str\n</code></pre> <p>The in-game status for this element</p>"},{"location":"api/models/base/#tibiawikisql.models.base.WithVersion","title":"WithVersion  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Adds the version field to a model.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Adds the version field to a model.\",\n  \"properties\": {\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    }\n  },\n  \"required\": [\n    \"version\"\n  ],\n  \"title\": \"WithVersion\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>version</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"api/models/base/#tibiawikisql.models.base.WithVersion.version","title":"version  <code>pydantic-field</code>","text":"<pre><code>version: str | None\n</code></pre> <p>The client version when this was implemented in the game, if known.</p>"},{"location":"api/models/base/#tibiawikisql.models.base.WithImage","title":"WithImage  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Adds the image field to a model.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Adds the image field to a model.\",\n  \"properties\": {\n    \"image\": {\n      \"anyOf\": [\n        {\n          \"format\": \"binary\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image\"\n    }\n  },\n  \"title\": \"WithImage\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>image</code>                 (<code>bytes | None</code>)             </li> </ul>"},{"location":"api/models/base/#tibiawikisql.models.base.WithImage.image","title":"image  <code>pydantic-field</code>","text":"<pre><code>image: bytes | None = None\n</code></pre> <p>An image representing this article.</p>"},{"location":"api/models/base/#tibiawikisql.models.base.RowModel","title":"RowModel  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>A mixin class to indicate that this model comes from a SQL table.</p> Show JSON schema: <pre><code>{\n  \"description\": \"A mixin class to indicate that this model comes from a SQL table.\",\n  \"properties\": {},\n  \"title\": \"RowModel\",\n  \"type\": \"object\"\n}\n</code></pre>"},{"location":"api/models/base/#tibiawikisql.models.base.RowModel.table","title":"table  <code>class-attribute</code>","text":"<pre><code>table: type[Table] = NotImplemented\n</code></pre> <p>The SQL table where this model is stored.</p>"},{"location":"api/models/base/#tibiawikisql.models.base.RowModel.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor) -&gt; None\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/base.py</code> <pre><code>def insert(self, conn: Connection | Cursor) -&gt; None:\n    \"\"\"Insert the model into its respective database table.\n\n    Args:\n        conn: A cursor or connection to the database.\n    \"\"\"\n    rows = {}\n    for column in self.table.columns:\n        try:\n            value = getattr(self, column.name)\n            if value == column.default:\n                continue\n            rows[column.name] = value\n        except AttributeError:\n            continue\n    self.table.insert(conn, **rows)\n</code></pre>"},{"location":"api/models/base/#tibiawikisql.models.base.RowModel.from_row","title":"from_row  <code>classmethod</code>","text":"<pre><code>from_row(row: Row | dict[str, Any]) -&gt; Self\n</code></pre> <p>Return an instance of the model from a row or dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>Row | dict[str, Any]</code> <p>A dict representing a row or a Row object.</p> required <p>Returns:</p> Type Description <code>Self</code> <p>An instance of the class, based on the row.</p> Source code in <code>tibiawikisql/models/base.py</code> <pre><code>@classmethod\ndef from_row(cls, row: Row | dict[str, Any]) -&gt; Self:\n    \"\"\"Return an instance of the model from a row or dictionary.\n\n    Args:\n        row: A dict representing a row or a Row object.\n\n    Returns:\n        An instance of the class, based on the row.\n\n    \"\"\"\n    if isinstance(row, Row):\n        row = dict(row)\n    return cls.model_validate(row)\n</code></pre>"},{"location":"api/models/base/#tibiawikisql.models.base.RowModel.get_one_by_field","title":"get_one_by_field  <code>classmethod</code>","text":"<pre><code>get_one_by_field(\n    conn: Connection | Cursor,\n    field: str,\n    value: Any,\n    use_like: bool = False,\n) -&gt; Self | None\n</code></pre> <p>Get a single element matching the field's value.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection or cursor of the database.</p> required <code>field</code> <code>str</code> <p>The field to filter with.</p> required <code>value</code> <code>Any</code> <p>The value to look for.</p> required <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as a comparator instead of <code>=</code>.</p> <code>False</code> <p>Returns:</p> Type Description <code>Self | None</code> <p>The object found, or <code>None</code> if no entries match.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>The specified field doesn't exist in the table.</p> Source code in <code>tibiawikisql/models/base.py</code> <pre><code>@classmethod\ndef get_one_by_field(cls, conn: Connection | Cursor, field: str, value: Any, use_like: bool = False) -&gt; Self | None:\n    \"\"\"Get a single element matching the field's value.\n\n    Args:\n        conn: A connection or cursor of the database.\n        field: The field to filter with.\n        value: The value to look for.\n        use_like: Whether to use ``LIKE`` as a comparator instead of ``=``.\n\n    Returns:\n        The object found, or ``None`` if no entries match.\n\n    Raises:\n        ValueError: The specified field doesn't exist in the table.\n\n    \"\"\"\n    row = cls.table.get_one_by_field(conn, field, value, use_like)\n    return cls.from_row(row) if row else None\n</code></pre>"},{"location":"api/models/base/#tibiawikisql.models.base.RowModel.get_list_by_field","title":"get_list_by_field  <code>classmethod</code>","text":"<pre><code>get_list_by_field(\n    conn: Connection | Cursor,\n    field: str,\n    value: Any | None = None,\n    use_like: bool = False,\n    sort_by: str | None = None,\n    ascending: bool = True,\n) -&gt; list[Self]\n</code></pre> <p>Get a list of elements matching the specified field's value.</p> <p>Note that this won't get values found in child tables.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection or cursor of the database.</p> required <code>field</code> <code>str</code> <p>The name of the field to filter by.</p> required <code>value</code> <code>Any | None</code> <p>The value to filter by.</p> <code>None</code> <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as a comparator instead of <code>=</code>.</p> <code>False</code> <code>sort_by</code> <code>str | None</code> <p>The name of the field to sort by.</p> <code>None</code> <code>ascending</code> <code>bool</code> <p>Whether to sort ascending or descending.</p> <code>True</code> <p>Returns:</p> Type Description <code>list[Self]</code> <p>A list containing all matching objects.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>The specified field doesn't exist in the table.</p> Source code in <code>tibiawikisql/models/base.py</code> <pre><code>@classmethod\ndef get_list_by_field(\n        cls,\n        conn: Connection | Cursor,\n        field: str,\n        value: Any | None = None,\n        use_like: bool = False,\n        sort_by: str | None = None,\n        ascending: bool = True,\n) -&gt; list[Self]:\n    \"\"\"Get a list of elements matching the specified field's value.\n\n    Note that this won't get values found in child tables.\n\n    Args:\n        conn:  A connection or cursor of the database.\n        field: The name of the field to filter by.\n        value: The value to filter by.\n        use_like: Whether to use ``LIKE`` as a comparator instead of ``=``.\n        sort_by: The name of the field to sort by.\n        ascending: Whether to sort ascending or descending.\n\n    Returns:\n        A list containing all matching objects.\n\n    Raises:\n        ValueError: The specified field doesn't exist in the table.\n\n    \"\"\"\n    rows = cls.table.get_list_by_field(conn, field, value, use_like, sort_by, ascending)\n    return [cls.from_row(r) for r in rows]\n</code></pre>"},{"location":"api/models/base/#tibiawikisql.models.base.RowModel.get_by_id","title":"get_by_id  <code>classmethod</code>","text":"<pre><code>get_by_id(\n    conn: Connection | Cursor, article_id: int\n) -&gt; Self | None\n</code></pre> <p>Get an entry by its article ID.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection to the database.</p> required <code>article_id</code> <code>int</code> <p>The article ID to search for.</p> required <p>Returns:</p> Type Description <code>Self | None</code> <p>The model matching the article ID if found.</p> Source code in <code>tibiawikisql/models/base.py</code> <pre><code>@classmethod\ndef get_by_id(cls, conn: Connection | Cursor, article_id: int) -&gt; Self | None:\n    \"\"\"Get an entry by its article ID.\n\n    Args:\n        conn: A connection to the database.\n        article_id: The article ID to search for.\n\n    Returns:\n        The model matching the article ID if found.\n\n    \"\"\"\n    return cls.get_one_by_field(conn, \"article_id\", article_id)\n</code></pre>"},{"location":"api/models/base/#tibiawikisql.models.base.RowModel.get_by_title","title":"get_by_title  <code>classmethod</code>","text":"<pre><code>get_by_title(\n    conn: Connection | Cursor, title: str\n) -&gt; Self | None\n</code></pre> <p>Get an entry by its title.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection to the database.</p> required <code>title</code> <code>str</code> <p>The title of the article.</p> required <p>Returns:</p> Type Description <code>Self | None</code> <p>The model matching the article title if found.</p> Source code in <code>tibiawikisql/models/base.py</code> <pre><code>@classmethod\ndef get_by_title(cls, conn: Connection | Cursor, title: str) -&gt; Self | None:\n    \"\"\"Get an entry by its title.\n\n    Args:\n        conn: A connection to the database.\n        title: The title of the article.\n\n    Returns:\n        The model matching the article title if found.\n\n    \"\"\"\n    return cls.get_one_by_field(conn, \"title\", title)\n</code></pre>"},{"location":"api/models/charm/","title":"Charm","text":""},{"location":"api/models/charm/#tibiawikisql.models.charm","title":"tibiawikisql.models.charm","text":"<p>Classes:</p> Name Description <code>Charm</code> <p>Represents a charm.</p>"},{"location":"api/models/charm/#tibiawikisql.models.charm.Charm","title":"Charm  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithStatus</code>, <code>WithVersion</code>, <code>WithImage</code>, <code>RowModel</code></p> <p>Represents a charm.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a charm.\",\n  \"properties\": {\n    \"image\": {\n      \"anyOf\": [\n        {\n          \"format\": \"binary\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"type\": {\n      \"title\": \"Type\",\n      \"type\": \"string\"\n    },\n    \"effect\": {\n      \"title\": \"Effect\",\n      \"type\": \"string\"\n    },\n    \"cost\": {\n      \"title\": \"Cost\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"version\",\n    \"status\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"type\",\n    \"effect\",\n    \"cost\"\n  ],\n  \"title\": \"Charm\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>image</code>                 (<code>bytes | None</code>)             </li> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>type</code>                 (<code>str</code>)             </li> <li> <code>effect</code>                 (<code>str</code>)             </li> <li> <code>cost</code>                 (<code>int</code>)             </li> </ul>"},{"location":"api/models/charm/#tibiawikisql.models.charm.Charm.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the charm.</p>"},{"location":"api/models/charm/#tibiawikisql.models.charm.Charm.type","title":"type  <code>pydantic-field</code>","text":"<pre><code>type: str\n</code></pre> <p>The type of the charm.</p>"},{"location":"api/models/charm/#tibiawikisql.models.charm.Charm.effect","title":"effect  <code>pydantic-field</code>","text":"<pre><code>effect: str\n</code></pre> <p>The charm's description.</p>"},{"location":"api/models/charm/#tibiawikisql.models.charm.Charm.cost","title":"cost  <code>pydantic-field</code>","text":"<pre><code>cost: int\n</code></pre> <p>The number of charm points needed to unlock.</p>"},{"location":"api/models/creature/","title":"Creature","text":""},{"location":"api/models/creature/#tibiawikisql.models.creature","title":"tibiawikisql.models.creature","text":"<p>Classes:</p> Name Description <code>CreatureAbility</code> <p>Represents a creature's ability.</p> <code>CreatureDrop</code> <p>Represents an item dropped by a creature.</p> <code>CreatureMaxDamage</code> <p>Represent a creature's max damage, broke down by damage type.</p> <code>Creature</code> <p>Represents a creature.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureAbility","title":"CreatureAbility  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a creature's ability.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a creature's ability.\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"effect\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Effect\"\n    },\n    \"element\": {\n      \"title\": \"Element\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"element\"\n  ],\n  \"title\": \"CreatureAbility\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>effect</code>                 (<code>str | None</code>)             </li> <li> <code>element</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureAbility.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the ability.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureAbility.effect","title":"effect  <code>pydantic-field</code>","text":"<pre><code>effect: str | None = None\n</code></pre> <p>The effect of the ability, or the damage range.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureAbility.element","title":"element  <code>pydantic-field</code>","text":"<pre><code>element: str\n</code></pre> <p>The element of damage type of the ability. This could also be a status condition instead. For abilities that are just plain text, <code>plain_text</code> is set. For abilities that are not using the abilities templates in TibiaWiki, they are saved as a single entry with element: <code>no_template</code>.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureDrop","title":"CreatureDrop  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents an item dropped by a creature.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents an item dropped by a creature.\",\n  \"properties\": {\n    \"item_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Item Id\"\n    },\n    \"item_title\": {\n      \"title\": \"Item Title\",\n      \"type\": \"string\"\n    },\n    \"min\": {\n      \"title\": \"Min\",\n      \"type\": \"integer\"\n    },\n    \"max\": {\n      \"title\": \"Max\",\n      \"type\": \"integer\"\n    },\n    \"chance\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Chance\"\n    }\n  },\n  \"required\": [\n    \"item_title\",\n    \"min\",\n    \"max\"\n  ],\n  \"title\": \"CreatureDrop\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>item_id</code>                 (<code>int | None</code>)             </li> <li> <code>item_title</code>                 (<code>str</code>)             </li> <li> <code>min</code>                 (<code>int</code>)             </li> <li> <code>max</code>                 (<code>int</code>)             </li> <li> <code>chance</code>                 (<code>float | None</code>)             </li> </ul>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureDrop.item_id","title":"item_id  <code>pydantic-field</code>","text":"<pre><code>item_id: int | None = None\n</code></pre> <p>The article id of the item.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureDrop.item_title","title":"item_title  <code>pydantic-field</code>","text":"<pre><code>item_title: str\n</code></pre> <p>The title of the dropped item.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureDrop.min","title":"min  <code>pydantic-field</code>","text":"<pre><code>min: int\n</code></pre> <p>The minimum possible amount of the dropped item.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureDrop.max","title":"max  <code>pydantic-field</code>","text":"<pre><code>max: int\n</code></pre> <p>The maximum possible amount of the dropped item.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureDrop.chance","title":"chance  <code>pydantic-field</code>","text":"<pre><code>chance: float | None = None\n</code></pre> <p>The chance percentage of getting this item dropped by this creature.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage","title":"CreatureMaxDamage  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represent a creature's max damage, broke down by damage type.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represent a creature's max damage, broke down by damage type.\",\n  \"properties\": {\n    \"physical\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Physical\"\n    },\n    \"fire\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Fire\"\n    },\n    \"ice\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Ice\"\n    },\n    \"earth\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Earth\"\n    },\n    \"energy\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Energy\"\n    },\n    \"holy\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Holy\"\n    },\n    \"death\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Death\"\n    },\n    \"drown\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Drown\"\n    },\n    \"lifedrain\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Lifedrain\"\n    },\n    \"manadrain\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Manadrain\"\n    },\n    \"summons\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Summons\"\n    },\n    \"total\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Total\"\n    }\n  },\n  \"title\": \"CreatureMaxDamage\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>physical</code>                 (<code>int | None</code>)             </li> <li> <code>fire</code>                 (<code>int | None</code>)             </li> <li> <code>ice</code>                 (<code>int | None</code>)             </li> <li> <code>earth</code>                 (<code>int | None</code>)             </li> <li> <code>energy</code>                 (<code>int | None</code>)             </li> <li> <code>holy</code>                 (<code>int | None</code>)             </li> <li> <code>death</code>                 (<code>int | None</code>)             </li> <li> <code>drown</code>                 (<code>int | None</code>)             </li> <li> <code>lifedrain</code>                 (<code>int | None</code>)             </li> <li> <code>manadrain</code>                 (<code>int | None</code>)             </li> <li> <code>summons</code>                 (<code>int | None</code>)             </li> <li> <code>total</code>                 (<code>int | None</code>)             </li> </ul>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.physical","title":"physical  <code>pydantic-field</code>","text":"<pre><code>physical: int | None = None\n</code></pre> <p>The maximum physical damage dealt by the creature. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.fire","title":"fire  <code>pydantic-field</code>","text":"<pre><code>fire: int | None = None\n</code></pre> <p>The maximum fire damage dealt by the creature. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.ice","title":"ice  <code>pydantic-field</code>","text":"<pre><code>ice: int | None = None\n</code></pre> <p>The maximum ice damage dealt by the creature. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.earth","title":"earth  <code>pydantic-field</code>","text":"<pre><code>earth: int | None = None\n</code></pre> <p>The maximum earth damage dealt by the creature. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.energy","title":"energy  <code>pydantic-field</code>","text":"<pre><code>energy: int | None = None\n</code></pre> <p>The maximum energy damage dealt by the creature. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.holy","title":"holy  <code>pydantic-field</code>","text":"<pre><code>holy: int | None = None\n</code></pre> <p>The maximum holy damage dealt by the creature. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.death","title":"death  <code>pydantic-field</code>","text":"<pre><code>death: int | None = None\n</code></pre> <p>The maximum death damage dealt by the creature. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.drown","title":"drown  <code>pydantic-field</code>","text":"<pre><code>drown: int | None = None\n</code></pre> <p>The maximum drown damage dealt by the creature. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.lifedrain","title":"lifedrain  <code>pydantic-field</code>","text":"<pre><code>lifedrain: int | None = None\n</code></pre> <p>The maximum life drain damage dealt by the creature. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.manadrain","title":"manadrain  <code>pydantic-field</code>","text":"<pre><code>manadrain: int | None = None\n</code></pre> <p>The maximum mana drain damage dealt by the creature. This is not counted as part of the total. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.summons","title":"summons  <code>pydantic-field</code>","text":"<pre><code>summons: int | None = None\n</code></pre> <p>The maximum damage dealt by the creature's summons. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.CreatureMaxDamage.total","title":"total  <code>pydantic-field</code>","text":"<pre><code>total: int | None = None\n</code></pre> <p>The maximum damage the creature can deal in a single turn. This doesn't count manadrain and summon damage. In most cases, this is simply the sum of the other damages, but in some cases, the amount may be different. If it is unknown, but the creature does deal damage, it will be -1.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature","title":"Creature  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithStatus</code>, <code>WithVersion</code>, <code>WithImage</code>, <code>RowModel</code></p> <p>Represents a creature.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"CreatureAbility\": {\n      \"description\": \"Represents a creature's ability.\",\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"effect\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Effect\"\n        },\n        \"element\": {\n          \"title\": \"Element\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"element\"\n      ],\n      \"title\": \"CreatureAbility\",\n      \"type\": \"object\"\n    },\n    \"CreatureDrop\": {\n      \"description\": \"Represents an item dropped by a creature.\",\n      \"properties\": {\n        \"item_id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Item Id\"\n        },\n        \"item_title\": {\n          \"title\": \"Item Title\",\n          \"type\": \"string\"\n        },\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"integer\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"integer\"\n        },\n        \"chance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Chance\"\n        }\n      },\n      \"required\": [\n        \"item_title\",\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"CreatureDrop\",\n      \"type\": \"object\"\n    },\n    \"CreatureMaxDamage\": {\n      \"description\": \"Represent a creature's max damage, broke down by damage type.\",\n      \"properties\": {\n        \"physical\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Physical\"\n        },\n        \"fire\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Fire\"\n        },\n        \"ice\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Ice\"\n        },\n        \"earth\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Earth\"\n        },\n        \"energy\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Energy\"\n        },\n        \"holy\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Holy\"\n        },\n        \"death\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Death\"\n        },\n        \"drown\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Drown\"\n        },\n        \"lifedrain\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Lifedrain\"\n        },\n        \"manadrain\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Manadrain\"\n        },\n        \"summons\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Summons\"\n        },\n        \"total\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Total\"\n        }\n      },\n      \"title\": \"CreatureMaxDamage\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents a creature.\",\n  \"properties\": {\n    \"image\": {\n      \"anyOf\": [\n        {\n          \"format\": \"binary\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"article\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Article\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"plural\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Plural\"\n    },\n    \"library_race\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Library Race\"\n    },\n    \"creature_class\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Creature Class\"\n    },\n    \"type_primary\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Type Primary\"\n    },\n    \"type_secondary\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Type Secondary\"\n    },\n    \"bestiary_class\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Bestiary Class\"\n    },\n    \"bestiary_level\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Bestiary Level\"\n    },\n    \"bestiary_occurrence\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Bestiary Occurrence\"\n    },\n    \"bosstiary_class\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Bosstiary Class\"\n    },\n    \"hitpoints\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Hitpoints\"\n    },\n    \"experience\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Experience\"\n    },\n    \"armor\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Armor\"\n    },\n    \"mitigation\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Mitigation\"\n    },\n    \"speed\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Speed\"\n    },\n    \"runs_at\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Runs At\"\n    },\n    \"summon_cost\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Summon Cost\"\n    },\n    \"convince_cost\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Convince Cost\"\n    },\n    \"illusionable\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Illusionable\"\n    },\n    \"pushable\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Pushable\"\n    },\n    \"push_objects\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Push Objects\"\n    },\n    \"sees_invisible\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Sees Invisible\"\n    },\n    \"paralysable\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Paralysable\"\n    },\n    \"spawn_type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Spawn Type\"\n    },\n    \"is_boss\": {\n      \"title\": \"Is Boss\",\n      \"type\": \"boolean\"\n    },\n    \"cooldown\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Cooldown\"\n    },\n    \"modifier_physical\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Modifier Physical\"\n    },\n    \"modifier_earth\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Modifier Earth\"\n    },\n    \"modifier_fire\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Modifier Fire\"\n    },\n    \"modifier_energy\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Modifier Energy\"\n    },\n    \"modifier_ice\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Modifier Ice\"\n    },\n    \"modifier_death\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Modifier Death\"\n    },\n    \"modifier_holy\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Modifier Holy\"\n    },\n    \"modifier_drown\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Modifier Drown\"\n    },\n    \"modifier_lifedrain\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Modifier Lifedrain\"\n    },\n    \"modifier_healing\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Modifier Healing\"\n    },\n    \"abilities\": {\n      \"default\": [],\n      \"items\": {\n        \"$ref\": \"#/$defs/CreatureAbility\"\n      },\n      \"title\": \"Abilities\",\n      \"type\": \"array\"\n    },\n    \"max_damage\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/$defs/CreatureMaxDamage\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null\n    },\n    \"walks_through\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Walks Through\"\n    },\n    \"walks_around\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Walks Around\"\n    },\n    \"sounds\": {\n      \"default\": [],\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"title\": \"Sounds\",\n      \"type\": \"array\"\n    },\n    \"location\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Location\"\n    },\n    \"loot\": {\n      \"default\": [],\n      \"items\": {\n        \"$ref\": \"#/$defs/CreatureDrop\"\n      },\n      \"title\": \"Loot\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"version\",\n    \"status\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"article\",\n    \"name\",\n    \"plural\",\n    \"library_race\",\n    \"creature_class\",\n    \"type_primary\",\n    \"type_secondary\",\n    \"bestiary_class\",\n    \"bestiary_level\",\n    \"bestiary_occurrence\",\n    \"bosstiary_class\",\n    \"hitpoints\",\n    \"experience\",\n    \"armor\",\n    \"mitigation\",\n    \"speed\",\n    \"runs_at\",\n    \"summon_cost\",\n    \"convince_cost\",\n    \"illusionable\",\n    \"pushable\",\n    \"push_objects\",\n    \"sees_invisible\",\n    \"paralysable\",\n    \"spawn_type\",\n    \"is_boss\",\n    \"cooldown\",\n    \"modifier_physical\",\n    \"modifier_earth\",\n    \"modifier_fire\",\n    \"modifier_energy\",\n    \"modifier_ice\",\n    \"modifier_death\",\n    \"modifier_holy\",\n    \"modifier_drown\",\n    \"modifier_lifedrain\",\n    \"modifier_healing\",\n    \"walks_through\",\n    \"walks_around\",\n    \"location\"\n  ],\n  \"title\": \"Creature\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>image</code>                 (<code>bytes | None</code>)             </li> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>article</code>                 (<code>str | None</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>plural</code>                 (<code>str | None</code>)             </li> <li> <code>library_race</code>                 (<code>str | None</code>)             </li> <li> <code>creature_class</code>                 (<code>str | None</code>)             </li> <li> <code>type_primary</code>                 (<code>str | None</code>)             </li> <li> <code>type_secondary</code>                 (<code>str | None</code>)             </li> <li> <code>bestiary_class</code>                 (<code>str | None</code>)             </li> <li> <code>bestiary_level</code>                 (<code>str | None</code>)             </li> <li> <code>bestiary_occurrence</code>                 (<code>str | None</code>)             </li> <li> <code>bosstiary_class</code>                 (<code>str | None</code>)             </li> <li> <code>hitpoints</code>                 (<code>int | None</code>)             </li> <li> <code>experience</code>                 (<code>int | None</code>)             </li> <li> <code>armor</code>                 (<code>int | None</code>)             </li> <li> <code>mitigation</code>                 (<code>int | None</code>)             </li> <li> <code>speed</code>                 (<code>int | None</code>)             </li> <li> <code>runs_at</code>                 (<code>int | None</code>)             </li> <li> <code>summon_cost</code>                 (<code>int | None</code>)             </li> <li> <code>convince_cost</code>                 (<code>int | None</code>)             </li> <li> <code>illusionable</code>                 (<code>bool | None</code>)             </li> <li> <code>pushable</code>                 (<code>bool | None</code>)             </li> <li> <code>push_objects</code>                 (<code>bool | None</code>)             </li> <li> <code>sees_invisible</code>                 (<code>bool | None</code>)             </li> <li> <code>paralysable</code>                 (<code>bool | None</code>)             </li> <li> <code>spawn_type</code>                 (<code>str | None</code>)             </li> <li> <code>is_boss</code>                 (<code>bool</code>)             </li> <li> <code>cooldown</code>                 (<code>float | None</code>)             </li> <li> <code>modifier_physical</code>                 (<code>int | None</code>)             </li> <li> <code>modifier_earth</code>                 (<code>int | None</code>)             </li> <li> <code>modifier_fire</code>                 (<code>int | None</code>)             </li> <li> <code>modifier_energy</code>                 (<code>int | None</code>)             </li> <li> <code>modifier_ice</code>                 (<code>int | None</code>)             </li> <li> <code>modifier_death</code>                 (<code>int | None</code>)             </li> <li> <code>modifier_holy</code>                 (<code>int | None</code>)             </li> <li> <code>modifier_drown</code>                 (<code>int | None</code>)             </li> <li> <code>modifier_lifedrain</code>                 (<code>int | None</code>)             </li> <li> <code>modifier_healing</code>                 (<code>int | None</code>)             </li> <li> <code>abilities</code>                 (<code>list[CreatureAbility]</code>)             </li> <li> <code>max_damage</code>                 (<code>CreatureMaxDamage | None</code>)             </li> <li> <code>walks_through</code>                 (<code>str | None</code>)             </li> <li> <code>walks_around</code>                 (<code>str | None</code>)             </li> <li> <code>sounds</code>                 (<code>list[str]</code>)             </li> <li> <code>location</code>                 (<code>str | None</code>)             </li> <li> <code>loot</code>                 (<code>list[CreatureDrop]</code>)             </li> </ul>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.article","title":"article  <code>pydantic-field</code>","text":"<pre><code>article: str | None\n</code></pre> <p>The article that goes before the name when looking at the creature.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the creature, as displayed in-game.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.plural","title":"plural  <code>pydantic-field</code>","text":"<pre><code>plural: str | None\n</code></pre> <p>The plural of the name.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.library_race","title":"library_race  <code>pydantic-field</code>","text":"<pre><code>library_race: str | None\n</code></pre> <p>The race name of the creature in Tibia.com's library.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.creature_class","title":"creature_class  <code>pydantic-field</code>","text":"<pre><code>creature_class: str | None\n</code></pre> <p>The creature's classification.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.type_primary","title":"type_primary  <code>pydantic-field</code>","text":"<pre><code>type_primary: str | None\n</code></pre> <p>The creature's type.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.type_secondary","title":"type_secondary  <code>pydantic-field</code>","text":"<pre><code>type_secondary: str | None\n</code></pre> <p>The creature's secondary type, if any.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.bestiary_class","title":"bestiary_class  <code>pydantic-field</code>","text":"<pre><code>bestiary_class: str | None\n</code></pre> <p>The creature's bestiary class, if applicable.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.bestiary_level","title":"bestiary_level  <code>pydantic-field</code>","text":"<pre><code>bestiary_level: str | None\n</code></pre> <p>The creature's bestiary level, from 'Trivial' to 'Hard'</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.bestiary_occurrence","title":"bestiary_occurrence  <code>pydantic-field</code>","text":"<pre><code>bestiary_occurrence: str | None\n</code></pre> <p>The creature's bestiary occurrence, from 'Common'  to 'Very Rare'.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.bosstiary_class","title":"bosstiary_class  <code>pydantic-field</code>","text":"<pre><code>bosstiary_class: str | None\n</code></pre> <p>The creature's bosstiary class, if applicable.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.hitpoints","title":"hitpoints  <code>pydantic-field</code>","text":"<pre><code>hitpoints: int | None\n</code></pre> <p>The creature's hitpoints, may be <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.experience","title":"experience  <code>pydantic-field</code>","text":"<pre><code>experience: int | None\n</code></pre> <p>Experience points yielded by the creature. Might be <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.armor","title":"armor  <code>pydantic-field</code>","text":"<pre><code>armor: int | None\n</code></pre> <p>The creature's armor value.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.mitigation","title":"mitigation  <code>pydantic-field</code>","text":"<pre><code>mitigation: int | None\n</code></pre> <p>The creature's mitigation value.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.speed","title":"speed  <code>pydantic-field</code>","text":"<pre><code>speed: int | None\n</code></pre> <p>The creature's speed value.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.runs_at","title":"runs_at  <code>pydantic-field</code>","text":"<pre><code>runs_at: int | None\n</code></pre> <p>The amount of hitpoints when the creature starts to run away. 0 means it won't run away.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.summon_cost","title":"summon_cost  <code>pydantic-field</code>","text":"<pre><code>summon_cost: int | None\n</code></pre> <p>The mana needed to summon this creature. 0 if not summonable.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.convince_cost","title":"convince_cost  <code>pydantic-field</code>","text":"<pre><code>convince_cost: int | None\n</code></pre> <p>The mana needed to convince this creature. 0 if not convincible.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.illusionable","title":"illusionable  <code>pydantic-field</code>","text":"<pre><code>illusionable: bool | None\n</code></pre> <p>Whether the creature can be illusioned into using <code>Creature Illusion</code>.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.pushable","title":"pushable  <code>pydantic-field</code>","text":"<pre><code>pushable: bool | None\n</code></pre> <p>Whether the creature can be pushed or not.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.push_objects","title":"push_objects  <code>pydantic-field</code>","text":"<pre><code>push_objects: bool | None\n</code></pre> <p>Whether the creature can push objects or not.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.sees_invisible","title":"sees_invisible  <code>pydantic-field</code>","text":"<pre><code>sees_invisible: bool | None\n</code></pre> <p>Whether the creature can see invisible players or not.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.paralysable","title":"paralysable  <code>pydantic-field</code>","text":"<pre><code>paralysable: bool | None\n</code></pre> <p>Whether the creature can be paralyzed or not.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.spawn_type","title":"spawn_type  <code>pydantic-field</code>","text":"<pre><code>spawn_type: str | None\n</code></pre> <p>The way this creature spawns.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.is_boss","title":"is_boss  <code>pydantic-field</code>","text":"<pre><code>is_boss: bool\n</code></pre> <p>Whether the creature is a boss or not.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.cooldown","title":"cooldown  <code>pydantic-field</code>","text":"<pre><code>cooldown: float | None\n</code></pre> <p>The cooldown in hours to fight the boss again.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.modifier_physical","title":"modifier_physical  <code>pydantic-field</code>","text":"<pre><code>modifier_physical: int | None\n</code></pre> <p>The percentage of damage received of physical damage. <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.modifier_earth","title":"modifier_earth  <code>pydantic-field</code>","text":"<pre><code>modifier_earth: int | None\n</code></pre> <p>The percentage of damage received of earth damage. <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.modifier_fire","title":"modifier_fire  <code>pydantic-field</code>","text":"<pre><code>modifier_fire: int | None\n</code></pre> <p>The percentage of damage received of fire damage. <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.modifier_energy","title":"modifier_energy  <code>pydantic-field</code>","text":"<pre><code>modifier_energy: int | None\n</code></pre> <p>The percentage of damage received of energy damage. <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.modifier_ice","title":"modifier_ice  <code>pydantic-field</code>","text":"<pre><code>modifier_ice: int | None\n</code></pre> <p>The percentage of damage received of ice damage. <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.modifier_death","title":"modifier_death  <code>pydantic-field</code>","text":"<pre><code>modifier_death: int | None\n</code></pre> <p>The percentage of damage received of death damage. <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.modifier_holy","title":"modifier_holy  <code>pydantic-field</code>","text":"<pre><code>modifier_holy: int | None\n</code></pre> <p>The percentage of damage received of holy damage. <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.modifier_drown","title":"modifier_drown  <code>pydantic-field</code>","text":"<pre><code>modifier_drown: int | None\n</code></pre> <p>The percentage of damage received of drown damage. <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.modifier_lifedrain","title":"modifier_lifedrain  <code>pydantic-field</code>","text":"<pre><code>modifier_lifedrain: int | None\n</code></pre> <p>The percentage of damage received of life drain damage. <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.modifier_healing","title":"modifier_healing  <code>pydantic-field</code>","text":"<pre><code>modifier_healing: int | None\n</code></pre> <p>The healing modifier. <code>None</code> if unknown.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.abilities","title":"abilities  <code>pydantic-field</code>","text":"<pre><code>abilities: list[CreatureAbility] = []\n</code></pre> <p>A list of the creature abilities.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.max_damage","title":"max_damage  <code>pydantic-field</code>","text":"<pre><code>max_damage: CreatureMaxDamage | None = None\n</code></pre> <p>The maximum damage the creature can make.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.walks_through","title":"walks_through  <code>pydantic-field</code>","text":"<pre><code>walks_through: str | None\n</code></pre> <p>The field types the creature will walk through, separated by commas.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.walks_around","title":"walks_around  <code>pydantic-field</code>","text":"<pre><code>walks_around: str | None\n</code></pre> <p>The field types the creature will walk around, separated by commas.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.sounds","title":"sounds  <code>pydantic-field</code>","text":"<pre><code>sounds: list[str] = []\n</code></pre> <p>The \"sounds\" made by the creature.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.location","title":"location  <code>pydantic-field</code>","text":"<pre><code>location: str | None\n</code></pre> <p>The locations where the creature can be found.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.loot","title":"loot  <code>pydantic-field</code>","text":"<pre><code>loot: list[CreatureDrop] = []\n</code></pre> <p>The items dropped by this creature.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.bestiary_kills","title":"bestiary_kills  <code>property</code>","text":"<pre><code>bestiary_kills: int | None\n</code></pre> <p>Get the total kills needed to complete the bestiary entry if applicable.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.charm_points","title":"charm_points  <code>property</code>","text":"<pre><code>charm_points: int | None\n</code></pre> <p>Get the charm points awarded for completing the creature's bestiary entry, if applicable.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.elemental_modifiers","title":"elemental_modifiers  <code>property</code>","text":"<pre><code>elemental_modifiers: dict[str, int]\n</code></pre> <p>Get a dictionary containing all elemental modifiers, sorted in descending order.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.immune_to","title":"immune_to  <code>property</code>","text":"<pre><code>immune_to: list[str]\n</code></pre> <p>Get a list of the elements the creature is immune to.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.weak_to","title":"weak_to  <code>property</code>","text":"<pre><code>weak_to: dict[str, int]\n</code></pre> <p>Get a dictionary containing the elements the creature is weak to and modifier.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.resistant_to","title":"resistant_to  <code>property</code>","text":"<pre><code>resistant_to: dict[str, int]\n</code></pre> <p>Get a dictionary containing the elements the creature is resistant to and modifier.</p>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor) -&gt; None\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/creature.py</code> <pre><code>def insert(self, conn: Connection | Cursor) -&gt; None:\n    super().insert(conn)\n\n    for drop in self.loot:\n        drop.insert(conn, creature_id=self.article_id)\n    for sound in self.sounds:\n        CreatureSoundTable.insert(conn, creature_id=self.article_id, content=sound)\n    for ability in self.abilities:\n        CreatureAbilityTable.insert(conn, creature_id=self.article_id, **ability.model_dump())\n    if self.max_damage:\n        CreatureMaxDamageTable.insert(conn, creature_id=self.article_id, **self.max_damage.model_dump())\n</code></pre>"},{"location":"api/models/creature/#tibiawikisql.models.creature.Creature.get_one_by_field","title":"get_one_by_field  <code>classmethod</code>","text":"<pre><code>get_one_by_field(\n    conn: Connection | Cursor,\n    field: str,\n    value: Any,\n    use_like: bool = False,\n) -&gt; Self | None\n</code></pre> <p>Get a single element matching the field's value.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection or cursor of the database.</p> required <code>field</code> <code>str</code> <p>The field to filter with.</p> required <code>value</code> <code>Any</code> <p>The value to look for.</p> required <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as a comparator instead of <code>=</code>.</p> <code>False</code> <p>Returns:</p> Type Description <code>Self | None</code> <p>The object found, or <code>None</code> if no entries match.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>The specified field doesn't exist in the table.</p> Source code in <code>tibiawikisql/models/creature.py</code> <pre><code>@classmethod\ndef get_one_by_field(cls, conn: Connection | Cursor, field: str, value: Any, use_like: bool = False) -&gt; Self | None:\n    creature: Self = super().get_one_by_field(conn, field, value, use_like)\n    if creature is None:\n        return None\n    max_damage = CreatureMaxDamageTable.get_one_by_field(conn, \"creature_id\", creature.article_id)\n    if max_damage:\n        creature.max_damage = CreatureMaxDamage(**dict(max_damage))\n\n    sounds = CreatureSoundTable.get_list_by_field(conn, \"creature_id\", creature.article_id)\n    creature.sounds = [r[\"content\"] for r in sounds]\n\n    abilities = CreatureAbilityTable.get_list_by_field(conn, \"creature_id\", creature.article_id)\n    creature.abilities = [CreatureAbility(**dict(r)) for r in abilities]\n\n    drops = CreatureDropTable.get_by_creature_id(conn, creature.article_id)\n    creature.loot = [CreatureDrop(**dict(r)) for r in drops]\n    return creature\n</code></pre>"},{"location":"api/models/house/","title":"House","text":""},{"location":"api/models/house/#tibiawikisql.models.house","title":"tibiawikisql.models.house","text":"<p>Classes:</p> Name Description <code>House</code> <p>Represents a house or guildhall.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House","title":"House  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithVersion</code>, <code>WithStatus</code>, <code>RowModel</code></p> <p>Represents a house or guildhall.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a house or guildhall.\",\n  \"properties\": {\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"house_id\": {\n      \"title\": \"House Id\",\n      \"type\": \"integer\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"is_guildhall\": {\n      \"title\": \"Is Guildhall\",\n      \"type\": \"boolean\"\n    },\n    \"city\": {\n      \"title\": \"City\",\n      \"type\": \"string\"\n    },\n    \"street\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Street\"\n    },\n    \"location\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Location\"\n    },\n    \"beds\": {\n      \"title\": \"Beds\",\n      \"type\": \"integer\"\n    },\n    \"rent\": {\n      \"title\": \"Rent\",\n      \"type\": \"integer\"\n    },\n    \"size\": {\n      \"title\": \"Size\",\n      \"type\": \"integer\"\n    },\n    \"rooms\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Rooms\"\n    },\n    \"floors\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Floors\"\n    },\n    \"x\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"X\"\n    },\n    \"y\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Y\"\n    },\n    \"z\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Z\"\n    }\n  },\n  \"required\": [\n    \"status\",\n    \"version\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"house_id\",\n    \"name\",\n    \"is_guildhall\",\n    \"city\",\n    \"street\",\n    \"location\",\n    \"beds\",\n    \"rent\",\n    \"size\",\n    \"rooms\",\n    \"floors\",\n    \"x\",\n    \"y\",\n    \"z\"\n  ],\n  \"title\": \"House\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>house_id</code>                 (<code>int</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>is_guildhall</code>                 (<code>bool</code>)             </li> <li> <code>city</code>                 (<code>str</code>)             </li> <li> <code>street</code>                 (<code>str | None</code>)             </li> <li> <code>location</code>                 (<code>str | None</code>)             </li> <li> <code>beds</code>                 (<code>int</code>)             </li> <li> <code>rent</code>                 (<code>int</code>)             </li> <li> <code>size</code>                 (<code>int</code>)             </li> <li> <code>rooms</code>                 (<code>int | None</code>)             </li> <li> <code>floors</code>                 (<code>int | None</code>)             </li> <li> <code>x</code>                 (<code>int | None</code>)             </li> <li> <code>y</code>                 (<code>int | None</code>)             </li> <li> <code>z</code>                 (<code>int | None</code>)             </li> </ul>"},{"location":"api/models/house/#tibiawikisql.models.house.House.house_id","title":"house_id  <code>pydantic-field</code>","text":"<pre><code>house_id: int\n</code></pre> <p>The house's id on tibia.com.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the house.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.is_guildhall","title":"is_guildhall  <code>pydantic-field</code>","text":"<pre><code>is_guildhall: bool\n</code></pre> <p>Whether the house is a guildhall or not.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.city","title":"city  <code>pydantic-field</code>","text":"<pre><code>city: str\n</code></pre> <p>The city where the house is located.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.street","title":"street  <code>pydantic-field</code>","text":"<pre><code>street: str | None\n</code></pre> <p>The name of the street where the house is located.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.location","title":"location  <code>pydantic-field</code>","text":"<pre><code>location: str | None\n</code></pre> <p>A brief description of where the house is.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.beds","title":"beds  <code>pydantic-field</code>","text":"<pre><code>beds: int\n</code></pre> <p>The maximum number of beds the house can have.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.rent","title":"rent  <code>pydantic-field</code>","text":"<pre><code>rent: int\n</code></pre> <p>The monthly rent of the house.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.size","title":"size  <code>pydantic-field</code>","text":"<pre><code>size: int\n</code></pre> <p>The number of tiles (SQM) of the house.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.rooms","title":"rooms  <code>pydantic-field</code>","text":"<pre><code>rooms: int | None\n</code></pre> <p>The number of rooms the house has.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.floors","title":"floors  <code>pydantic-field</code>","text":"<pre><code>floors: int | None\n</code></pre> <p>The number of floors the house has.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.x","title":"x  <code>pydantic-field</code>","text":"<pre><code>x: int | None\n</code></pre> <p>The x coordinate of the house.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.y","title":"y  <code>pydantic-field</code>","text":"<pre><code>y: int | None\n</code></pre> <p>The y coordinate of the house.</p>"},{"location":"api/models/house/#tibiawikisql.models.house.House.z","title":"z  <code>pydantic-field</code>","text":"<pre><code>z: int | None\n</code></pre> <p>The z coordinate of the house.</p>"},{"location":"api/models/imbuement/","title":"Imbuement","text":""},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement","title":"tibiawikisql.models.imbuement","text":"<p>Classes:</p> Name Description <code>Material</code> <p>A material needed to use this imbuement.</p> <code>ImbuementMaterial</code> <p>Represents an item material for an imbuement.</p> <code>Imbuement</code> <p>Represents an imbuement type.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Material","title":"Material  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>A material needed to use this imbuement.</p> Show JSON schema: <pre><code>{\n  \"description\": \"A material needed to use this imbuement.\",\n  \"properties\": {\n    \"item_id\": {\n      \"default\": 0,\n      \"title\": \"Item Id\",\n      \"type\": \"integer\"\n    },\n    \"item_title\": {\n      \"title\": \"Item Title\",\n      \"type\": \"string\"\n    },\n    \"amount\": {\n      \"title\": \"Amount\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"item_title\",\n    \"amount\"\n  ],\n  \"title\": \"Material\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>item_id</code>                 (<code>int</code>)             </li> <li> <code>item_title</code>                 (<code>str</code>)             </li> <li> <code>amount</code>                 (<code>int</code>)             </li> </ul>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Material.item_id","title":"item_id  <code>pydantic-field</code>","text":"<pre><code>item_id: int = 0\n</code></pre> <p>The article ID of the item material.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Material.item_title","title":"item_title  <code>pydantic-field</code>","text":"<pre><code>item_title: str\n</code></pre> <p>The title of the item material.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Material.amount","title":"amount  <code>pydantic-field</code>","text":"<pre><code>amount: int\n</code></pre> <p>The amount of items required.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.ImbuementMaterial","title":"ImbuementMaterial  <code>pydantic-model</code>","text":"<p>               Bases: <code>RowModel</code></p> <p>Represents an item material for an imbuement.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents an item material for an imbuement.\",\n  \"properties\": {\n    \"imbuement_id\": {\n      \"title\": \"Imbuement Id\",\n      \"type\": \"integer\"\n    },\n    \"imbuement_title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Imbuement Title\"\n    },\n    \"item_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Item Id\"\n    },\n    \"item_title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Item Title\"\n    },\n    \"amount\": {\n      \"title\": \"Amount\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"imbuement_id\",\n    \"amount\"\n  ],\n  \"title\": \"ImbuementMaterial\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>imbuement_id</code>                 (<code>int</code>)             </li> <li> <code>imbuement_title</code>                 (<code>str | None</code>)             </li> <li> <code>item_id</code>                 (<code>int | None</code>)             </li> <li> <code>item_title</code>                 (<code>str | None</code>)             </li> <li> <code>amount</code>                 (<code>int</code>)             </li> </ul>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.ImbuementMaterial.imbuement_id","title":"imbuement_id  <code>pydantic-field</code>","text":"<pre><code>imbuement_id: int\n</code></pre> <p>The article id of the imbuement this material belongs to.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.ImbuementMaterial.imbuement_title","title":"imbuement_title  <code>pydantic-field</code>","text":"<pre><code>imbuement_title: str | None = None\n</code></pre> <p>The title of the imbuement this material belongs to.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.ImbuementMaterial.item_id","title":"item_id  <code>pydantic-field</code>","text":"<pre><code>item_id: int | None = None\n</code></pre> <p>The article id of the item material.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.ImbuementMaterial.item_title","title":"item_title  <code>pydantic-field</code>","text":"<pre><code>item_title: str | None = None\n</code></pre> <p>The title of the item material.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.ImbuementMaterial.amount","title":"amount  <code>pydantic-field</code>","text":"<pre><code>amount: int\n</code></pre> <p>The amount of items required.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Imbuement","title":"Imbuement  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithStatus</code>, <code>WithVersion</code>, <code>WithImage</code>, <code>RowModel</code></p> <p>Represents an imbuement type.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"Material\": {\n      \"description\": \"A material needed to use this imbuement.\",\n      \"properties\": {\n        \"item_id\": {\n          \"default\": 0,\n          \"title\": \"Item Id\",\n          \"type\": \"integer\"\n        },\n        \"item_title\": {\n          \"title\": \"Item Title\",\n          \"type\": \"string\"\n        },\n        \"amount\": {\n          \"title\": \"Amount\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"item_title\",\n        \"amount\"\n      ],\n      \"title\": \"Material\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents an imbuement type.\",\n  \"properties\": {\n    \"image\": {\n      \"anyOf\": [\n        {\n          \"format\": \"binary\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"tier\": {\n      \"title\": \"Tier\",\n      \"type\": \"string\"\n    },\n    \"type\": {\n      \"title\": \"Type\",\n      \"type\": \"string\"\n    },\n    \"category\": {\n      \"title\": \"Category\",\n      \"type\": \"string\"\n    },\n    \"effect\": {\n      \"title\": \"Effect\",\n      \"type\": \"string\"\n    },\n    \"slots\": {\n      \"title\": \"Slots\",\n      \"type\": \"string\"\n    },\n    \"materials\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/Material\"\n      },\n      \"title\": \"Materials\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"version\",\n    \"status\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"tier\",\n    \"type\",\n    \"category\",\n    \"effect\",\n    \"slots\"\n  ],\n  \"title\": \"Imbuement\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>image</code>                 (<code>bytes | None</code>)             </li> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>tier</code>                 (<code>str</code>)             </li> <li> <code>type</code>                 (<code>str</code>)             </li> <li> <code>category</code>                 (<code>str</code>)             </li> <li> <code>effect</code>                 (<code>str</code>)             </li> <li> <code>slots</code>                 (<code>str</code>)             </li> <li> <code>materials</code>                 (<code>list[Material]</code>)             </li> </ul>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Imbuement.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the imbuement.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Imbuement.tier","title":"tier  <code>pydantic-field</code>","text":"<pre><code>tier: str\n</code></pre> <p>The tier of the imbuement.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Imbuement.type","title":"type  <code>pydantic-field</code>","text":"<pre><code>type: str\n</code></pre> <p>The imbuement's type.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Imbuement.category","title":"category  <code>pydantic-field</code>","text":"<pre><code>category: str\n</code></pre> <p>The imbuement's category.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Imbuement.effect","title":"effect  <code>pydantic-field</code>","text":"<pre><code>effect: str\n</code></pre> <p>The effect given by the imbuement.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Imbuement.slots","title":"slots  <code>pydantic-field</code>","text":"<pre><code>slots: str\n</code></pre> <p>The type of items this imbuement may be applied on.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Imbuement.materials","title":"materials  <code>pydantic-field</code>","text":"<pre><code>materials: list[Material]\n</code></pre> <p>The materials needed for the imbuement.</p>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Imbuement.insert","title":"insert","text":"<pre><code>insert(conn)\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/imbuement.py</code> <pre><code>def insert(self, conn):\n    super().insert(conn)\n    for material in self.materials:\n        material.insert(conn, self.article_id)\n</code></pre>"},{"location":"api/models/imbuement/#tibiawikisql.models.imbuement.Imbuement.get_one_by_field","title":"get_one_by_field  <code>classmethod</code>","text":"<pre><code>get_one_by_field(\n    conn: Connection | Cursor,\n    field: str,\n    value: Any,\n    use_like: bool = False,\n) -&gt; Self | None\n</code></pre> <p>Get a single element matching the field's value.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection or cursor of the database.</p> required <code>field</code> <code>str</code> <p>The field to filter with.</p> required <code>value</code> <code>Any</code> <p>The value to look for.</p> required <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as a comparator instead of <code>=</code>.</p> <code>False</code> <p>Returns:</p> Type Description <code>Self | None</code> <p>The object found, or <code>None</code> if no entries match.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>The specified field doesn't exist in the table.</p> Source code in <code>tibiawikisql/models/imbuement.py</code> <pre><code>@classmethod\ndef get_one_by_field(cls, conn: Connection | Cursor, field: str, value: Any, use_like: bool = False) -&gt; Self | None:\n    imbuement: Self = super().get_one_by_field(conn, field, value, use_like)\n    if imbuement is None:\n        return None\n    imbuement.materials = [Material(**dict(r)) for r in ImbuementMaterialTable.get_by_imbuement_id(conn, imbuement.article_id)]\n    return imbuement\n</code></pre>"},{"location":"api/models/item/","title":"Item","text":""},{"location":"api/models/item/#tibiawikisql.models.item","title":"tibiawikisql.models.item","text":"<p>Classes:</p> Name Description <code>ItemAttribute</code> <p>Represents an Item's attribute.</p> <code>ItemOffer</code> <p>Represents an offer to buy or sell the item.</p> <code>ItemStoreOffer</code> <p>Represents an offer for an item on the Tibia Store.</p> <code>ItemDrop</code> <p>Represents a creature that drops the item.</p> <code>ItemQuestReward</code> <p>A quest where the item is awarded.</p> <code>Item</code> <p>Represents an Item.</p> <code>Book</code> <p>Represents a book or written document in Tibia.</p> <code>Key</code> <p>Represents a key item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemAttribute","title":"ItemAttribute  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents an Item's attribute.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents an Item's attribute.\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"value\": {\n      \"title\": \"Value\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"value\"\n  ],\n  \"title\": \"ItemAttribute\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>value</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemAttribute.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the attribute.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemAttribute.value","title":"value  <code>pydantic-field</code>","text":"<pre><code>value: str\n</code></pre> <p>The value of the attribute.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemOffer","title":"ItemOffer  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents an offer to buy or sell the item.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents an offer to buy or sell the item.\",\n  \"properties\": {\n    \"npc_id\": {\n      \"title\": \"Npc Id\",\n      \"type\": \"integer\"\n    },\n    \"npc_title\": {\n      \"title\": \"Npc Title\",\n      \"type\": \"string\"\n    },\n    \"currency_id\": {\n      \"title\": \"Currency Id\",\n      \"type\": \"integer\"\n    },\n    \"currency_title\": {\n      \"title\": \"Currency Title\",\n      \"type\": \"string\"\n    },\n    \"value\": {\n      \"title\": \"Value\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"npc_id\",\n    \"npc_title\",\n    \"currency_id\",\n    \"currency_title\",\n    \"value\"\n  ],\n  \"title\": \"ItemOffer\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>npc_id</code>                 (<code>int</code>)             </li> <li> <code>npc_title</code>                 (<code>str</code>)             </li> <li> <code>currency_id</code>                 (<code>int</code>)             </li> <li> <code>currency_title</code>                 (<code>str</code>)             </li> <li> <code>value</code>                 (<code>int</code>)             </li> </ul>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemOffer.npc_id","title":"npc_id  <code>pydantic-field</code>","text":"<pre><code>npc_id: int\n</code></pre> <p>The article ID of the npc offering the item</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemOffer.npc_title","title":"npc_title  <code>pydantic-field</code>","text":"<pre><code>npc_title: str\n</code></pre> <p>The title of the npc offering the item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemOffer.currency_id","title":"currency_id  <code>pydantic-field</code>","text":"<pre><code>currency_id: int\n</code></pre> <p>The article ID of the currency used.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemOffer.currency_title","title":"currency_title  <code>pydantic-field</code>","text":"<pre><code>currency_title: str\n</code></pre> <p>The title of the currency used.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemOffer.value","title":"value  <code>pydantic-field</code>","text":"<pre><code>value: int\n</code></pre> <p>The value of the item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemStoreOffer","title":"ItemStoreOffer  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents an offer for an item on the Tibia Store.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents an offer for an item on the Tibia Store.\",\n  \"properties\": {\n    \"price\": {\n      \"title\": \"Price\",\n      \"type\": \"integer\"\n    },\n    \"amount\": {\n      \"title\": \"Amount\",\n      \"type\": \"integer\"\n    },\n    \"currency\": {\n      \"title\": \"Currency\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"price\",\n    \"amount\",\n    \"currency\"\n  ],\n  \"title\": \"ItemStoreOffer\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>price</code>                 (<code>int</code>)             </li> <li> <code>amount</code>                 (<code>int</code>)             </li> <li> <code>currency</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemStoreOffer.price","title":"price  <code>pydantic-field</code>","text":"<pre><code>price: int\n</code></pre> <p>The price of the item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemStoreOffer.amount","title":"amount  <code>pydantic-field</code>","text":"<pre><code>amount: int\n</code></pre> <p>The amount of the item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemStoreOffer.currency","title":"currency  <code>pydantic-field</code>","text":"<pre><code>currency: str\n</code></pre> <p>The currency used. In most of the times it is Tibia Coins.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemDrop","title":"ItemDrop  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a creature that drops the item.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a creature that drops the item.\",\n  \"properties\": {\n    \"creature_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Creature Id\"\n    },\n    \"creature_title\": {\n      \"title\": \"Creature Title\",\n      \"type\": \"string\"\n    },\n    \"min\": {\n      \"title\": \"Min\",\n      \"type\": \"integer\"\n    },\n    \"max\": {\n      \"title\": \"Max\",\n      \"type\": \"integer\"\n    },\n    \"chance\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Chance\"\n    }\n  },\n  \"required\": [\n    \"creature_title\",\n    \"min\",\n    \"max\"\n  ],\n  \"title\": \"ItemDrop\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>creature_id</code>                 (<code>int | None</code>)             </li> <li> <code>creature_title</code>                 (<code>str</code>)             </li> <li> <code>min</code>                 (<code>int</code>)             </li> <li> <code>max</code>                 (<code>int</code>)             </li> <li> <code>chance</code>                 (<code>float | None</code>)             </li> </ul>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemDrop.creature_id","title":"creature_id  <code>pydantic-field</code>","text":"<pre><code>creature_id: int | None = None\n</code></pre> <p>The article id of the creature.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemDrop.creature_title","title":"creature_title  <code>pydantic-field</code>","text":"<pre><code>creature_title: str\n</code></pre> <p>The title of the creature that drops the item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemDrop.min","title":"min  <code>pydantic-field</code>","text":"<pre><code>min: int\n</code></pre> <p>The minimum possible amount of the dropped item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemDrop.max","title":"max  <code>pydantic-field</code>","text":"<pre><code>max: int\n</code></pre> <p>The maximum possible amount of the dropped item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemDrop.chance","title":"chance  <code>pydantic-field</code>","text":"<pre><code>chance: float | None = None\n</code></pre> <p>The chance percentage of getting this item dropped by this creature.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemQuestReward","title":"ItemQuestReward  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>A quest where the item is awarded.</p> Show JSON schema: <pre><code>{\n  \"description\": \"A quest where the item is awarded.\",\n  \"properties\": {\n    \"quest_id\": {\n      \"title\": \"Quest Id\",\n      \"type\": \"integer\"\n    },\n    \"quest_title\": {\n      \"title\": \"Quest Title\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"quest_id\",\n    \"quest_title\"\n  ],\n  \"title\": \"ItemQuestReward\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>quest_id</code>                 (<code>int</code>)             </li> <li> <code>quest_title</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemQuestReward.quest_id","title":"quest_id  <code>pydantic-field</code>","text":"<pre><code>quest_id: int\n</code></pre> <p>The article ID of the quest.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.ItemQuestReward.quest_title","title":"quest_title  <code>pydantic-field</code>","text":"<pre><code>quest_title: str\n</code></pre> <p>The title of the quest.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item","title":"Item  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithVersion</code>, <code>WithStatus</code>, <code>WithImage</code>, <code>RowModel</code></p> <p>Represents an Item.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ItemAttribute\": {\n      \"description\": \"Represents an Item's attribute.\",\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"title\": \"Value\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"value\"\n      ],\n      \"title\": \"ItemAttribute\",\n      \"type\": \"object\"\n    },\n    \"ItemDrop\": {\n      \"description\": \"Represents a creature that drops the item.\",\n      \"properties\": {\n        \"creature_id\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Creature Id\"\n        },\n        \"creature_title\": {\n          \"title\": \"Creature Title\",\n          \"type\": \"string\"\n        },\n        \"min\": {\n          \"title\": \"Min\",\n          \"type\": \"integer\"\n        },\n        \"max\": {\n          \"title\": \"Max\",\n          \"type\": \"integer\"\n        },\n        \"chance\": {\n          \"anyOf\": [\n            {\n              \"type\": \"number\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Chance\"\n        }\n      },\n      \"required\": [\n        \"creature_title\",\n        \"min\",\n        \"max\"\n      ],\n      \"title\": \"ItemDrop\",\n      \"type\": \"object\"\n    },\n    \"ItemOffer\": {\n      \"description\": \"Represents an offer to buy or sell the item.\",\n      \"properties\": {\n        \"npc_id\": {\n          \"title\": \"Npc Id\",\n          \"type\": \"integer\"\n        },\n        \"npc_title\": {\n          \"title\": \"Npc Title\",\n          \"type\": \"string\"\n        },\n        \"currency_id\": {\n          \"title\": \"Currency Id\",\n          \"type\": \"integer\"\n        },\n        \"currency_title\": {\n          \"title\": \"Currency Title\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"title\": \"Value\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"npc_id\",\n        \"npc_title\",\n        \"currency_id\",\n        \"currency_title\",\n        \"value\"\n      ],\n      \"title\": \"ItemOffer\",\n      \"type\": \"object\"\n    },\n    \"ItemQuestReward\": {\n      \"description\": \"A quest where the item is awarded.\",\n      \"properties\": {\n        \"quest_id\": {\n          \"title\": \"Quest Id\",\n          \"type\": \"integer\"\n        },\n        \"quest_title\": {\n          \"title\": \"Quest Title\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"quest_id\",\n        \"quest_title\"\n      ],\n      \"title\": \"ItemQuestReward\",\n      \"type\": \"object\"\n    },\n    \"ItemStoreOffer\": {\n      \"description\": \"Represents an offer for an item on the Tibia Store.\",\n      \"properties\": {\n        \"price\": {\n          \"title\": \"Price\",\n          \"type\": \"integer\"\n        },\n        \"amount\": {\n          \"title\": \"Amount\",\n          \"type\": \"integer\"\n        },\n        \"currency\": {\n          \"title\": \"Currency\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"price\",\n        \"amount\",\n        \"currency\"\n      ],\n      \"title\": \"ItemStoreOffer\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents an Item.\",\n  \"properties\": {\n    \"image\": {\n      \"anyOf\": [\n        {\n          \"format\": \"binary\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"actual_name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Actual Name\"\n    },\n    \"plural\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Plural\"\n    },\n    \"article\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Article\"\n    },\n    \"is_marketable\": {\n      \"title\": \"Is Marketable\",\n      \"type\": \"boolean\"\n    },\n    \"is_stackable\": {\n      \"title\": \"Is Stackable\",\n      \"type\": \"boolean\"\n    },\n    \"is_pickupable\": {\n      \"title\": \"Is Pickupable\",\n      \"type\": \"boolean\"\n    },\n    \"is_immobile\": {\n      \"title\": \"Is Immobile\",\n      \"type\": \"boolean\"\n    },\n    \"value_sell\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Value Sell\"\n    },\n    \"value_buy\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Value Buy\"\n    },\n    \"weight\": {\n      \"anyOf\": [\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Weight\"\n    },\n    \"item_class\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Item Class\"\n    },\n    \"item_type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Item Type\"\n    },\n    \"type_secondary\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Type Secondary\"\n    },\n    \"flavor_text\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Flavor Text\"\n    },\n    \"light_color\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Light Color\"\n    },\n    \"light_radius\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Light Radius\"\n    },\n    \"client_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Client Id\"\n    },\n    \"attributes\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ItemAttribute\"\n      },\n      \"title\": \"Attributes\",\n      \"type\": \"array\"\n    },\n    \"dropped_by\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ItemDrop\"\n      },\n      \"title\": \"Dropped By\",\n      \"type\": \"array\"\n    },\n    \"sold_by\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ItemOffer\"\n      },\n      \"title\": \"Sold By\",\n      \"type\": \"array\"\n    },\n    \"bought_by\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ItemOffer\"\n      },\n      \"title\": \"Bought By\",\n      \"type\": \"array\"\n    },\n    \"awarded_in\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ItemQuestReward\"\n      },\n      \"title\": \"Awarded In\",\n      \"type\": \"array\"\n    },\n    \"sounds\": {\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"title\": \"Sounds\",\n      \"type\": \"array\"\n    },\n    \"store_offers\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ItemStoreOffer\"\n      },\n      \"title\": \"Store Offers\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"status\",\n    \"version\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"actual_name\",\n    \"plural\",\n    \"article\",\n    \"is_marketable\",\n    \"is_stackable\",\n    \"is_pickupable\",\n    \"is_immobile\",\n    \"value_sell\",\n    \"value_buy\",\n    \"weight\",\n    \"item_class\",\n    \"item_type\",\n    \"type_secondary\",\n    \"flavor_text\",\n    \"light_radius\",\n    \"client_id\"\n  ],\n  \"title\": \"Item\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>image</code>                 (<code>bytes | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>actual_name</code>                 (<code>str | None</code>)             </li> <li> <code>plural</code>                 (<code>str | None</code>)             </li> <li> <code>article</code>                 (<code>str | None</code>)             </li> <li> <code>is_marketable</code>                 (<code>bool</code>)             </li> <li> <code>is_stackable</code>                 (<code>bool</code>)             </li> <li> <code>is_pickupable</code>                 (<code>bool</code>)             </li> <li> <code>is_immobile</code>                 (<code>bool</code>)             </li> <li> <code>value_sell</code>                 (<code>int | None</code>)             </li> <li> <code>value_buy</code>                 (<code>int | None</code>)             </li> <li> <code>weight</code>                 (<code>float | None</code>)             </li> <li> <code>item_class</code>                 (<code>str | None</code>)             </li> <li> <code>item_type</code>                 (<code>str | None</code>)             </li> <li> <code>type_secondary</code>                 (<code>str | None</code>)             </li> <li> <code>flavor_text</code>                 (<code>str | None</code>)             </li> <li> <code>light_color</code>                 (<code>int | None</code>)             </li> <li> <code>light_radius</code>                 (<code>int | None</code>)             </li> <li> <code>client_id</code>                 (<code>int | None</code>)             </li> <li> <code>attributes</code>                 (<code>list[ItemAttribute]</code>)             </li> <li> <code>dropped_by</code>                 (<code>list[ItemDrop]</code>)             </li> <li> <code>sold_by</code>                 (<code>list[ItemOffer]</code>)             </li> <li> <code>bought_by</code>                 (<code>list[ItemOffer]</code>)             </li> <li> <code>awarded_in</code>                 (<code>list[ItemQuestReward]</code>)             </li> <li> <code>sounds</code>                 (<code>list[str]</code>)             </li> <li> <code>store_offers</code>                 (<code>list[ItemStoreOffer]</code>)             </li> </ul>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The in-game name of the item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.actual_name","title":"actual_name  <code>pydantic-field</code>","text":"<pre><code>actual_name: str | None\n</code></pre> <p>The name of the item as it appears in game when looked at.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.plural","title":"plural  <code>pydantic-field</code>","text":"<pre><code>plural: str | None\n</code></pre> <p>The plural of the name.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.article","title":"article  <code>pydantic-field</code>","text":"<pre><code>article: str | None\n</code></pre> <p>The article that goes before the name when looking at the item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.is_marketable","title":"is_marketable  <code>pydantic-field</code>","text":"<pre><code>is_marketable: bool\n</code></pre> <p>Whether the item can be traded on the Market or not.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.is_stackable","title":"is_stackable  <code>pydantic-field</code>","text":"<pre><code>is_stackable: bool\n</code></pre> <p>Whether the item can be stacked or not.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.is_pickupable","title":"is_pickupable  <code>pydantic-field</code>","text":"<pre><code>is_pickupable: bool\n</code></pre> <p>Whether the item can be picked up or not.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.is_immobile","title":"is_immobile  <code>pydantic-field</code>","text":"<pre><code>is_immobile: bool\n</code></pre> <p>Whether the item can be moved around the map or not.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.value_sell","title":"value_sell  <code>pydantic-field</code>","text":"<pre><code>value_sell: int | None\n</code></pre> <p>The highest price an NPC will buy this item for.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.value_buy","title":"value_buy  <code>pydantic-field</code>","text":"<pre><code>value_buy: int | None\n</code></pre> <p>The lowest price an NPC will sell this item for.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.weight","title":"weight  <code>pydantic-field</code>","text":"<pre><code>weight: float | None\n</code></pre> <p>The item's weight in ounces.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.item_class","title":"item_class  <code>pydantic-field</code>","text":"<pre><code>item_class: str | None\n</code></pre> <p>The item class the item belongs to.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.item_type","title":"item_type  <code>pydantic-field</code>","text":"<pre><code>item_type: str | None\n</code></pre> <p>The item's type.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.type_secondary","title":"type_secondary  <code>pydantic-field</code>","text":"<pre><code>type_secondary: str | None\n</code></pre> <p>The item's secondary type, if any.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.flavor_text","title":"flavor_text  <code>pydantic-field</code>","text":"<pre><code>flavor_text: str | None\n</code></pre> <p>The extra text that is displayed when some items are looked at.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.light_color","title":"light_color  <code>pydantic-field</code>","text":"<pre><code>light_color: int | None = None\n</code></pre> <p>The color of the light emitted by this item in RGB, if any.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.light_radius","title":"light_radius  <code>pydantic-field</code>","text":"<pre><code>light_radius: int | None\n</code></pre> <p>The radius of the light emitted by this item, if any.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.client_id","title":"client_id  <code>pydantic-field</code>","text":"<pre><code>client_id: int | None\n</code></pre> <p>The internal id of the item in the client.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.attributes","title":"attributes  <code>pydantic-field</code>","text":"<pre><code>attributes: list[ItemAttribute]\n</code></pre> <p>The item's attributes.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.dropped_by","title":"dropped_by  <code>pydantic-field</code>","text":"<pre><code>dropped_by: list[ItemDrop]\n</code></pre> <p>List of creatures that drop this item, with the chances.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.sold_by","title":"sold_by  <code>pydantic-field</code>","text":"<pre><code>sold_by: list[ItemOffer]\n</code></pre> <p>List of NPCs that sell this item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.bought_by","title":"bought_by  <code>pydantic-field</code>","text":"<pre><code>bought_by: list[ItemOffer]\n</code></pre> <p>List of NPCs that buy this item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.awarded_in","title":"awarded_in  <code>pydantic-field</code>","text":"<pre><code>awarded_in: list[ItemQuestReward]\n</code></pre> <p>List of quests that give this item as reward.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.sounds","title":"sounds  <code>pydantic-field</code>","text":"<pre><code>sounds: list[str]\n</code></pre> <p>List of sounds made when using the item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.attributes_dict","title":"attributes_dict  <code>property</code>","text":"<pre><code>attributes_dict: dict[str, str]\n</code></pre> <p>A mapping of the attributes this item has.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.resistances","title":"resistances  <code>property</code>","text":"<pre><code>resistances: dict[str, int]\n</code></pre> <p>A mapping of the elemental resistances of this item.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.look_text","title":"look_text  <code>property</code>","text":"<pre><code>look_text: str\n</code></pre> <p>The item's look text.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor) -&gt; None\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/item.py</code> <pre><code>def insert(self, conn: Connection | Cursor) -&gt; None:\n    super().insert(conn)\n    for attribute in self.attributes:\n        ItemAttributeTable.insert(conn, item_id=self.article_id, **attribute.model_dump())\n    for sound in self.sounds:\n        ItemSoundTable.insert(conn, item_id=self.article_id, content=sound)\n    for offer in self.store_offers:\n        ItemStoreOfferTable.insert(conn, item_id=self.article_id, **offer.model_dump())\n</code></pre>"},{"location":"api/models/item/#tibiawikisql.models.item.Item.get_one_by_field","title":"get_one_by_field  <code>classmethod</code>","text":"<pre><code>get_one_by_field(\n    conn: Connection | Cursor,\n    field: str,\n    value: Any,\n    use_like: bool = False,\n) -&gt; Self | None\n</code></pre> <p>Get a single element matching the field's value.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection or cursor of the database.</p> required <code>field</code> <code>str</code> <p>The field to filter with.</p> required <code>value</code> <code>Any</code> <p>The value to look for.</p> required <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as a comparator instead of <code>=</code>.</p> <code>False</code> <p>Returns:</p> Type Description <code>Self | None</code> <p>The object found, or <code>None</code> if no entries match.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>The specified field doesn't exist in the table.</p> Source code in <code>tibiawikisql/models/item.py</code> <pre><code>@classmethod\ndef get_one_by_field(cls, conn: Connection | Cursor, field: str, value: Any, use_like: bool = False) -&gt; Self | None:\n    item: Self = super().get_one_by_field(conn, field, value, use_like)\n    if not item:\n        return None\n    attributes = ItemAttributeTable.get_list_by_field(conn, \"item_id\", item.article_id)\n    item.attributes = [ItemAttribute(**(dict(row))) for row in attributes]\n\n    dropped_by = CreatureDropTable.get_by_item_id(conn, item.article_id)\n    item.dropped_by = [ItemDrop(**dict(r)) for r in dropped_by]\n\n    store_offers = ItemStoreOfferTable.get_list_by_field(conn, \"item_id\", item.article_id)\n    item.store_offers = [ItemStoreOffer(**dict(r)) for r in store_offers]\n\n    sounds = ItemSoundTable.get_list_by_field(conn, \"item_id\", item.article_id)\n    item.sounds = [r[\"content\"] for r in sounds]\n\n    item.bought_by = [\n        ItemOffer(\n            npc_id=r[\"npc_id\"],\n            npc_title=r[\"npc_title\"],\n            currency_id=r[\"currency_id\"],\n            currency_title=r[\"currency_title\"],\n            value=r[\"value\"],\n        ) for r in NpcBuyingTable.get_by_item_id(conn, item.article_id)\n    ]\n    item.sold_by = [\n        ItemOffer(\n            npc_id=r[\"npc_id\"],\n            npc_title=r[\"npc_title\"],\n            currency_id=r[\"currency_id\"],\n            currency_title=r[\"currency_title\"],\n            value=r[\"value\"],\n        ) for r in NpcSellingTable.get_by_item_id(conn, item.article_id)\n    ]\n\n    awarded_in = QuestRewardTable.get_list_by_item_id(conn, item.article_id)\n    item.awarded_in = [ItemQuestReward(**(dict(row))) for row in awarded_in]\n    return item\n</code></pre>"},{"location":"api/models/item/#tibiawikisql.models.item.Book","title":"Book  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithStatus</code>, <code>WithVersion</code>, <code>RowModel</code></p> <p>Represents a book or written document in Tibia.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a book or written document in Tibia.\",\n  \"properties\": {\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"book_type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Book Type\"\n    },\n    \"item_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Item Id\"\n    },\n    \"location\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Location\"\n    },\n    \"blurb\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Blurb\"\n    },\n    \"author\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Author\"\n    },\n    \"prev_book\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Prev Book\"\n    },\n    \"next_book\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Next Book\"\n    },\n    \"text\": {\n      \"title\": \"Text\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"version\",\n    \"status\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"location\",\n    \"blurb\",\n    \"author\",\n    \"prev_book\",\n    \"next_book\",\n    \"text\"\n  ],\n  \"title\": \"Book\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>book_type</code>                 (<code>str | None</code>)             </li> <li> <code>item_id</code>                 (<code>int | None</code>)             </li> <li> <code>location</code>                 (<code>str | None</code>)             </li> <li> <code>blurb</code>                 (<code>str | None</code>)             </li> <li> <code>author</code>                 (<code>str | None</code>)             </li> <li> <code>prev_book</code>                 (<code>str | None</code>)             </li> <li> <code>next_book</code>                 (<code>str | None</code>)             </li> <li> <code>text</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/item/#tibiawikisql.models.item.Book.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the book.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Book.book_type","title":"book_type  <code>pydantic-field</code>","text":"<pre><code>book_type: str | None = None\n</code></pre> <p>The type of item this book can be found in.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Book.item_id","title":"item_id  <code>pydantic-field</code>","text":"<pre><code>item_id: int | None = None\n</code></pre> <p>The ID of the item this book is written in.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Book.location","title":"location  <code>pydantic-field</code>","text":"<pre><code>location: str | None\n</code></pre> <p>Where the book can be found.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Book.blurb","title":"blurb  <code>pydantic-field</code>","text":"<pre><code>blurb: str | None\n</code></pre> <p>A short introduction text of the book.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Book.author","title":"author  <code>pydantic-field</code>","text":"<pre><code>author: str | None\n</code></pre> <p>The person that wrote the book, if known.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Book.prev_book","title":"prev_book  <code>pydantic-field</code>","text":"<pre><code>prev_book: str | None\n</code></pre> <p>If the book is part of a series, the book that precedes this one.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Book.next_book","title":"next_book  <code>pydantic-field</code>","text":"<pre><code>next_book: str | None\n</code></pre> <p>If the book is part of a series, the book that follows this one.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Book.text","title":"text  <code>pydantic-field</code>","text":"<pre><code>text: str\n</code></pre> <p>The content of the book.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Book.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor) -&gt; None\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/item.py</code> <pre><code>def insert(self, conn: Connection | Cursor) -&gt; None:\n    if self.item_id is not None:\n        super().insert(conn)\n        return\n\n    book_table = Table(self.table.__tablename__)\n    item_table = Table(ItemTable.__tablename__)\n\n    q = (\n        Query.into(book_table)\n        .columns(\n            \"article_id\",\n            \"title\",\n            \"name\",\n            \"book_type\",\n            \"item_id\",\n            \"location\",\n            \"blurb\",\n            \"author\",\n            \"prev_book\",\n            \"next_book\",\n            \"text\",\n            \"version\",\n            \"status\",\n            \"timestamp\",\n        )\n        .insert(\n            Parameter(\":article_id\"),\n            Parameter(\":title\"),\n            Parameter(\":name\"),\n            Parameter(\":book_type\"),\n            (\n                Query.from_(item_table)\n                .select(item_table.article_id)\n                .where(item_table.title == Parameter(\":book_type\"))\n            ),\n            Parameter(\":location\"),\n            Parameter(\":blurb\"),\n            Parameter(\":author\"),\n            Parameter(\":prev_book\"),\n            Parameter(\":next_book\"),\n            Parameter(\":text\"),\n            Parameter(\":version\"),\n            Parameter(\":status\"),\n            Parameter(\":timestamp\"),\n        )\n    )\n\n    query_str = q.get_sql()\n    conn.execute(query_str, self.model_dump(mode=\"json\"))\n</code></pre>"},{"location":"api/models/item/#tibiawikisql.models.item.Key","title":"Key  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithStatus</code>, <code>WithVersion</code>, <code>RowModel</code></p> <p>Represents a key item.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a key item.\",\n  \"properties\": {\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Name\"\n    },\n    \"number\": {\n      \"title\": \"Number\",\n      \"type\": \"integer\"\n    },\n    \"item_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Item Id\"\n    },\n    \"material\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Material\"\n    },\n    \"location\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Location\"\n    },\n    \"notes\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Notes\"\n    },\n    \"origin\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Origin\"\n    }\n  },\n  \"required\": [\n    \"version\",\n    \"status\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"number\",\n    \"location\",\n    \"notes\",\n    \"origin\"\n  ],\n  \"title\": \"Key\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>number</code>                 (<code>int</code>)             </li> <li> <code>item_id</code>                 (<code>int | None</code>)             </li> <li> <code>material</code>                 (<code>str | None</code>)             </li> <li> <code>location</code>                 (<code>str | None</code>)             </li> <li> <code>notes</code>                 (<code>str | None</code>)             </li> <li> <code>origin</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"api/models/item/#tibiawikisql.models.item.Key.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str | None = None\n</code></pre> <p>The name of the creature, as displayed in-game.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Key.number","title":"number  <code>pydantic-field</code>","text":"<pre><code>number: int\n</code></pre> <p>The key's number.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Key.item_id","title":"item_id  <code>pydantic-field</code>","text":"<pre><code>item_id: int | None = None\n</code></pre> <p>The article id of the item this key is based on.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Key.material","title":"material  <code>pydantic-field</code>","text":"<pre><code>material: str | None = None\n</code></pre> <p>The key's material.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Key.location","title":"location  <code>pydantic-field</code>","text":"<pre><code>location: str | None\n</code></pre> <p>The key's location.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Key.notes","title":"notes  <code>pydantic-field</code>","text":"<pre><code>notes: str | None\n</code></pre> <p>Notes about the key.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Key.origin","title":"origin  <code>pydantic-field</code>","text":"<pre><code>origin: str | None\n</code></pre> <p>Notes about the origin of the key.</p>"},{"location":"api/models/item/#tibiawikisql.models.item.Key.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor) -&gt; None\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/item.py</code> <pre><code>def insert(self, conn: Connection | Cursor) -&gt; None:\n    if self.item_id is not None:\n        super().insert(conn)\n        return\n\n    key_table = Table(self.table.__tablename__)\n    item_table = Table(ItemTable.__tablename__)\n\n    q = (\n        Query.into(key_table)\n        .columns(\n            \"article_id\",\n            \"title\",\n            \"name\",\n            \"number\",\n            \"item_id\",\n            \"material\",\n            \"location\",\n            \"notes\",\n            \"origin\",\n            \"version\",\n            \"status\",\n            \"timestamp\",\n        )\n        .insert(\n            Parameter(\":article_id\"),\n            Parameter(\":title\"),\n            Parameter(\":name\"),\n            Parameter(\":number\"),\n            (\n                Query.from_(item_table)\n                .select(item_table.article_id)\n                .where(item_table.title == Parameter(\":material\"))\n            ),\n            Parameter(\":material\"),\n            Parameter(\":location\"),\n            Parameter(\":notes\"),\n            Parameter(\":origin\"),\n            Parameter(\":version\"),\n            Parameter(\":status\"),\n            Parameter(\":timestamp\"),\n        )\n    )\n\n    query_str = q.get_sql()\n    conn.execute(query_str, self.model_dump(mode=\"json\"))\n</code></pre>"},{"location":"api/models/mount/","title":"Mount","text":""},{"location":"api/models/mount/#tibiawikisql.models.mount","title":"tibiawikisql.models.mount","text":"<p>Classes:</p> Name Description <code>Mount</code> <p>Represents a Mount.</p>"},{"location":"api/models/mount/#tibiawikisql.models.mount.Mount","title":"Mount  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithStatus</code>, <code>WithVersion</code>, <code>WithImage</code>, <code>RowModel</code></p> <p>Represents a Mount.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a Mount.\",\n  \"properties\": {\n    \"image\": {\n      \"anyOf\": [\n        {\n          \"format\": \"binary\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"speed\": {\n      \"title\": \"Speed\",\n      \"type\": \"integer\"\n    },\n    \"taming_method\": {\n      \"title\": \"Taming Method\",\n      \"type\": \"string\"\n    },\n    \"is_buyable\": {\n      \"title\": \"Is Buyable\",\n      \"type\": \"boolean\"\n    },\n    \"price\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Price\"\n    },\n    \"achievement\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Achievement\"\n    },\n    \"light_color\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Light Color\"\n    },\n    \"light_radius\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Light Radius\"\n    }\n  },\n  \"required\": [\n    \"version\",\n    \"status\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"speed\",\n    \"taming_method\",\n    \"is_buyable\",\n    \"price\",\n    \"achievement\",\n    \"light_color\",\n    \"light_radius\"\n  ],\n  \"title\": \"Mount\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>image</code>                 (<code>bytes | None</code>)             </li> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>speed</code>                 (<code>int</code>)             </li> <li> <code>taming_method</code>                 (<code>str</code>)             </li> <li> <code>is_buyable</code>                 (<code>bool</code>)             </li> <li> <code>price</code>                 (<code>int | None</code>)             </li> <li> <code>achievement</code>                 (<code>str | None</code>)             </li> <li> <code>light_color</code>                 (<code>int | None</code>)             </li> <li> <code>light_radius</code>                 (<code>int | None</code>)             </li> </ul>"},{"location":"api/models/mount/#tibiawikisql.models.mount.Mount.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the mount.</p>"},{"location":"api/models/mount/#tibiawikisql.models.mount.Mount.speed","title":"speed  <code>pydantic-field</code>","text":"<pre><code>speed: int\n</code></pre> <p>The speed given by the mount.</p>"},{"location":"api/models/mount/#tibiawikisql.models.mount.Mount.taming_method","title":"taming_method  <code>pydantic-field</code>","text":"<pre><code>taming_method: str\n</code></pre> <p>A brief description on how the mount is obtained.</p>"},{"location":"api/models/mount/#tibiawikisql.models.mount.Mount.is_buyable","title":"is_buyable  <code>pydantic-field</code>","text":"<pre><code>is_buyable: bool\n</code></pre> <p>Whether the mount can be bought from the store or not.</p>"},{"location":"api/models/mount/#tibiawikisql.models.mount.Mount.price","title":"price  <code>pydantic-field</code>","text":"<pre><code>price: int | None\n</code></pre> <p>The price in Tibia coins to buy the mount.</p>"},{"location":"api/models/mount/#tibiawikisql.models.mount.Mount.achievement","title":"achievement  <code>pydantic-field</code>","text":"<pre><code>achievement: str | None\n</code></pre> <p>The achievement obtained for obtaining this mount.</p>"},{"location":"api/models/mount/#tibiawikisql.models.mount.Mount.light_color","title":"light_color  <code>pydantic-field</code>","text":"<pre><code>light_color: int | None\n</code></pre> <p>The color of the light emitted by this mount in RGB, if any.</p>"},{"location":"api/models/mount/#tibiawikisql.models.mount.Mount.light_radius","title":"light_radius  <code>pydantic-field</code>","text":"<pre><code>light_radius: int | None\n</code></pre> <p>The radius of the light emitted by this mount, if any.</p>"},{"location":"api/models/npc/","title":"Npc","text":""},{"location":"api/models/npc/#tibiawikisql.models.npc","title":"tibiawikisql.models.npc","text":"<p>Classes:</p> Name Description <code>NpcOffer</code> <p>Represents an NPC buy or sell offer.</p> <code>TaughtSpell</code> <p>A spell taught by an NPC.</p> <code>NpcSpell</code> <p>Represents a spell that a NPC can teach.</p> <code>NpcDestination</code> <p>Represents a NPC's travel destination.</p> <code>RashidPosition</code> <p>Represents a Rashid position.</p> <code>Npc</code> <p>Represents a non-playable character.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcOffer","title":"NpcOffer  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents an NPC buy or sell offer.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents an NPC buy or sell offer.\",\n  \"properties\": {\n    \"item_id\": {\n      \"title\": \"Item Id\",\n      \"type\": \"integer\"\n    },\n    \"item_title\": {\n      \"title\": \"Item Title\",\n      \"type\": \"string\"\n    },\n    \"currency_id\": {\n      \"title\": \"Currency Id\",\n      \"type\": \"integer\"\n    },\n    \"currency_title\": {\n      \"title\": \"Currency Title\",\n      \"type\": \"string\"\n    },\n    \"value\": {\n      \"title\": \"Value\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"item_id\",\n    \"item_title\",\n    \"currency_id\",\n    \"currency_title\",\n    \"value\"\n  ],\n  \"title\": \"NpcOffer\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>item_id</code>                 (<code>int</code>)             </li> <li> <code>item_title</code>                 (<code>str</code>)             </li> <li> <code>currency_id</code>                 (<code>int</code>)             </li> <li> <code>currency_title</code>                 (<code>str</code>)             </li> <li> <code>value</code>                 (<code>int</code>)             </li> </ul>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcOffer.item_id","title":"item_id  <code>pydantic-field</code>","text":"<pre><code>item_id: int\n</code></pre> <p>The article ID of the item being offered.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcOffer.item_title","title":"item_title  <code>pydantic-field</code>","text":"<pre><code>item_title: str\n</code></pre> <p>The title of the item being offered.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcOffer.currency_id","title":"currency_id  <code>pydantic-field</code>","text":"<pre><code>currency_id: int\n</code></pre> <p>The article ID of the currency used.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcOffer.currency_title","title":"currency_title  <code>pydantic-field</code>","text":"<pre><code>currency_title: str\n</code></pre> <p>The title of the currency used.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcOffer.value","title":"value  <code>pydantic-field</code>","text":"<pre><code>value: int\n</code></pre> <p>The value of the item being offered.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.TaughtSpell","title":"TaughtSpell  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>A spell taught by an NPC.</p> Show JSON schema: <pre><code>{\n  \"description\": \"A spell taught by an NPC.\",\n  \"properties\": {\n    \"spell_title\": {\n      \"title\": \"Spell Title\",\n      \"type\": \"string\"\n    },\n    \"spell_id\": {\n      \"title\": \"Spell Id\",\n      \"type\": \"integer\"\n    },\n    \"knight\": {\n      \"title\": \"Knight\",\n      \"type\": \"boolean\"\n    },\n    \"paladin\": {\n      \"title\": \"Paladin\",\n      \"type\": \"boolean\"\n    },\n    \"druid\": {\n      \"title\": \"Druid\",\n      \"type\": \"boolean\"\n    },\n    \"sorcerer\": {\n      \"title\": \"Sorcerer\",\n      \"type\": \"boolean\"\n    },\n    \"monk\": {\n      \"title\": \"Monk\",\n      \"type\": \"boolean\"\n    },\n    \"price\": {\n      \"title\": \"Price\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"spell_title\",\n    \"spell_id\",\n    \"knight\",\n    \"paladin\",\n    \"druid\",\n    \"sorcerer\",\n    \"monk\",\n    \"price\"\n  ],\n  \"title\": \"TaughtSpell\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>spell_title</code>                 (<code>str</code>)             </li> <li> <code>spell_id</code>                 (<code>int</code>)             </li> <li> <code>knight</code>                 (<code>bool</code>)             </li> <li> <code>paladin</code>                 (<code>bool</code>)             </li> <li> <code>druid</code>                 (<code>bool</code>)             </li> <li> <code>sorcerer</code>                 (<code>bool</code>)             </li> <li> <code>monk</code>                 (<code>bool</code>)             </li> <li> <code>price</code>                 (<code>int</code>)             </li> </ul>"},{"location":"api/models/npc/#tibiawikisql.models.npc.TaughtSpell.spell_title","title":"spell_title  <code>pydantic-field</code>","text":"<pre><code>spell_title: str\n</code></pre> <p>The title of the article containing the spell's details.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.TaughtSpell.spell_id","title":"spell_id  <code>pydantic-field</code>","text":"<pre><code>spell_id: int\n</code></pre> <p>The article ID of the spell.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.TaughtSpell.knight","title":"knight  <code>pydantic-field</code>","text":"<pre><code>knight: bool\n</code></pre> <p>If the spell is taught to knights.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.TaughtSpell.paladin","title":"paladin  <code>pydantic-field</code>","text":"<pre><code>paladin: bool\n</code></pre> <p>If the spell is taught to paladins.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.TaughtSpell.druid","title":"druid  <code>pydantic-field</code>","text":"<pre><code>druid: bool\n</code></pre> <p>If the spell is taught to druids.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.TaughtSpell.sorcerer","title":"sorcerer  <code>pydantic-field</code>","text":"<pre><code>sorcerer: bool\n</code></pre> <p>If the spell is taught to sorcerers.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.TaughtSpell.monk","title":"monk  <code>pydantic-field</code>","text":"<pre><code>monk: bool\n</code></pre> <p>If the spell is taught to monks.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcSpell","title":"NpcSpell  <code>pydantic-model</code>","text":"<p>               Bases: <code>RowModel</code></p> <p>Represents a spell that a NPC can teach.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a spell that a NPC can teach.\",\n  \"properties\": {\n    \"npc_id\": {\n      \"title\": \"Npc Id\",\n      \"type\": \"integer\"\n    },\n    \"spell_id\": {\n      \"title\": \"Spell Id\",\n      \"type\": \"integer\"\n    },\n    \"knight\": {\n      \"title\": \"Knight\",\n      \"type\": \"boolean\"\n    },\n    \"paladin\": {\n      \"title\": \"Paladin\",\n      \"type\": \"boolean\"\n    },\n    \"druid\": {\n      \"title\": \"Druid\",\n      \"type\": \"boolean\"\n    },\n    \"sorcerer\": {\n      \"title\": \"Sorcerer\",\n      \"type\": \"boolean\"\n    },\n    \"monk\": {\n      \"title\": \"Monk\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"npc_id\",\n    \"spell_id\",\n    \"knight\",\n    \"paladin\",\n    \"druid\",\n    \"sorcerer\",\n    \"monk\"\n  ],\n  \"title\": \"NpcSpell\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>npc_id</code>                 (<code>int</code>)             </li> <li> <code>spell_id</code>                 (<code>int</code>)             </li> <li> <code>knight</code>                 (<code>bool</code>)             </li> <li> <code>paladin</code>                 (<code>bool</code>)             </li> <li> <code>druid</code>                 (<code>bool</code>)             </li> <li> <code>sorcerer</code>                 (<code>bool</code>)             </li> <li> <code>monk</code>                 (<code>bool</code>)             </li> </ul>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcSpell.npc_id","title":"npc_id  <code>pydantic-field</code>","text":"<pre><code>npc_id: int\n</code></pre> <p>The article id of the npc that teaches the spell.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcSpell.spell_id","title":"spell_id  <code>pydantic-field</code>","text":"<pre><code>spell_id: int\n</code></pre> <p>The article id of the spell taught by the npc.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcSpell.knight","title":"knight  <code>pydantic-field</code>","text":"<pre><code>knight: bool\n</code></pre> <p>If the spell is taught to knights.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcSpell.paladin","title":"paladin  <code>pydantic-field</code>","text":"<pre><code>paladin: bool\n</code></pre> <p>If the spell is taught to paladins.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcSpell.druid","title":"druid  <code>pydantic-field</code>","text":"<pre><code>druid: bool\n</code></pre> <p>If the spell is taught to druids.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcSpell.sorcerer","title":"sorcerer  <code>pydantic-field</code>","text":"<pre><code>sorcerer: bool\n</code></pre> <p>If the spell is taught to sorcerers.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcSpell.monk","title":"monk  <code>pydantic-field</code>","text":"<pre><code>monk: bool\n</code></pre> <p>If the spell is taught to monks.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcSpell.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor) -&gt; None\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/npc.py</code> <pre><code>def insert(self, conn: sqlite3.Connection | sqlite3.Cursor) -&gt; None:\n    if self.spell_id is not None:\n        super().insert(conn)\n\n    spell_table = Table(NpcSpellTable.__tablename__)\n    npc_spell_table = Table(self.table.__tablename__)\n    q = (\n        Query.into(npc_spell_table)\n        .columns(\n            \"npc_id\",\n            \"spell_id\",\n            \"knight\",\n            \"paladin\",\n            \"druid\",\n            \"sorcerer\",\n            \"monk\",\n        )\n        .insert(\n            Parameter(\":npc_id\"),\n            (\n                Query.from_(spell_table)\n                .select(spell_table.article_id)\n                .where(spell_table.title == Parameter(\":spell_title\"))\n            ),\n            Parameter(\":knight\"),\n            Parameter(\":paladin\"),\n            Parameter(\":druid\"),\n            Parameter(\":sorcerer\"),\n            Parameter(\":monk\"),\n        )\n    )\n    query_str = q.get_sql()\n    with contextlib.suppress(sqlite3.IntegrityError):\n        conn.execute(query_str, self.model_dump(mode=\"json\"))\n</code></pre>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcDestination","title":"NpcDestination  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a NPC's travel destination.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a NPC's travel destination.\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"price\": {\n      \"title\": \"Price\",\n      \"type\": \"integer\"\n    },\n    \"notes\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Notes\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"price\",\n    \"notes\"\n  ],\n  \"title\": \"NpcDestination\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>price</code>                 (<code>int</code>)             </li> <li> <code>notes</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcDestination.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the destination</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcDestination.price","title":"price  <code>pydantic-field</code>","text":"<pre><code>price: int\n</code></pre> <p>The price in gold to travel.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.NpcDestination.notes","title":"notes  <code>pydantic-field</code>","text":"<pre><code>notes: str | None\n</code></pre> <p>Notes about the destination, such as requirements.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.RashidPosition","title":"RashidPosition  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a Rashid position.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a Rashid position.\",\n  \"properties\": {\n    \"day\": {\n      \"title\": \"Day\",\n      \"type\": \"integer\"\n    },\n    \"x\": {\n      \"title\": \"X\",\n      \"type\": \"integer\"\n    },\n    \"y\": {\n      \"title\": \"Y\",\n      \"type\": \"integer\"\n    },\n    \"z\": {\n      \"title\": \"Z\",\n      \"type\": \"integer\"\n    },\n    \"city\": {\n      \"title\": \"City\",\n      \"type\": \"string\"\n    },\n    \"location\": {\n      \"title\": \"Location\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"day\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"city\",\n    \"location\"\n  ],\n  \"title\": \"RashidPosition\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>day</code>                 (<code>int</code>)             </li> <li> <code>x</code>                 (<code>int</code>)             </li> <li> <code>y</code>                 (<code>int</code>)             </li> <li> <code>z</code>                 (<code>int</code>)             </li> <li> <code>city</code>                 (<code>str</code>)             </li> <li> <code>location</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/npc/#tibiawikisql.models.npc.RashidPosition.day","title":"day  <code>pydantic-field</code>","text":"<pre><code>day: int\n</code></pre> <p>Day of the week, Monday starts at 0.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.RashidPosition.x","title":"x  <code>pydantic-field</code>","text":"<pre><code>x: int\n</code></pre> <p>The x coordinate of Rashid that day.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.RashidPosition.y","title":"y  <code>pydantic-field</code>","text":"<pre><code>y: int\n</code></pre> <p>The y coordinate of Rashid that day.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.RashidPosition.z","title":"z  <code>pydantic-field</code>","text":"<pre><code>z: int\n</code></pre> <p>The z coordinate of Rashid that day.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.RashidPosition.city","title":"city  <code>pydantic-field</code>","text":"<pre><code>city: str\n</code></pre> <p>The city where Rashid is that day.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.RashidPosition.location","title":"location  <code>pydantic-field</code>","text":"<pre><code>location: str\n</code></pre> <p>The location where Rashid is that day.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc","title":"Npc  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithVersion</code>, <code>WithStatus</code>, <code>WithImage</code>, <code>RowModel</code></p> <p>Represents a non-playable character.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"NpcDestination\": {\n      \"description\": \"Represents a NPC's travel destination.\",\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"price\": {\n          \"title\": \"Price\",\n          \"type\": \"integer\"\n        },\n        \"notes\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Notes\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"price\",\n        \"notes\"\n      ],\n      \"title\": \"NpcDestination\",\n      \"type\": \"object\"\n    },\n    \"NpcOffer\": {\n      \"description\": \"Represents an NPC buy or sell offer.\",\n      \"properties\": {\n        \"item_id\": {\n          \"title\": \"Item Id\",\n          \"type\": \"integer\"\n        },\n        \"item_title\": {\n          \"title\": \"Item Title\",\n          \"type\": \"string\"\n        },\n        \"currency_id\": {\n          \"title\": \"Currency Id\",\n          \"type\": \"integer\"\n        },\n        \"currency_title\": {\n          \"title\": \"Currency Title\",\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"title\": \"Value\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"item_id\",\n        \"item_title\",\n        \"currency_id\",\n        \"currency_title\",\n        \"value\"\n      ],\n      \"title\": \"NpcOffer\",\n      \"type\": \"object\"\n    },\n    \"TaughtSpell\": {\n      \"description\": \"A spell taught by an NPC.\",\n      \"properties\": {\n        \"spell_title\": {\n          \"title\": \"Spell Title\",\n          \"type\": \"string\"\n        },\n        \"spell_id\": {\n          \"title\": \"Spell Id\",\n          \"type\": \"integer\"\n        },\n        \"knight\": {\n          \"title\": \"Knight\",\n          \"type\": \"boolean\"\n        },\n        \"paladin\": {\n          \"title\": \"Paladin\",\n          \"type\": \"boolean\"\n        },\n        \"druid\": {\n          \"title\": \"Druid\",\n          \"type\": \"boolean\"\n        },\n        \"sorcerer\": {\n          \"title\": \"Sorcerer\",\n          \"type\": \"boolean\"\n        },\n        \"monk\": {\n          \"title\": \"Monk\",\n          \"type\": \"boolean\"\n        },\n        \"price\": {\n          \"title\": \"Price\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"spell_title\",\n        \"spell_id\",\n        \"knight\",\n        \"paladin\",\n        \"druid\",\n        \"sorcerer\",\n        \"monk\",\n        \"price\"\n      ],\n      \"title\": \"TaughtSpell\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents a non-playable character.\",\n  \"properties\": {\n    \"image\": {\n      \"anyOf\": [\n        {\n          \"format\": \"binary\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"gender\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Gender\"\n    },\n    \"races\": {\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"title\": \"Races\",\n      \"type\": \"array\"\n    },\n    \"jobs\": {\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"title\": \"Jobs\",\n      \"type\": \"array\"\n    },\n    \"location\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Location\"\n    },\n    \"subarea\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Subarea\"\n    },\n    \"city\": {\n      \"title\": \"City\",\n      \"type\": \"string\"\n    },\n    \"x\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"X\"\n    },\n    \"y\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Y\"\n    },\n    \"z\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Z\"\n    },\n    \"sell_offers\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/NpcOffer\"\n      },\n      \"title\": \"Sell Offers\",\n      \"type\": \"array\"\n    },\n    \"buy_offers\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/NpcOffer\"\n      },\n      \"title\": \"Buy Offers\",\n      \"type\": \"array\"\n    },\n    \"destinations\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/NpcDestination\"\n      },\n      \"title\": \"Destinations\",\n      \"type\": \"array\"\n    },\n    \"teaches\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/TaughtSpell\"\n      },\n      \"title\": \"Teaches\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"status\",\n    \"version\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"gender\",\n    \"location\",\n    \"subarea\",\n    \"city\",\n    \"x\",\n    \"y\",\n    \"z\"\n  ],\n  \"title\": \"Npc\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>image</code>                 (<code>bytes | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>gender</code>                 (<code>str | None</code>)             </li> <li> <code>races</code>                 (<code>list[str]</code>)             </li> <li> <code>jobs</code>                 (<code>list[str]</code>)             </li> <li> <code>location</code>                 (<code>str | None</code>)             </li> <li> <code>subarea</code>                 (<code>str | None</code>)             </li> <li> <code>city</code>                 (<code>str</code>)             </li> <li> <code>x</code>                 (<code>int | None</code>)             </li> <li> <code>y</code>                 (<code>int | None</code>)             </li> <li> <code>z</code>                 (<code>int | None</code>)             </li> <li> <code>sell_offers</code>                 (<code>list[NpcOffer]</code>)             </li> <li> <code>buy_offers</code>                 (<code>list[NpcOffer]</code>)             </li> <li> <code>destinations</code>                 (<code>list[NpcDestination]</code>)             </li> <li> <code>teaches</code>                 (<code>list[TaughtSpell]</code>)             </li> </ul>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The in-game name of the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.gender","title":"gender  <code>pydantic-field</code>","text":"<pre><code>gender: str | None\n</code></pre> <p>The gender of the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.races","title":"races  <code>pydantic-field</code>","text":"<pre><code>races: list[str]\n</code></pre> <p>The races of the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.jobs","title":"jobs  <code>pydantic-field</code>","text":"<pre><code>jobs: list[str]\n</code></pre> <p>The jobs of the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.location","title":"location  <code>pydantic-field</code>","text":"<pre><code>location: str | None\n</code></pre> <p>The location of the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.subarea","title":"subarea  <code>pydantic-field</code>","text":"<pre><code>subarea: str | None\n</code></pre> <p>A finer location of the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.city","title":"city  <code>pydantic-field</code>","text":"<pre><code>city: str\n</code></pre> <p>The nearest city to where the NPC is located.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.x","title":"x  <code>pydantic-field</code>","text":"<pre><code>x: int | None\n</code></pre> <p>The x coordinates of the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.y","title":"y  <code>pydantic-field</code>","text":"<pre><code>y: int | None\n</code></pre> <p>The y coordinates of the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.z","title":"z  <code>pydantic-field</code>","text":"<pre><code>z: int | None\n</code></pre> <p>The z coordinates of the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.sell_offers","title":"sell_offers  <code>pydantic-field</code>","text":"<pre><code>sell_offers: list[NpcOffer]\n</code></pre> <p>Items sold by the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.buy_offers","title":"buy_offers  <code>pydantic-field</code>","text":"<pre><code>buy_offers: list[NpcOffer]\n</code></pre> <p>Items bought by the NPC.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.destinations","title":"destinations  <code>pydantic-field</code>","text":"<pre><code>destinations: list[NpcDestination]\n</code></pre> <p>Places where the NPC can travel to.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.teaches","title":"teaches  <code>pydantic-field</code>","text":"<pre><code>teaches: list[TaughtSpell]\n</code></pre> <p>Spells this NPC can teach.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.job","title":"job  <code>property</code>","text":"<pre><code>job: str | None\n</code></pre> <p>Get the first listed job of the NPC, if any.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.race","title":"race  <code>property</code>","text":"<pre><code>race: str | None\n</code></pre> <p>Get the first listed race of the NPC, if any.</p>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor)\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/npc.py</code> <pre><code>def insert(self, conn: sqlite3.Connection | sqlite3.Cursor):\n    super().insert(conn)\n    for destination in self.destinations:\n        NpcDestinationTable.insert(\n            conn,\n            npc_id=self.article_id,\n            name=destination.name,\n            price=destination.price,\n            notes=destination.notes,\n        )\n    for job in self.jobs:\n        NpcJobTable.insert(conn, npc_id=self.article_id, name=job)\n    for race in self.races:\n        NpcRaceTable.insert(conn, npc_id=self.article_id, name=race)\n</code></pre>"},{"location":"api/models/npc/#tibiawikisql.models.npc.Npc.get_one_by_field","title":"get_one_by_field  <code>classmethod</code>","text":"<pre><code>get_one_by_field(\n    conn: Connection | Cursor,\n    field: str,\n    value: Any,\n    use_like: bool = False,\n) -&gt; Self | None\n</code></pre> <p>Get a single element matching the field's value.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection or cursor of the database.</p> required <code>field</code> <code>str</code> <p>The field to filter with.</p> required <code>value</code> <code>Any</code> <p>The value to look for.</p> required <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as a comparator instead of <code>=</code>.</p> <code>False</code> <p>Returns:</p> Type Description <code>Self | None</code> <p>The object found, or <code>None</code> if no entries match.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>The specified field doesn't exist in the table.</p> Source code in <code>tibiawikisql/models/npc.py</code> <pre><code>@classmethod\ndef get_one_by_field(cls, conn: Connection | Cursor, field: str, value: Any, use_like: bool = False) -&gt; Self | None:\n    npc: Self = super().get_one_by_field(conn, field, value, use_like)\n    if npc is None:\n        return None\n    npc.jobs = [j[\"name\"] for j in NpcJobTable.get_list_by_field(conn, \"npc_id\", npc.article_id)]\n    npc.races = [j[\"name\"] for j in NpcRaceTable.get_list_by_field(conn, \"npc_id\", npc.article_id)]\n    npc.teaches = [\n        TaughtSpell(\n            spell_title=r[\"title\"],\n            spell_id=r[\"article_id\"],\n            price=r[\"price\"],\n            knight=r[\"knight\"],\n            paladin=r[\"paladin\"],\n            sorcerer=r[\"sorcerer\"],\n            druid=r[\"druid\"],\n            monk=r[\"monk\"],\n        ) for r in NpcSpellTable.get_by_npc_id(conn, npc.article_id)\n    ]\n    npc.sell_offers = [\n        NpcOffer(\n            item_id=r[\"item_id\"],\n            item_title=r[\"item_title\"],\n            currency_id=r[\"currency_id\"],\n            currency_title=r[\"currency_title\"],\n            value=r[\"value\"],\n        ) for r in NpcBuyingTable.get_by_npc_id(conn, npc.article_id)\n    ]\n    npc.buy_offers = [\n        NpcOffer(\n            item_id=r[\"item_id\"],\n            item_title=r[\"item_title\"],\n            currency_id=r[\"currency_id\"],\n            currency_title=r[\"currency_title\"],\n            value=r[\"value\"],\n        ) for r in NpcSellingTable.get_by_npc_id(conn, npc.article_id)\n    ]\n    npc.destinations = [\n        NpcDestination.model_validate(dict(r))\n        for r in NpcDestinationTable.get_list_by_field(conn, \"npc_id\", npc.article_id)\n    ]\n    return npc\n</code></pre>"},{"location":"api/models/outfit/","title":"Outfit","text":""},{"location":"api/models/outfit/#tibiawikisql.models.outfit","title":"tibiawikisql.models.outfit","text":"<p>Classes:</p> Name Description <code>UnlockQuest</code> <p>A quest that unlocks the outfit and/or its addons.</p> <code>OutfitQuest</code> <p>Represents a quest that grants an outfit or it's addon.</p> <code>OutfitImage</code> <p>Represents an outfit image.</p> <code>Outfit</code> <p>Represents an outfit.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.UnlockQuest","title":"UnlockQuest  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>A quest that unlocks the outfit and/or its addons.</p> Show JSON schema: <pre><code>{\n  \"description\": \"A quest that unlocks the outfit and/or its addons.\",\n  \"properties\": {\n    \"quest_id\": {\n      \"default\": null,\n      \"title\": \"Quest Id\",\n      \"type\": \"integer\"\n    },\n    \"quest_title\": {\n      \"title\": \"Quest Title\",\n      \"type\": \"string\"\n    },\n    \"unlock_type\": {\n      \"title\": \"Unlock Type\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"quest_title\",\n    \"unlock_type\"\n  ],\n  \"title\": \"UnlockQuest\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>quest_id</code>                 (<code>int</code>)             </li> <li> <code>quest_title</code>                 (<code>str</code>)             </li> <li> <code>unlock_type</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.UnlockQuest.quest_id","title":"quest_id  <code>pydantic-field</code>","text":"<pre><code>quest_id: int = None\n</code></pre> <p>The article id of the quest that gives the outfit or its addons.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.UnlockQuest.quest_title","title":"quest_title  <code>pydantic-field</code>","text":"<pre><code>quest_title: str\n</code></pre> <p>The title of the quest.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.UnlockQuest.unlock_type","title":"unlock_type  <code>pydantic-field</code>","text":"<pre><code>unlock_type: str\n</code></pre> <p>Whether the quest is for the outfit or addons.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitQuest","title":"OutfitQuest  <code>pydantic-model</code>","text":"<p>               Bases: <code>RowModel</code></p> <p>Represents a quest that grants an outfit or it's addon.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a quest that grants an outfit or it's addon.\",\n  \"properties\": {\n    \"outfit_id\": {\n      \"title\": \"Outfit Id\",\n      \"type\": \"integer\"\n    },\n    \"outfit_title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Outfit Title\"\n    },\n    \"quest_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Quest Id\"\n    },\n    \"quest_title\": {\n      \"title\": \"Quest Title\",\n      \"type\": \"string\"\n    },\n    \"unlock_type\": {\n      \"title\": \"Unlock Type\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"outfit_id\",\n    \"quest_title\",\n    \"unlock_type\"\n  ],\n  \"title\": \"OutfitQuest\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>outfit_id</code>                 (<code>int</code>)             </li> <li> <code>outfit_title</code>                 (<code>str | None</code>)             </li> <li> <code>quest_id</code>                 (<code>int | None</code>)             </li> <li> <code>quest_title</code>                 (<code>str</code>)             </li> <li> <code>unlock_type</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitQuest.outfit_id","title":"outfit_id  <code>pydantic-field</code>","text":"<pre><code>outfit_id: int\n</code></pre> <p>The article id of the outfit given.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitQuest.outfit_title","title":"outfit_title  <code>pydantic-field</code>","text":"<pre><code>outfit_title: str | None = None\n</code></pre> <p>The title of the outfit given.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitQuest.quest_id","title":"quest_id  <code>pydantic-field</code>","text":"<pre><code>quest_id: int | None = None\n</code></pre> <p>The article id of the quest that gives the outfit or its addons.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitQuest.quest_title","title":"quest_title  <code>pydantic-field</code>","text":"<pre><code>quest_title: str\n</code></pre> <p>The title of the quest.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitQuest.unlock_type","title":"unlock_type  <code>pydantic-field</code>","text":"<pre><code>unlock_type: str\n</code></pre> <p>Whether the quest is for the outfit or addons.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitImage","title":"OutfitImage  <code>pydantic-model</code>","text":"<p>               Bases: <code>RowModel</code>, <code>WithImage</code></p> <p>Represents an outfit image.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents an outfit image.\",\n  \"properties\": {\n    \"image\": {\n      \"anyOf\": [\n        {\n          \"format\": \"binary\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image\"\n    },\n    \"outfit_id\": {\n      \"title\": \"Outfit Id\",\n      \"type\": \"integer\"\n    },\n    \"outfit_name\": {\n      \"title\": \"Outfit Name\",\n      \"type\": \"string\"\n    },\n    \"sex\": {\n      \"title\": \"Sex\",\n      \"type\": \"string\"\n    },\n    \"addon\": {\n      \"title\": \"Addon\",\n      \"type\": \"integer\"\n    }\n  },\n  \"required\": [\n    \"outfit_id\",\n    \"outfit_name\",\n    \"sex\",\n    \"addon\"\n  ],\n  \"title\": \"OutfitImage\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>image</code>                 (<code>bytes | None</code>)             </li> <li> <code>outfit_id</code>                 (<code>int</code>)             </li> <li> <code>outfit_name</code>                 (<code>str</code>)             </li> <li> <code>sex</code>                 (<code>str</code>)             </li> <li> <code>addon</code>                 (<code>int</code>)             </li> </ul>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitImage.outfit_id","title":"outfit_id  <code>pydantic-field</code>","text":"<pre><code>outfit_id: int\n</code></pre> <p>The article id of the outfit the image belongs to.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitImage.outfit_name","title":"outfit_name  <code>pydantic-field</code>","text":"<pre><code>outfit_name: str\n</code></pre> <p>The name of the outfit.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitImage.sex","title":"sex  <code>pydantic-field</code>","text":"<pre><code>sex: str\n</code></pre> <p>The sex the outfit is for.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.OutfitImage.addon","title":"addon  <code>pydantic-field</code>","text":"<pre><code>addon: int\n</code></pre> <p>The addons represented by the image. 0 for no addons, 1 for first addon, 2 for second addon and 3 for both addons.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit","title":"Outfit  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithStatus</code>, <code>WithVersion</code>, <code>RowModel</code></p> <p>Represents an outfit.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"OutfitImage\": {\n      \"description\": \"Represents an outfit image.\",\n      \"properties\": {\n        \"image\": {\n          \"anyOf\": [\n            {\n              \"format\": \"binary\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Image\"\n        },\n        \"outfit_id\": {\n          \"title\": \"Outfit Id\",\n          \"type\": \"integer\"\n        },\n        \"outfit_name\": {\n          \"title\": \"Outfit Name\",\n          \"type\": \"string\"\n        },\n        \"sex\": {\n          \"title\": \"Sex\",\n          \"type\": \"string\"\n        },\n        \"addon\": {\n          \"title\": \"Addon\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"outfit_id\",\n        \"outfit_name\",\n        \"sex\",\n        \"addon\"\n      ],\n      \"title\": \"OutfitImage\",\n      \"type\": \"object\"\n    },\n    \"UnlockQuest\": {\n      \"description\": \"A quest that unlocks the outfit and/or its addons.\",\n      \"properties\": {\n        \"quest_id\": {\n          \"default\": null,\n          \"title\": \"Quest Id\",\n          \"type\": \"integer\"\n        },\n        \"quest_title\": {\n          \"title\": \"Quest Title\",\n          \"type\": \"string\"\n        },\n        \"unlock_type\": {\n          \"title\": \"Unlock Type\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"quest_title\",\n        \"unlock_type\"\n      ],\n      \"title\": \"UnlockQuest\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents an outfit.\",\n  \"properties\": {\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"outfit_type\": {\n      \"title\": \"Outfit Type\",\n      \"type\": \"string\"\n    },\n    \"is_premium\": {\n      \"title\": \"Is Premium\",\n      \"type\": \"boolean\"\n    },\n    \"is_bought\": {\n      \"title\": \"Is Bought\",\n      \"type\": \"boolean\"\n    },\n    \"is_tournament\": {\n      \"title\": \"Is Tournament\",\n      \"type\": \"boolean\"\n    },\n    \"full_price\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Full Price\"\n    },\n    \"achievement\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Achievement\"\n    },\n    \"images\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/OutfitImage\"\n      },\n      \"title\": \"Images\",\n      \"type\": \"array\"\n    },\n    \"quests\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/UnlockQuest\"\n      },\n      \"title\": \"Quests\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"version\",\n    \"status\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"outfit_type\",\n    \"is_premium\",\n    \"is_bought\",\n    \"is_tournament\",\n    \"full_price\",\n    \"achievement\"\n  ],\n  \"title\": \"Outfit\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>outfit_type</code>                 (<code>str</code>)             </li> <li> <code>is_premium</code>                 (<code>bool</code>)             </li> <li> <code>is_bought</code>                 (<code>bool</code>)             </li> <li> <code>is_tournament</code>                 (<code>bool</code>)             </li> <li> <code>full_price</code>                 (<code>int | None</code>)             </li> <li> <code>achievement</code>                 (<code>str | None</code>)             </li> <li> <code>images</code>                 (<code>list[OutfitImage]</code>)             </li> <li> <code>quests</code>                 (<code>list[UnlockQuest]</code>)             </li> </ul>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the outfit.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.outfit_type","title":"outfit_type  <code>pydantic-field</code>","text":"<pre><code>outfit_type: str\n</code></pre> <p>The type of outfit. Basic, Quest, Special, Premium.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.is_premium","title":"is_premium  <code>pydantic-field</code>","text":"<pre><code>is_premium: bool\n</code></pre> <p>Whether the outfit requires a premium account or not.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.is_bought","title":"is_bought  <code>pydantic-field</code>","text":"<pre><code>is_bought: bool\n</code></pre> <p>Whether the outfit can be bought from the Store or not.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.is_tournament","title":"is_tournament  <code>pydantic-field</code>","text":"<pre><code>is_tournament: bool\n</code></pre> <p>Whether the outfit can be bought with Tournament coins or not.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.full_price","title":"full_price  <code>pydantic-field</code>","text":"<pre><code>full_price: int | None\n</code></pre> <p>The full price of this outfit in the Tibia Store.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.achievement","title":"achievement  <code>pydantic-field</code>","text":"<pre><code>achievement: str | None\n</code></pre> <p>The achievement obtained for acquiring this full outfit.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.images","title":"images  <code>pydantic-field</code>","text":"<pre><code>images: list[OutfitImage]\n</code></pre> <p>The outfit's images.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.quests","title":"quests  <code>pydantic-field</code>","text":"<pre><code>quests: list[UnlockQuest]\n</code></pre> <p>Quests that grant the outfit or its addons.</p>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor) -&gt; None\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/outfit.py</code> <pre><code>def insert(self, conn: Connection | Cursor) -&gt; None:\n    super().insert(conn)\n    for quest in self.quests:\n        quest.insert(conn, self.article_id)\n</code></pre>"},{"location":"api/models/outfit/#tibiawikisql.models.outfit.Outfit.get_one_by_field","title":"get_one_by_field  <code>classmethod</code>","text":"<pre><code>get_one_by_field(\n    conn: Connection | Cursor,\n    field: str,\n    value: Any,\n    use_like: bool = False,\n) -&gt; Self | None\n</code></pre> <p>Get a single element matching the field's value.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection or cursor of the database.</p> required <code>field</code> <code>str</code> <p>The field to filter with.</p> required <code>value</code> <code>Any</code> <p>The value to look for.</p> required <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as a comparator instead of <code>=</code>.</p> <code>False</code> <p>Returns:</p> Type Description <code>Self | None</code> <p>The object found, or <code>None</code> if no entries match.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>The specified field doesn't exist in the table.</p> Source code in <code>tibiawikisql/models/outfit.py</code> <pre><code>@classmethod\ndef get_one_by_field(cls, conn: Connection | Cursor, field: str, value: Any, use_like: bool = False) -&gt; Self | None:\n    outfit: Self = super().get_one_by_field(conn, field, value, use_like)\n    if outfit is None:\n        return None\n    outfit.quests = [UnlockQuest(**dict(r)) for r in OutfitQuestTable.get_list_by_outfit_id(conn, outfit.article_id)]\n    return outfit\n</code></pre>"},{"location":"api/models/quest/","title":"Quest","text":""},{"location":"api/models/quest/#tibiawikisql.models.quest","title":"tibiawikisql.models.quest","text":"<p>Classes:</p> Name Description <code>ItemReward</code> <p>An item awarded in the quest.</p> <code>QuestReward</code> <p>Represents an item obtained in the quest.</p> <code>QuestCreature</code> <p>Represents a creature found in the quest.</p> <code>QuestDanger</code> <p>Represents a creature found in the quest.</p> <code>Quest</code> <p>Represents a quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.ItemReward","title":"ItemReward  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>An item awarded in the quest.</p> Show JSON schema: <pre><code>{\n  \"description\": \"An item awarded in the quest.\",\n  \"properties\": {\n    \"item_id\": {\n      \"default\": 0,\n      \"title\": \"Item Id\",\n      \"type\": \"integer\"\n    },\n    \"item_title\": {\n      \"title\": \"Item Title\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"item_title\"\n  ],\n  \"title\": \"ItemReward\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>item_id</code>                 (<code>int</code>)             </li> <li> <code>item_title</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/quest/#tibiawikisql.models.quest.ItemReward.item_id","title":"item_id  <code>pydantic-field</code>","text":"<pre><code>item_id: int = 0\n</code></pre> <p>The article id of the rewarded item.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.ItemReward.item_title","title":"item_title  <code>pydantic-field</code>","text":"<pre><code>item_title: str\n</code></pre> <p>The title of the rewarded item.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestReward","title":"QuestReward  <code>pydantic-model</code>","text":"<p>               Bases: <code>RowModel</code></p> <p>Represents an item obtained in the quest.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents an item obtained in the quest.\",\n  \"properties\": {\n    \"quest_id\": {\n      \"title\": \"Quest Id\",\n      \"type\": \"integer\"\n    },\n    \"quest_title\": {\n      \"title\": \"Quest Title\",\n      \"type\": \"string\"\n    },\n    \"item_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Item Id\"\n    },\n    \"item_title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Item Title\"\n    }\n  },\n  \"required\": [\n    \"quest_id\",\n    \"quest_title\"\n  ],\n  \"title\": \"QuestReward\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>quest_id</code>                 (<code>int</code>)             </li> <li> <code>quest_title</code>                 (<code>str</code>)             </li> <li> <code>item_id</code>                 (<code>int | None</code>)             </li> <li> <code>item_title</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestReward.quest_id","title":"quest_id  <code>pydantic-field</code>","text":"<pre><code>quest_id: int\n</code></pre> <p>The article id of the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestReward.quest_title","title":"quest_title  <code>pydantic-field</code>","text":"<pre><code>quest_title: str\n</code></pre> <p>The title of the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestReward.item_id","title":"item_id  <code>pydantic-field</code>","text":"<pre><code>item_id: int | None = None\n</code></pre> <p>The article id of the rewarded item.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestReward.item_title","title":"item_title  <code>pydantic-field</code>","text":"<pre><code>item_title: str | None = None\n</code></pre> <p>The title of the rewarded item.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestReward.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor) -&gt; None\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/quest.py</code> <pre><code>def insert(self, conn: sqlite3.Connection | sqlite3.Cursor) -&gt; None:\n    if self.item_id is not None:\n        super().insert(conn)\n        return\n    quest_table = self.table.__table__\n    item_table = ItemTable.__table__\n    q = (\n        Query.into(quest_table)\n        .columns(\n            \"quest_id\",\n            \"item_id\",\n        )\n        .insert(\n            Parameter(\":quest_id\"),\n            (\n                Query.from_(item_table)\n                .select(item_table.article_id)\n                .where(item_table.title == Parameter(\":item_title\"))\n            ),\n        )\n    )\n\n    query_str = q.get_sql()\n    with contextlib.suppress(sqlite3.IntegrityError):\n        conn.execute(query_str, self.model_dump(mode=\"json\"))\n</code></pre>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestCreature","title":"QuestCreature  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a creature found in the quest.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a creature found in the quest.\",\n  \"properties\": {\n    \"creature_id\": {\n      \"default\": 0,\n      \"title\": \"Creature Id\",\n      \"type\": \"integer\"\n    },\n    \"creature_title\": {\n      \"title\": \"Creature Title\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"creature_title\"\n  ],\n  \"title\": \"QuestCreature\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>creature_id</code>                 (<code>int</code>)             </li> <li> <code>creature_title</code>                 (<code>str</code>)             </li> </ul>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestCreature.creature_id","title":"creature_id  <code>pydantic-field</code>","text":"<pre><code>creature_id: int = 0\n</code></pre> <p>The article id of the found creature.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestCreature.creature_title","title":"creature_title  <code>pydantic-field</code>","text":"<pre><code>creature_title: str\n</code></pre> <p>The title of the found creature.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestDanger","title":"QuestDanger  <code>pydantic-model</code>","text":"<p>               Bases: <code>RowModel</code></p> <p>Represents a creature found in the quest.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a creature found in the quest.\",\n  \"properties\": {\n    \"quest_id\": {\n      \"title\": \"Quest Id\",\n      \"type\": \"integer\"\n    },\n    \"quest_title\": {\n      \"title\": \"Quest Title\",\n      \"type\": \"string\"\n    },\n    \"creature_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Creature Id\"\n    },\n    \"creature_title\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Creature Title\"\n    }\n  },\n  \"required\": [\n    \"quest_id\",\n    \"quest_title\"\n  ],\n  \"title\": \"QuestDanger\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>quest_id</code>                 (<code>int</code>)             </li> <li> <code>quest_title</code>                 (<code>str</code>)             </li> <li> <code>creature_id</code>                 (<code>int | None</code>)             </li> <li> <code>creature_title</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestDanger.quest_id","title":"quest_id  <code>pydantic-field</code>","text":"<pre><code>quest_id: int\n</code></pre> <p>The article id of the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestDanger.quest_title","title":"quest_title  <code>pydantic-field</code>","text":"<pre><code>quest_title: str\n</code></pre> <p>The title of the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestDanger.creature_id","title":"creature_id  <code>pydantic-field</code>","text":"<pre><code>creature_id: int | None = None\n</code></pre> <p>The article id of the found creature.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestDanger.creature_title","title":"creature_title  <code>pydantic-field</code>","text":"<pre><code>creature_title: str | None = None\n</code></pre> <p>The title of the found creature.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.QuestDanger.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor) -&gt; None\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/quest.py</code> <pre><code>def insert(self, conn: sqlite3.Connection | sqlite3.Cursor) -&gt; None:\n    if self.creature_id is not None:\n        super().insert(conn)\n        return\n    quest_table = self.table.__table__\n    creature_table = CreatureTable.__table__\n    q = (\n        Query.into(quest_table)\n        .columns(\n            \"quest_id\",\n            \"creature_id\",\n        )\n        .insert(\n            Parameter(\":quest_id\"),\n            (\n                Query.from_(creature_table)\n                .select(creature_table.article_id)\n                .where(creature_table.title == Parameter(\":creature_title\"))\n            ),\n        )\n    )\n\n    query_str = q.get_sql()\n    with contextlib.suppress(sqlite3.IntegrityError):\n        conn.execute(query_str, self.model_dump(mode=\"json\"))\n</code></pre>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest","title":"Quest  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithStatus</code>, <code>WithVersion</code>, <code>RowModel</code></p> <p>Represents a quest.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"ItemReward\": {\n      \"description\": \"An item awarded in the quest.\",\n      \"properties\": {\n        \"item_id\": {\n          \"default\": 0,\n          \"title\": \"Item Id\",\n          \"type\": \"integer\"\n        },\n        \"item_title\": {\n          \"title\": \"Item Title\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"item_title\"\n      ],\n      \"title\": \"ItemReward\",\n      \"type\": \"object\"\n    },\n    \"QuestCreature\": {\n      \"description\": \"Represents a creature found in the quest.\",\n      \"properties\": {\n        \"creature_id\": {\n          \"default\": 0,\n          \"title\": \"Creature Id\",\n          \"type\": \"integer\"\n        },\n        \"creature_title\": {\n          \"title\": \"Creature Title\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"creature_title\"\n      ],\n      \"title\": \"QuestCreature\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents a quest.\",\n  \"properties\": {\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"location\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Location\"\n    },\n    \"rookgaard\": {\n      \"title\": \"Rookgaard\",\n      \"type\": \"boolean\"\n    },\n    \"is_premium\": {\n      \"title\": \"Is Premium\",\n      \"type\": \"boolean\"\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Type\"\n    },\n    \"quest_log\": {\n      \"anyOf\": [\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Quest Log\"\n    },\n    \"legend\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Legend\"\n    },\n    \"level_required\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Level Required\"\n    },\n    \"level_recommended\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Level Recommended\"\n    },\n    \"active_time\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Active Time\"\n    },\n    \"estimated_time\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Estimated Time\"\n    },\n    \"dangers\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/QuestCreature\"\n      },\n      \"title\": \"Dangers\",\n      \"type\": \"array\"\n    },\n    \"rewards\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ItemReward\"\n      },\n      \"title\": \"Rewards\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"version\",\n    \"status\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"location\",\n    \"rookgaard\",\n    \"is_premium\",\n    \"type\",\n    \"quest_log\",\n    \"legend\",\n    \"level_required\",\n    \"level_recommended\",\n    \"active_time\",\n    \"estimated_time\"\n  ],\n  \"title\": \"Quest\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>location</code>                 (<code>str | None</code>)             </li> <li> <code>rookgaard</code>                 (<code>bool</code>)             </li> <li> <code>is_premium</code>                 (<code>bool</code>)             </li> <li> <code>type</code>                 (<code>str | None</code>)             </li> <li> <code>quest_log</code>                 (<code>bool | None</code>)             </li> <li> <code>legend</code>                 (<code>str | None</code>)             </li> <li> <code>level_required</code>                 (<code>int | None</code>)             </li> <li> <code>level_recommended</code>                 (<code>int | None</code>)             </li> <li> <code>active_time</code>                 (<code>str | None</code>)             </li> <li> <code>estimated_time</code>                 (<code>str | None</code>)             </li> <li> <code>dangers</code>                 (<code>list[QuestCreature]</code>)             </li> <li> <code>rewards</code>                 (<code>list[ItemReward]</code>)             </li> </ul>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.location","title":"location  <code>pydantic-field</code>","text":"<pre><code>location: str | None\n</code></pre> <p>The location of the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.rookgaard","title":"rookgaard  <code>pydantic-field</code>","text":"<pre><code>rookgaard: bool\n</code></pre> <p>Whether this quest is in Rookgaard or not.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.is_premium","title":"is_premium  <code>pydantic-field</code>","text":"<pre><code>is_premium: bool\n</code></pre> <p>Whether this quest requires a Premium account or not.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.type","title":"type  <code>pydantic-field</code>","text":"<pre><code>type: str | None\n</code></pre> <p>The type of quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.quest_log","title":"quest_log  <code>pydantic-field</code>","text":"<pre><code>quest_log: bool | None\n</code></pre> <p>Whether this quest is registered in the quest log or not.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.legend","title":"legend  <code>pydantic-field</code>","text":"<pre><code>legend: str | None\n</code></pre> <p>The legend of the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.level_required","title":"level_required  <code>pydantic-field</code>","text":"<pre><code>level_required: int | None\n</code></pre> <p>The level required to finish the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.level_recommended","title":"level_recommended  <code>pydantic-field</code>","text":"<pre><code>level_recommended: int | None\n</code></pre> <p>The recommended level to finish the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.active_time","title":"active_time  <code>pydantic-field</code>","text":"<pre><code>active_time: str | None\n</code></pre> <p>Times of the year when this quest is active.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.estimated_time","title":"estimated_time  <code>pydantic-field</code>","text":"<pre><code>estimated_time: str | None\n</code></pre> <p>Estimated time to finish this quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.dangers","title":"dangers  <code>pydantic-field</code>","text":"<pre><code>dangers: list[QuestCreature]\n</code></pre> <p>Creatures found in the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.rewards","title":"rewards  <code>pydantic-field</code>","text":"<pre><code>rewards: list[ItemReward]\n</code></pre> <p>Items rewarded in the quest.</p>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.insert","title":"insert","text":"<pre><code>insert(conn: Connection | Cursor) -&gt; None\n</code></pre> <p>Insert the model into its respective database table.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A cursor or connection to the database.</p> required Source code in <code>tibiawikisql/models/quest.py</code> <pre><code>def insert(self, conn: sqlite3.Connection | sqlite3.Cursor) -&gt; None:\n    super().insert(conn)\n    for reward in self.rewards:\n        reward.insert(conn, self.article_id)\n    for danger in self.dangers:\n        danger.insert(conn, self.article_id)\n</code></pre>"},{"location":"api/models/quest/#tibiawikisql.models.quest.Quest.get_one_by_field","title":"get_one_by_field  <code>classmethod</code>","text":"<pre><code>get_one_by_field(\n    conn: Connection | Cursor,\n    field: str,\n    value: Any,\n    use_like: bool = False,\n) -&gt; Self | None\n</code></pre> <p>Get a single element matching the field's value.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection or cursor of the database.</p> required <code>field</code> <code>str</code> <p>The field to filter with.</p> required <code>value</code> <code>Any</code> <p>The value to look for.</p> required <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as a comparator instead of <code>=</code>.</p> <code>False</code> <p>Returns:</p> Type Description <code>Self | None</code> <p>The object found, or <code>None</code> if no entries match.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>The specified field doesn't exist in the table.</p> Source code in <code>tibiawikisql/models/quest.py</code> <pre><code>@classmethod\ndef get_one_by_field(cls, conn: Connection | Cursor, field: str, value: Any, use_like: bool = False) -&gt; Self | None:\n    quest: Self = super().get_one_by_field(conn, field, value, use_like)\n    if quest is None:\n        return None\n    quest.rewards = [ItemReward(**dict(r)) for r in QuestRewardTable.get_list_by_quest_id(conn, quest.article_id)]\n    quest.dangers = [QuestCreature(**dict(r)) for r in QuestDangerTable.get_list_by_quest_id(conn, quest.article_id)]\n    return quest\n</code></pre>"},{"location":"api/models/spell/","title":"Spell","text":""},{"location":"api/models/spell/#tibiawikisql.models.spell","title":"tibiawikisql.models.spell","text":"<p>Classes:</p> Name Description <code>SpellTeacher</code> <p>An NPC that teaches the spell.</p> <code>Spell</code> <p>Represents a Spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.SpellTeacher","title":"SpellTeacher  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>An NPC that teaches the spell.</p> <p>Note that even if the spell can be learned by multiple vocations, an NPC might only teach it to a specific vocation.</p> Show JSON schema: <pre><code>{\n  \"description\": \"An NPC that teaches the spell.\\n\\nNote that even if the spell can be learned by multiple vocations, an NPC might only teach it to a specific vocation.\",\n  \"properties\": {\n    \"npc_id\": {\n      \"title\": \"Npc Id\",\n      \"type\": \"integer\"\n    },\n    \"npc_title\": {\n      \"title\": \"Npc Title\",\n      \"type\": \"string\"\n    },\n    \"npc_city\": {\n      \"title\": \"Npc City\",\n      \"type\": \"string\"\n    },\n    \"knight\": {\n      \"title\": \"Knight\",\n      \"type\": \"boolean\"\n    },\n    \"paladin\": {\n      \"title\": \"Paladin\",\n      \"type\": \"boolean\"\n    },\n    \"druid\": {\n      \"title\": \"Druid\",\n      \"type\": \"boolean\"\n    },\n    \"sorcerer\": {\n      \"title\": \"Sorcerer\",\n      \"type\": \"boolean\"\n    },\n    \"monk\": {\n      \"title\": \"Monk\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"npc_id\",\n    \"npc_title\",\n    \"npc_city\",\n    \"knight\",\n    \"paladin\",\n    \"druid\",\n    \"sorcerer\",\n    \"monk\"\n  ],\n  \"title\": \"SpellTeacher\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>npc_id</code>                 (<code>int</code>)             </li> <li> <code>npc_title</code>                 (<code>str</code>)             </li> <li> <code>npc_city</code>                 (<code>str</code>)             </li> <li> <code>knight</code>                 (<code>bool</code>)             </li> <li> <code>paladin</code>                 (<code>bool</code>)             </li> <li> <code>druid</code>                 (<code>bool</code>)             </li> <li> <code>sorcerer</code>                 (<code>bool</code>)             </li> <li> <code>monk</code>                 (<code>bool</code>)             </li> </ul>"},{"location":"api/models/spell/#tibiawikisql.models.spell.SpellTeacher.npc_id","title":"npc_id  <code>pydantic-field</code>","text":"<pre><code>npc_id: int\n</code></pre> <p>The article ID of the NPC that teaches it.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.SpellTeacher.npc_title","title":"npc_title  <code>pydantic-field</code>","text":"<pre><code>npc_title: str\n</code></pre> <p>The title of the NPC that teaches it.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.SpellTeacher.npc_city","title":"npc_city  <code>pydantic-field</code>","text":"<pre><code>npc_city: str\n</code></pre> <p>The city where the NPC is located.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.SpellTeacher.knight","title":"knight  <code>pydantic-field</code>","text":"<pre><code>knight: bool\n</code></pre> <p>If the NPC teaches the spell to knights.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.SpellTeacher.paladin","title":"paladin  <code>pydantic-field</code>","text":"<pre><code>paladin: bool\n</code></pre> <p>If the NPC teaches the spell to paladins.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.SpellTeacher.druid","title":"druid  <code>pydantic-field</code>","text":"<pre><code>druid: bool\n</code></pre> <p>If the NPC teaches the spell to druids.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.SpellTeacher.sorcerer","title":"sorcerer  <code>pydantic-field</code>","text":"<pre><code>sorcerer: bool\n</code></pre> <p>If the NPC teaches the spell to sorcerers.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.SpellTeacher.monk","title":"monk  <code>pydantic-field</code>","text":"<pre><code>monk: bool\n</code></pre> <p>If the NPC teaches the spell to monks.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell","title":"Spell  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithVersion</code>, <code>WithStatus</code>, <code>WithImage</code>, <code>RowModel</code></p> <p>Represents a Spell.</p> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"SpellTeacher\": {\n      \"description\": \"An NPC that teaches the spell.\\n\\nNote that even if the spell can be learned by multiple vocations, an NPC might only teach it to a specific vocation.\",\n      \"properties\": {\n        \"npc_id\": {\n          \"title\": \"Npc Id\",\n          \"type\": \"integer\"\n        },\n        \"npc_title\": {\n          \"title\": \"Npc Title\",\n          \"type\": \"string\"\n        },\n        \"npc_city\": {\n          \"title\": \"Npc City\",\n          \"type\": \"string\"\n        },\n        \"knight\": {\n          \"title\": \"Knight\",\n          \"type\": \"boolean\"\n        },\n        \"paladin\": {\n          \"title\": \"Paladin\",\n          \"type\": \"boolean\"\n        },\n        \"druid\": {\n          \"title\": \"Druid\",\n          \"type\": \"boolean\"\n        },\n        \"sorcerer\": {\n          \"title\": \"Sorcerer\",\n          \"type\": \"boolean\"\n        },\n        \"monk\": {\n          \"title\": \"Monk\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"npc_id\",\n        \"npc_title\",\n        \"npc_city\",\n        \"knight\",\n        \"paladin\",\n        \"druid\",\n        \"sorcerer\",\n        \"monk\"\n      ],\n      \"title\": \"SpellTeacher\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"Represents a Spell.\",\n  \"properties\": {\n    \"image\": {\n      \"anyOf\": [\n        {\n          \"format\": \"binary\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image\"\n    },\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"string\"\n    },\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"words\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Words\"\n    },\n    \"effect\": {\n      \"title\": \"Effect\",\n      \"type\": \"string\"\n    },\n    \"spell_type\": {\n      \"title\": \"Spell Type\",\n      \"type\": \"string\"\n    },\n    \"group_spell\": {\n      \"title\": \"Group Spell\",\n      \"type\": \"string\"\n    },\n    \"group_secondary\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Group Secondary\"\n    },\n    \"group_rune\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Group Rune\"\n    },\n    \"element\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Element\"\n    },\n    \"mana\": {\n      \"title\": \"Mana\",\n      \"type\": \"integer\"\n    },\n    \"soul\": {\n      \"title\": \"Soul\",\n      \"type\": \"integer\"\n    },\n    \"price\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Price\"\n    },\n    \"cooldown\": {\n      \"title\": \"Cooldown\",\n      \"type\": \"integer\"\n    },\n    \"cooldown2\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Cooldown2\"\n    },\n    \"cooldown3\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Cooldown3\"\n    },\n    \"cooldown_group\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cooldown Group\"\n    },\n    \"cooldown_group_secondary\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Cooldown Group Secondary\"\n    },\n    \"level\": {\n      \"title\": \"Level\",\n      \"type\": \"integer\"\n    },\n    \"is_premium\": {\n      \"title\": \"Is Premium\",\n      \"type\": \"boolean\"\n    },\n    \"is_promotion\": {\n      \"title\": \"Is Promotion\",\n      \"type\": \"boolean\"\n    },\n    \"is_wheel_spell\": {\n      \"title\": \"Is Wheel Spell\",\n      \"type\": \"boolean\"\n    },\n    \"is_passive\": {\n      \"title\": \"Is Passive\",\n      \"type\": \"boolean\"\n    },\n    \"knight\": {\n      \"default\": false,\n      \"title\": \"Knight\",\n      \"type\": \"boolean\"\n    },\n    \"paladin\": {\n      \"default\": false,\n      \"title\": \"Paladin\",\n      \"type\": \"boolean\"\n    },\n    \"druid\": {\n      \"default\": false,\n      \"title\": \"Druid\",\n      \"type\": \"boolean\"\n    },\n    \"sorcerer\": {\n      \"default\": false,\n      \"title\": \"Sorcerer\",\n      \"type\": \"boolean\"\n    },\n    \"monk\": {\n      \"default\": false,\n      \"title\": \"Monk\",\n      \"type\": \"boolean\"\n    },\n    \"taught_by\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/SpellTeacher\"\n      },\n      \"title\": \"Taught By\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"status\",\n    \"version\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"effect\",\n    \"spell_type\",\n    \"group_spell\",\n    \"mana\",\n    \"soul\",\n    \"cooldown\",\n    \"cooldown2\",\n    \"cooldown3\",\n    \"level\",\n    \"is_premium\",\n    \"is_promotion\",\n    \"is_wheel_spell\",\n    \"is_passive\"\n  ],\n  \"title\": \"Spell\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>image</code>                 (<code>bytes | None</code>)             </li> <li> <code>status</code>                 (<code>str</code>)             </li> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>words</code>                 (<code>str | None</code>)             </li> <li> <code>effect</code>                 (<code>str</code>)             </li> <li> <code>spell_type</code>                 (<code>str</code>)             </li> <li> <code>group_spell</code>                 (<code>str</code>)             </li> <li> <code>group_secondary</code>                 (<code>str | None</code>)             </li> <li> <code>group_rune</code>                 (<code>str | None</code>)             </li> <li> <code>element</code>                 (<code>str | None</code>)             </li> <li> <code>mana</code>                 (<code>int</code>)             </li> <li> <code>soul</code>                 (<code>int</code>)             </li> <li> <code>price</code>                 (<code>int | None</code>)             </li> <li> <code>cooldown</code>                 (<code>int</code>)             </li> <li> <code>cooldown2</code>                 (<code>int | None</code>)             </li> <li> <code>cooldown3</code>                 (<code>int | None</code>)             </li> <li> <code>cooldown_group</code>                 (<code>int | None</code>)             </li> <li> <code>cooldown_group_secondary</code>                 (<code>int | None</code>)             </li> <li> <code>level</code>                 (<code>int</code>)             </li> <li> <code>is_premium</code>                 (<code>bool</code>)             </li> <li> <code>is_promotion</code>                 (<code>bool</code>)             </li> <li> <code>is_wheel_spell</code>                 (<code>bool</code>)             </li> <li> <code>is_passive</code>                 (<code>bool</code>)             </li> <li> <code>knight</code>                 (<code>bool</code>)             </li> <li> <code>paladin</code>                 (<code>bool</code>)             </li> <li> <code>druid</code>                 (<code>bool</code>)             </li> <li> <code>sorcerer</code>                 (<code>bool</code>)             </li> <li> <code>monk</code>                 (<code>bool</code>)             </li> <li> <code>taught_by</code>                 (<code>list[SpellTeacher]</code>)             </li> </ul>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.words","title":"words  <code>pydantic-field</code>","text":"<pre><code>words: str | None = None\n</code></pre> <p>The spell's invocation words.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.effect","title":"effect  <code>pydantic-field</code>","text":"<pre><code>effect: str\n</code></pre> <p>The effects of casting the spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.spell_type","title":"spell_type  <code>pydantic-field</code>","text":"<pre><code>spell_type: str\n</code></pre> <p>The spell's type.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.group_spell","title":"group_spell  <code>pydantic-field</code>","text":"<pre><code>group_spell: str\n</code></pre> <p>The spell's group.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.group_secondary","title":"group_secondary  <code>pydantic-field</code>","text":"<pre><code>group_secondary: str | None = None\n</code></pre> <p>The spell's secondary group.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.group_rune","title":"group_rune  <code>pydantic-field</code>","text":"<pre><code>group_rune: str | None = None\n</code></pre> <p>The group of the rune created by this spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.element","title":"element  <code>pydantic-field</code>","text":"<pre><code>element: str | None = None\n</code></pre> <p>The element of the damage made by the spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.mana","title":"mana  <code>pydantic-field</code>","text":"<pre><code>mana: int\n</code></pre> <p>The mana cost of the spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.soul","title":"soul  <code>pydantic-field</code>","text":"<pre><code>soul: int\n</code></pre> <p>The soul cost of the spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.price","title":"price  <code>pydantic-field</code>","text":"<pre><code>price: int | None = None\n</code></pre> <p>The gold cost of the spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.cooldown","title":"cooldown  <code>pydantic-field</code>","text":"<pre><code>cooldown: int\n</code></pre> <p>The spell's individual cooldown in seconds.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.cooldown2","title":"cooldown2  <code>pydantic-field</code>","text":"<pre><code>cooldown2: int | None\n</code></pre> <p>The spell's individual cooldown for the level 2 perk of the Wheel of Destiny.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.cooldown3","title":"cooldown3  <code>pydantic-field</code>","text":"<pre><code>cooldown3: int | None\n</code></pre> <p>The spell's individual cooldown for the level 3 perk of the Wheel of Destiny.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.cooldown_group","title":"cooldown_group  <code>pydantic-field</code>","text":"<pre><code>cooldown_group: int | None = None\n</code></pre> <p>The spell's group cooldown in seconds. The time you have to wait before casting another spell in the same group.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.cooldown_group_secondary","title":"cooldown_group_secondary  <code>pydantic-field</code>","text":"<pre><code>cooldown_group_secondary: int | None = None\n</code></pre> <p>The spell's secondary group cooldown.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.level","title":"level  <code>pydantic-field</code>","text":"<pre><code>level: int\n</code></pre> <p>The level required to use the spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.is_premium","title":"is_premium  <code>pydantic-field</code>","text":"<pre><code>is_premium: bool\n</code></pre> <p>Whether the spell is premium only or not.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.is_promotion","title":"is_promotion  <code>pydantic-field</code>","text":"<pre><code>is_promotion: bool\n</code></pre> <p>Whether you need to be promoted to buy or cast this spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.is_wheel_spell","title":"is_wheel_spell  <code>pydantic-field</code>","text":"<pre><code>is_wheel_spell: bool\n</code></pre> <p>Whether this spell is acquired through the Wheel of Destiny.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.is_passive","title":"is_passive  <code>pydantic-field</code>","text":"<pre><code>is_passive: bool\n</code></pre> <p>Whether this spell is triggered automatically without casting.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.knight","title":"knight  <code>pydantic-field</code>","text":"<pre><code>knight: bool = False\n</code></pre> <p>Whether the spell can be used by knights or not.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.paladin","title":"paladin  <code>pydantic-field</code>","text":"<pre><code>paladin: bool = False\n</code></pre> <p>Whether the spell can be used by paladins or not.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.druid","title":"druid  <code>pydantic-field</code>","text":"<pre><code>druid: bool = False\n</code></pre> <p>Whether the spell can be used by druids or not.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.sorcerer","title":"sorcerer  <code>pydantic-field</code>","text":"<pre><code>sorcerer: bool = False\n</code></pre> <p>Whether the spell can be used by sorcerers or not.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.monk","title":"monk  <code>pydantic-field</code>","text":"<pre><code>monk: bool = False\n</code></pre> <p>Whether the spell can be used by monks or not.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.taught_by","title":"taught_by  <code>pydantic-field</code>","text":"<pre><code>taught_by: list[SpellTeacher]\n</code></pre> <p>NPCs that teach this spell.</p>"},{"location":"api/models/spell/#tibiawikisql.models.spell.Spell.get_one_by_field","title":"get_one_by_field  <code>classmethod</code>","text":"<pre><code>get_one_by_field(\n    conn: Connection | Cursor,\n    field: str,\n    value: Any,\n    use_like: bool = False,\n) -&gt; Self | None\n</code></pre> <p>Get a single element matching the field's value.</p> <p>Parameters:</p> Name Type Description Default <code>conn</code> <code>Connection | Cursor</code> <p>A connection or cursor of the database.</p> required <code>field</code> <code>str</code> <p>The field to filter with.</p> required <code>value</code> <code>Any</code> <p>The value to look for.</p> required <code>use_like</code> <code>bool</code> <p>Whether to use <code>LIKE</code> as a comparator instead of <code>=</code>.</p> <code>False</code> <p>Returns:</p> Type Description <code>Self | None</code> <p>The object found, or <code>None</code> if no entries match.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>The specified field doesn't exist in the table.</p> Source code in <code>tibiawikisql/models/spell.py</code> <pre><code>@classmethod\ndef get_one_by_field(cls, conn: Connection | Cursor, field: str, value: Any, use_like: bool = False) -&gt; Self | None:\n    spell: Self = super().get_one_by_field(conn, field, value, use_like)\n    if spell is None:\n        return spell\n    spell.taught_by = [SpellTeacher(**dict(r)) for r in NpcSpellTable.get_by_spell_id(conn, spell.article_id)]\n    return spell\n</code></pre>"},{"location":"api/models/update/","title":"Update","text":""},{"location":"api/models/update/#tibiawikisql.models.update","title":"tibiawikisql.models.update","text":"<p>Classes:</p> Name Description <code>Update</code> <p>Represents a game update.</p>"},{"location":"api/models/update/#tibiawikisql.models.update.Update","title":"Update  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>WithVersion</code>, <code>RowModel</code></p> <p>Represents a game update.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a game update.\",\n  \"properties\": {\n    \"version\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Version\"\n    },\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Name\"\n    },\n    \"news_id\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"News Id\"\n    },\n    \"release_date\": {\n      \"format\": \"date\",\n      \"title\": \"Release Date\",\n      \"type\": \"string\"\n    },\n    \"type_primary\": {\n      \"title\": \"Type Primary\",\n      \"type\": \"string\"\n    },\n    \"type_secondary\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Type Secondary\"\n    },\n    \"previous\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Previous\"\n    },\n    \"next\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Next\"\n    },\n    \"summary\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Summary\"\n    },\n    \"changes\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Changes\"\n    }\n  },\n  \"required\": [\n    \"version\",\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"news_id\",\n    \"release_date\",\n    \"type_primary\",\n    \"type_secondary\",\n    \"previous\",\n    \"next\",\n    \"summary\",\n    \"changes\"\n  ],\n  \"title\": \"Update\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>version</code>                 (<code>str | None</code>)             </li> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str | None</code>)             </li> <li> <code>news_id</code>                 (<code>int | None</code>)             </li> <li> <code>release_date</code>                 (<code>date</code>)             </li> <li> <code>type_primary</code>                 (<code>str</code>)             </li> <li> <code>type_secondary</code>                 (<code>str | None</code>)             </li> <li> <code>previous</code>                 (<code>str | None</code>)             </li> <li> <code>next</code>                 (<code>str | None</code>)             </li> <li> <code>summary</code>                 (<code>str | None</code>)             </li> <li> <code>changes</code>                 (<code>str | None</code>)             </li> </ul>"},{"location":"api/models/update/#tibiawikisql.models.update.Update.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str | None\n</code></pre> <p>The name of the update, if any.</p>"},{"location":"api/models/update/#tibiawikisql.models.update.Update.news_id","title":"news_id  <code>pydantic-field</code>","text":"<pre><code>news_id: int | None\n</code></pre> <p>The id of the news article that announced the release.</p>"},{"location":"api/models/update/#tibiawikisql.models.update.Update.release_date","title":"release_date  <code>pydantic-field</code>","text":"<pre><code>release_date: date\n</code></pre> <p>The date when the update was released.</p>"},{"location":"api/models/update/#tibiawikisql.models.update.Update.type_primary","title":"type_primary  <code>pydantic-field</code>","text":"<pre><code>type_primary: str\n</code></pre> <p>The primary type of the update.</p>"},{"location":"api/models/update/#tibiawikisql.models.update.Update.type_secondary","title":"type_secondary  <code>pydantic-field</code>","text":"<pre><code>type_secondary: str | None\n</code></pre> <p>The secondary type of the update.</p>"},{"location":"api/models/update/#tibiawikisql.models.update.Update.previous","title":"previous  <code>pydantic-field</code>","text":"<pre><code>previous: str | None\n</code></pre> <p>The version before this update.</p>"},{"location":"api/models/update/#tibiawikisql.models.update.Update.next","title":"next  <code>pydantic-field</code>","text":"<pre><code>next: str | None\n</code></pre> <p>The version after this update.</p>"},{"location":"api/models/update/#tibiawikisql.models.update.Update.summary","title":"summary  <code>pydantic-field</code>","text":"<pre><code>summary: str | None\n</code></pre> <p>A brief summary of the update.</p>"},{"location":"api/models/update/#tibiawikisql.models.update.Update.changes","title":"changes  <code>pydantic-field</code>","text":"<pre><code>changes: str | None\n</code></pre> <p>A brief list of the changes introduced.</p>"},{"location":"api/models/world/","title":"World","text":""},{"location":"api/models/world/#tibiawikisql.models.world","title":"tibiawikisql.models.world","text":"<p>Classes:</p> Name Description <code>World</code> <p>Represents a Game World.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World","title":"World  <code>pydantic-model</code>","text":"<p>               Bases: <code>WikiEntry</code>, <code>RowModel</code></p> <p>Represents a Game World.</p> Show JSON schema: <pre><code>{\n  \"description\": \"Represents a Game World.\",\n  \"properties\": {\n    \"article_id\": {\n      \"title\": \"Article Id\",\n      \"type\": \"integer\"\n    },\n    \"title\": {\n      \"title\": \"Title\",\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"format\": \"date-time\",\n      \"title\": \"Timestamp\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"pvp_type\": {\n      \"title\": \"Pvp Type\",\n      \"type\": \"string\"\n    },\n    \"location\": {\n      \"title\": \"Location\",\n      \"type\": \"string\"\n    },\n    \"is_preview\": {\n      \"title\": \"Is Preview\",\n      \"type\": \"boolean\"\n    },\n    \"is_experimental\": {\n      \"title\": \"Is Experimental\",\n      \"type\": \"boolean\"\n    },\n    \"online_since\": {\n      \"format\": \"date\",\n      \"title\": \"Online Since\",\n      \"type\": \"string\"\n    },\n    \"offline_since\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Offline Since\"\n    },\n    \"merged_into\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Merged Into\"\n    },\n    \"battleye\": {\n      \"title\": \"Battleye\",\n      \"type\": \"boolean\"\n    },\n    \"battleye_type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Battleye Type\"\n    },\n    \"protected_since\": {\n      \"anyOf\": [\n        {\n          \"format\": \"date\",\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Protected Since\"\n    },\n    \"world_board\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"World Board\"\n    },\n    \"trade_board\": {\n      \"anyOf\": [\n        {\n          \"type\": \"integer\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"title\": \"Trade Board\"\n    }\n  },\n  \"required\": [\n    \"article_id\",\n    \"title\",\n    \"timestamp\",\n    \"name\",\n    \"pvp_type\",\n    \"location\",\n    \"is_preview\",\n    \"is_experimental\",\n    \"online_since\",\n    \"offline_since\",\n    \"merged_into\",\n    \"battleye\",\n    \"battleye_type\",\n    \"protected_since\",\n    \"world_board\",\n    \"trade_board\"\n  ],\n  \"title\": \"World\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>article_id</code>                 (<code>int</code>)             </li> <li> <code>title</code>                 (<code>str</code>)             </li> <li> <code>timestamp</code>                 (<code>datetime</code>)             </li> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>pvp_type</code>                 (<code>str</code>)             </li> <li> <code>location</code>                 (<code>str</code>)             </li> <li> <code>is_preview</code>                 (<code>bool</code>)             </li> <li> <code>is_experimental</code>                 (<code>bool</code>)             </li> <li> <code>online_since</code>                 (<code>date</code>)             </li> <li> <code>offline_since</code>                 (<code>date | None</code>)             </li> <li> <code>merged_into</code>                 (<code>str | None</code>)             </li> <li> <code>battleye</code>                 (<code>bool</code>)             </li> <li> <code>battleye_type</code>                 (<code>str | None</code>)             </li> <li> <code>protected_since</code>                 (<code>date | None</code>)             </li> <li> <code>world_board</code>                 (<code>int | None</code>)             </li> <li> <code>trade_board</code>                 (<code>int | None</code>)             </li> </ul>"},{"location":"api/models/world/#tibiawikisql.models.world.World.name","title":"name  <code>pydantic-field</code>","text":"<pre><code>name: str\n</code></pre> <p>The name of the world.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.pvp_type","title":"pvp_type  <code>pydantic-field</code>","text":"<pre><code>pvp_type: str\n</code></pre> <p>The world's PvP type.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.location","title":"location  <code>pydantic-field</code>","text":"<pre><code>location: str\n</code></pre> <p>The world's server's physical location.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.is_preview","title":"is_preview  <code>pydantic-field</code>","text":"<pre><code>is_preview: bool\n</code></pre> <p>Whether the world is a preview world or not.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.is_experimental","title":"is_experimental  <code>pydantic-field</code>","text":"<pre><code>is_experimental: bool\n</code></pre> <p>Whether the world is a experimental world or not.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.online_since","title":"online_since  <code>pydantic-field</code>","text":"<pre><code>online_since: date\n</code></pre> <p>Date when the world became online for the first time.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.offline_since","title":"offline_since  <code>pydantic-field</code>","text":"<pre><code>offline_since: date | None\n</code></pre> <p>Date when the world went offline.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.merged_into","title":"merged_into  <code>pydantic-field</code>","text":"<pre><code>merged_into: str | None\n</code></pre> <p>The name of the world this world got merged into, if applicable.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.battleye","title":"battleye  <code>pydantic-field</code>","text":"<pre><code>battleye: bool\n</code></pre> <p>Whether the world is BattlEye protected or not.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.battleye_type","title":"battleye_type  <code>pydantic-field</code>","text":"<pre><code>battleye_type: str | None\n</code></pre> <p>The type of BattlEye protection the world has. Can be either green or yellow.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.protected_since","title":"protected_since  <code>pydantic-field</code>","text":"<pre><code>protected_since: date | None\n</code></pre> <p>Date when the world started being protected by BattlEye.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.world_board","title":"world_board  <code>pydantic-field</code>","text":"<pre><code>world_board: int | None\n</code></pre> <p>The board ID for the world's board.</p>"},{"location":"api/models/world/#tibiawikisql.models.world.World.trade_board","title":"trade_board  <code>pydantic-field</code>","text":"<pre><code>trade_board: int | None\n</code></pre> <p>The board ID for the world's trade board.</p>"}]}